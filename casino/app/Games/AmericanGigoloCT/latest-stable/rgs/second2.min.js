var hpp, scl, help, QAswLength = 0,
    QAtrace = "",
    bgS = "background-size:",
    bgI = "background-image:url(",
    stEnd = ");}</style>",
    divB = '<div id="',
    stP = '" style="position:absolute;',
    he = "px;height:",
    wi = "px;width:",
    le = "px;left:",
    to = "px;top:",
    ta = "text-align:right;",
    bgP = ' style="background-position:',
    btd = "btnDisabled",
    no = "none",
    bl = "block",
    ck = "click",
    sv = "SVG.</svg>",
    de = "</div>",
    bi = "px;display:block;",
    den = '">' + de,
    oo = "0px 0px",
    wp = "#frameWinnerPaid",
    gm = "#buttonGameMenu",
    bmh = "#btnMenuHelp",
    bd = "#buttonDenom",
    st = "#buttonStart",
    smallSymOff = 2,
    hb = "#helpButtons",
    m4 = "#mess4",
    pl = "#payLines",
    pt = "#payTable",
    hbE = "#helpButtonsExit",
    listenrsOn = 0,
    DBLwait = 0,
    br = "<br>",
    ae = "animationend",
    GL = "#gameLayer",
    GC = "#gameContainer",
    sc = "#scrollbar-container",
    sb = "#scrollbar",
    channelSpin = null,
    addInt = '" class="interfaceSign" style="background-image: url(',
    bhi = "#buttonHistory",
    bibgI = bi + bgI,
    bgUrl = "px;" + bgI,
    oldJpAmmount = [],
    rotateAmmount = [0, 0, 0, 0],
    inShowJackpotLevels = 0,
    hideExSymbols = 0,
    startWait = 0,
    reelStarted = !1,
    inHelp = 0,
    screenActive = 0,
    exWildVideoCount = 0,
    divcl = '<div class="',
    ans = "animmap_sym_",
    bSb = "#buttonStartBlinck",
    bSb1 = "#buttonStartBlinck1",
    bGMb = "#buttonGameMenuBlinck",
    bGMb1 = "#buttonGameMenuBlinck1",
    gmI = "#gameMenuInterface",
    small = divcl + 'smallSym_main" ' + bgP + "-",
    sdiv = divcl + 'paytableDigits"' + bgP + "-",
    pd = "px" + den,
    ediv = "px 0" + pd,
    stopAll = 0,
    sym_names = [],
    tabloJackpotLevelsTimer = null,
    jp_current_levelsTop = [],
    jpNum = 0,
    jpStartShow = 1,
    freeround_win = 0,
    ye = "yellow",
    startState = "",
    resultSymbols = [],
    gameWin = 0,
    autoplay = 0,
    divEnd = ")" + den,
    portret = !1,
    jpsystems = null,
    CTSlotAppVersion = "2.033 (10.09.2019)";

function CTSlotApp() {
    var e, t, n, o, a, r, l, u, m, p, d, g, f, _, h, S, x, y, w, v, T, C, k, A, B, O, I, W = ["goldFrame", "silverFrame", "bronzeFrame", "leadFrame"],
        L = ["top_name", "top_wild", "top_wild2", "top_fg", "top_appears", "top_bonus", "top_jackpot"],
        R = "#symbolHelp_frame",
        j = "#showWins_frame",
        E = "#Top",
        M = "#topAditional_frame",
        N = "#topAditional_frame2",
        D = "#frameTotalBet",
        P = ".menu_string1",
        G = ".menu_string2",
        H = ".string1",
        z = ".string2",
        F = "#betNumber",
        U = "#linesNumber",
        q = "#congr_text",
        J = "#congr_text0",
        X = "#congr_text1",
        Y = "#attraction",
        V = "service_bet",
        Q = 0,
        K = "#lock-container",
        Z = 0,
        ee = 0,
        te = 1,
        se = 0,
        ne = 1,
        oe = 0,
        ie = {
            GOLD: [0, 0],
            SILVER: [20, 46],
            BRONZE: [40, 92],
            LEAD: [60, 138],
            MEGA: [80, 184],
            MAJOR: [100, 230],
            MINOR: [120, 276],
            MINI: [140, 322],
            happy_hour: [160, 368]
        },
        re = [],
        ue = 0,
        ce = 0,
        me = ' style="fill:rgba(0,0,255,.01);stroke-width:5;stroke:',
        pe = this,
        ge = 0,
        be = 0,
        fe = 5,
        _e = 5,
        Se = 5,
        $e = 0,
        xe = 0,
        we = !0,
        ve = [],
        Te = 0,
        Ce = 0,
        ke = 0,
        Ae = 100,
        Be = 100,
        Oe = 0,
        Ie = 200,
        We = 0,
        Le = 0,
        Re = 0,
        je = 0,
        Ee = 0,
        Me = "",
        Ne = [],
        De = [0, 0, 0, 0, 0],
        Pe = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        Ge = 0,
        He = !0,
        ze = 0,
        Fe = !0,
        Ue = -1,
        qe = 0,
        Je = null,
        Xe = 0,
        Ye = !1,
        Ve = [],
        Qe = -1,
        Ke = -1,
        Ze = 0,
        et = !1,
        tt = !0,
        nt = !1,
        ot = !1,
        at = !0,
        it = !1,
        rt = 1,
        lt = !1,
        ut = 0,
        ct = !1,
        mt = 0,
        pt = 0,
        dt = 0,
        gt = 0,
        bt = 0,
        ft = 0,
        _t = 0,
        ht = 0,
        St = 0,
        $t = !1,
        xt = 0,
        yt = 0,
        wt = null,
        vt = 0;

    function Tt() {
        0,
        _t = (new Date).getTime();
        var e = "";
        if (null != currSubgame && currSubgameIndex > 0 && ot) switch (currSubgame.subgame_label) {
            case "free2":
                e = langText.superGame_text1 + currSubgame.subgame_label_game_number + langText.superGame_text2 + currSubgame.subgame_label_game_total, ++be;
                break;
            case "free":
                e = langText.freeGame_text1 + currSubgame.subgame_label_game_number + langText.freeGame_text2 + currSubgame.subgame_label_game_total
        } else autoplay ? (bt == gt && ($(gm).css("display", no), $(gmI).append(divB + "buttonGameMenuBlinck" + addInt + oS.getSprite("signStopAuto").src + ")" + den), setButtonOn(bGMb, Nn), sizeHandler()), e = langText.autoplaysLeft1 + bt + langText.autoplaysLeft2 + gt, 0 == --bt && Dn()) : freeround_limit && (e = langText.FREE_spinsLeft1 + ++freeround_play + langText.FREE_spinsLeft2 + freeround_limit);
        for (var t = 0; t < reelC; t++) _aMovingColumns[t].startAnim();reelStarted = !0,
        $(msb).find(ms1).html(Ye ? "DEMO" + Te + " " : (freeround_limit ? "" : langText.goodLUCKtext) + e),
        Ye = !1
    }

    function Ct(e) {
		

		
        currBetPerLine += e, currBetPerLine < gameConfig.line_min_bet && (currBetPerLine = gameConfig.line_max_bet), currBetPerLine > gameConfig.line_max_bet && (currBetPerLine = gameConfig.line_min_bet), Bt(), ms(D, currTotalBet + extraBet * currBetPerLine, gameConfig.line_max_bet != gameConfig.line_min_bet ? 45 : 0), kt(), $(F).find(P).html(pe.cash(currBetPerLine)), $("#frameBetLabel").html(langText.BETtext + ": " + pe.cash(currBetPerLine))
    }

    function kt() {
        ct && totalBetLock && (currNumLines === gameConfig.lines_max_number && currBetPerLine === gameConfig.line_min_bet || Q ? (setButtonOn(K, ho), $(K).css("opacity", 1)) : ($(K).css("opacity", .3), setButtonOff(K, ho)))
    }

    function At(e) {
        $(".linesN").css({
            "font-size": "20px",
            color: "white"
        });
        var t = {
            "font-size": "25px",
            color: ye
        };
        $("#q_stepL" + e).css(t), $("#q_stepR" + e).css(t), xn(e, 1), Bt(), ms(D, currTotalBet + extraBet * currBetPerLine, gameConfig.line_max_bet != gameConfig.line_min_bet ? 45 : 0), kt(), $(U).find(P).html(currNumLines)
   
   }

    function Bt() {
		
        currTotalBet = currNumLines * currBetPerLine / gameConfig.lines_per_credit, Sn(), Et()
		console.error(fo(currTotalBet));
		$("#frameTotalBet").find(".string1").html(fo(currTotalBet));
    }

    function Ot() {
        $("div").children(".animSym").remove(), $("div").children(".bgSym").css("display", bl)
    }

    function It() {
        if (QAtrace = "\nSTART\n", ht = 0, oe = 0, (mt + currSession.gameplay_mintime < (new Date).getTime() || mt < 1) && ("gameInit" === state || "prevWinDisplayLoop" === state)) {
            if (En(), m / currDenom.cents < currTotalBet && !freeround_limit) switch (autoplay) {
                case 1:
                    Dn(), Et();
                case 0:
                    return void Bn()
            }
            freeround_limit || (Z += currTotalBet), animate(st, parseInt($(st).css("background-size")), {
                start: [0, 16],
                speed: 40
            }, 0), u && u.stop(), $("div").children(".sticked").remove(), $(".PtP_bonus").remove(), De = [0, 0, 0, 0, 0], Pe = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], clearTimeout(g), clearTimeout(d), startState = "", mt = (new Date).getTime(), freeround_limit || (m = parseInt(playerAccount.credit) - (currTotalBet + extraBet * currBetPerLine) * currDenom.cents, zn(), "last_win" === show_win ? ($(wp).find(z).html(langText.LastWin), $(wp).find(H).css({
                color: "gray"
            })) : ($(wp).find(z).html(langText.WINtext), $(wp).find(H).html(""))), vn(), Ot(), Tt(), hideExSymbols = 1, Sn(), lt = !1, nt = !1, tt = !0, dt = 0, history_currDenom = currDenom, gotoNextState(!1), $(j).html(""), se = 0, Fe && ds(Lt)
        }
    }

    function Wt() {
        ot && (soundOn && gameAConf.free_respins_sounds && (createjs.Sound.play(gameAConf.free_respins_sounds[ht]), ++ht >= gameAConf.free_respins_sounds.length && (ht = 0)), Ot(), Tt(), subgamesList[currSubgameIndex].start_subgame_timestamp = (new Date).toISOString().replace("T", " "), gameAConf.sticked_bonus && _ && currSubgameIndex === parseInt(subgamesList[0].scatters_win[0].bonus_value) && Pe.forEach(function(e, t) {
            if (e) {
                var s = "unsticked",
                    n = oS.getSprite(s),
                    o = "#stS" + t;
                s = ans + s, $(o).css({
                    "background-image": "url(" + n.src + ")",
                    "background-size": n.width + "px " + n.height + "px"
                }), soundOn && createjs.Sound.play("wild_unstick"), animate(o, n.width, gCl[s], !1)
            }
        }), se = 0, startState = subgamesList[currSubgameIndex].subgame_label, Fe && ds(Lt)), at = !0, gotoNextState()
    }

    function Lt() {
        if (QAtrace += " stopClickHandler: \n", gs(Lt), startState = "skillStop", animate(st, parseInt($(st).css("background-size")), {
                start: [16, 23],
                speed: 80
            }, 1), "subgameAnimFinished" === state) {
            var e = currSubgame.subgame_bonus[0];
            if ((!e || "modify_reels" !== e.type && "expanding_wilds_by_chance" !== e.type) && !se)
                for (var t = 0; t < reelC - (0 == gameConfig.reel_rotate_mintime ? 0 : 1); t++) _aMovingColumns[t].stopRotating()
        }
    }

    function Rt() {
        $(Y).off(ae, Rt), ue && ++yt < gameAConf.wizard_.length ? fn("wizard_", Rt, yt) : (bn(), ne = 1, gameAConf.bigAnim_attraction && fn("bigAnim_attraction", tn, 0))
    }

    function jt() {
        if (ke = !ke, !stopAll) {
            switch (Ce) {
                case 0:
                    $(msb).find(ms1).html(ke ? m > 0 ? langText.pressSTARTTtext : "" : m > 0 ? langText.selectBETtext : langText.insertCREDITStext);
                    break;
                case 1:
                    $(msb).find(ms1).html(ke ? gameAsset.text.chooseWildText : "")
            }
            g = setTimeout(jt, ke ? Ae : Be)
        }
    }

    function Et() {
        (autoplay || inIntJackpot || stopAll || inDouble || "gameInit" != state && "prevWinDisplayLoop" != state || freeround_limit) && !inJackpot || (inJackpot = 0, clearTimeout(g), ke = 1, initial_bet ? (Ae = 300, Be = 100, Ce = 2) : (Ae = Be = 1e3, Ce = 0, $(msb).find(ms1).html(m > 0 ? langText.selectBETtext : langText.insertCREDITStext)), g = setTimeout(jt, Ae))
    }

    function Mt() {
        inJackpot = 0, gs(Mt), clearTimeout(g), startState = "", _App.idleTimerStop();
        var e, t = 17;
        soundOn && (e = createjs.Sound.play("service_credit_loop", {
            loop: -1
        })), Xe = 0, B < 25 ? t = 3 : B < 45 ? t = 7 : B > 1e6 ? t = 11111 : B > 1e5 ? t = 151 : B > 1e4 && (t = 53), x = setInterval(function() {
            var s = ++Xe * t;
            B < s ? (m += B, B = 0) : (B -= s, m += s), zn(), 0 === B && (soundOn && (e.stop(), createjs.Sound.play("service_credit_end")), clearInterval(x), x = null, $(J).html(""), $(X).html(""), $(cw).css({
                display: no
            }), pe.startSubgameShowWin())
        }, 100)
    }

    function Nt() {
        jackpotCommand.hits.length && (startState = "takeJackpot", jackpotCommand.hits.forEach(function(e) {
            var t = jackpotCommand.jpsystems[e.jpsystem_number];
            $(q).html(langText.CONGRATULATIONStext), $(q).css("color", "#ff6e00"), $(J).html(br + langText.YOU_HITtext + t.levels[e.level_id].level_name + langText.JACKPOTtext + langText.WONtext), $(J).css("color", "#ff6e00"), $(X).html(br + Gn(B = e.amount_cents) + ("" == CurrencySign ? " " + Currency : "")), $(X).css("color", ye), g = setInterval(function() {
                $(q).css({
                    color: ++vt % 2 ? "#ff6e00" : "white"
                })
            }, 280), $(cw).css({
                display: bl
            }), createjs.Sound.play(e.level_id < 2 ? "jpWinBL" : "jpWinGS"), $(msb).find(ms1).html(langText.pressSTARTTtext)
        }), ze = 1, ds(Mt), _App.idleTimerStart())
    }

    function Dt() {
        $(Y).off(ae, Dt), ue && ++yt < gameAConf.jackpotWin.length ? fn("jackpotWin", Dt, yt) : (bn(), Nt())
    }

    function Pt() {
        Nn(), gameAConf.jackpotWin ? (soundOn && (t = createjs.Sound.play("ring_fg")), fn("jackpotWin", Dt, 0)) : Nt()
    }

    function Gt() {
        Nn(), channelSpin && channelSpin.stop(), En(), $(GC).append('<iframe id="interactiveFrame' + stP + 'width:100%;height:778px;z-index:10;border-width:0px;" src="../rgs/interactive_neon.html"><iframe>')
    }

    function Ht(e) {
        if (1 === We) {
            ++Le >= currWaitReq.continue_params[0].values.length && (Le = 0);
            var t = "#" + e.target.offsetParent.childNodes[Le + 4].id;
            animate(t, parseInt($(t).css("background-size")), gCl[ans + "main_" + currWaitReq.continue_params[0].values[Le]], !0)
        } else We--
    }

    function zt(e) {
        var t = currWaitReq.continue_params[0].values.length,
            s = gameAConf.bonus_choise.bonuses,
            n = 0,
            o = "#" + e.currentTarget.id;
        $(o).off(ae, zt), $(o).css({
            "background-image": "url(" + oS.getSprite("bonus").src + ")",
            "background-position-y": "-" + s.indexOf(currWaitReq.bonus_hit.bonus_type + currWaitReq.bonus_hit.bonus_value) * SH + "px"
        });
        for (var a = 0; a < t; a++) {
            var i = "#choosWildPict_" + a,
                r = oS.getSprite("bonus_ua");
            $(i).css({
                "background-size": r.width + "px " + r.height + "px"
            }), i === o ? n = 1 : $(i).css({
                "background-image": "url(" + r.src + ")",
                "background-position-y": "-" + s.indexOf(currWaitReq.remaining_cards[a - n].bonus_type + currWaitReq.remaining_cards[a - n].bonus_value) * SH + "px"
            })
        }
        currSubgame.subgame_bonus[0].selected_hidden_card_index = currWaitParams[currWaitReq.continue_params[0].label] = o.split("_")[1], Kn(), it = !1, setTimeout(function() {
            $(R).css({
                display: no
            }), $(R).html(""), gameAConf.before_fg_attraction ? fn("before_fg_attraction", sn, 0) : gotoNextState()
        }, 2e3)
    }

    function Ft(e) {
        soundOn && (channelSpin && channelSpin.stop(), createjs.Sound.play(V));
        for (var t = currWaitReq.continue_params[0], s = t.values.length, n = "#" + e.currentTarget.id, a = 0; a < s; a++) {
            var i = "#choosWildPict_" + a;
            $(i).css("opacity", "1"), $(i).off(ck, Ft)
        }
        startState = "", _App.idleTimerStop(), currSubgame.subgame_bonus[0][t.label] = t[t.label] = n.split("_")[1], clearInterval(f), clearTimeout(g), $(msb).find(ms1).html(""), $("#t").remove(), Ot(), $(n).append(o + "<rect x=3 y=3 width=" + (SW - 6) + " height=" + (SH - 6) + ' style="fill:rgba(0,0,0,.01);stroke-width:6;stroke:rgb(255,255,0)"/>' + sv), animate(n, parseInt($(n).css("background-size")), gCl[ans + "main_" + gameAConf.select_multiplierSym + "_bonus"], 0), $(n).on(ae, zt)
    }

    function Ut() {
        var e = "top_fg_bonus_pict1",
            t = oS.getSprite(e);
        t ? $(E).css({
            "background-image": "url(" + t.src + ")",
            "background-size": t.width + "px " + t.height + "px",
            "background-position": gCl[e][2] + "px " + gCl[e][3] + "px"
        }) : $(E).css("background-image", no), $(N).css("display", bl), Ys(je = 0)
    }

    function qt(e) {
        startState = "", _App.idleTimerStop(), clearInterval(f), clearTimeout(g), $(msb).find(ms1).html(""), Ot();
        for (var t = "#" + e.currentTarget.id, s = t.split("_"), n = currWaitReq.continue_params[0], a = n.values.length, i = 0; i < a; i++) {
            var r = "#choosWildPict_" + n.values[i];
            $(r).off(ck, qt), $(r).off(ae, Ht), $(r).css("opacity", r === t ? "1" : ".5")
        }
        soundOn && (channelSpin && channelSpin.stop(), createjs.Sound.play(V)), currWaitParams[n.label] = n[n.label] = s[1], gameAConf.bonuses && gameAConf.bonuses[0].win_msg ? (gameAConf.bonuses[0].win_msg[0] = "\t" + (s[1] - 1), $("#topAditional_frame3").css({
            "background-position": "-" + (s[1] - n.values[0]) * parseInt($("#topAditional_frame3").css("width")) + "px 0"
        })) : $(M).css({
            "background-position": "-" + (s[1] - n.values[0]) * parseInt($(M).css("width")) + "px 0"
        });
        var l = 0,
            u = setInterval(function(e) {
                if (l % 2 == 0) $(t).append(o + "<rect x=3 y=3 width=" + (SW - 6) + " height=" + (SH - 6) + ' style="fill:rgba(0,0,0,.01);stroke-width:6;stroke:rgb(255,255,0)"/>' + sv);
                else if ($(t).html(""), 5 == l) {
                    $(R).css({
                        display: no
                    }), $(R).html(""), clearInterval(u);
                    var s = oS.getSprite("background_free");
                    if (s && $(GL).css({
                            "background-image": "url(" + s.src + ")"
                        }), recovery && (ot = !0, Tt()), gameAConf.bonuses && (0 == gameAConf.bonuses[0].in_bonus_change_top && (He = !1, $t = !0), "free" == gameAConf.bonuses[0].bonus_start)) switch (gameAConf.bonuses[0].bonus_type) {
                        case "score":
                            Ut()
                    }
                    He && -1 == Ue && Kn(), gameAConf.before_fg_attraction ? fn("before_fg_attraction", sn, 0) : gotoNextState()
                }
                l++
            }, 250)
    }

    function Jt() {
        switch (startState = "", _App.idleTimerStop(), gs(Jt), recovery || currSubgameIndex++, currWaitReq = subgamesList[currSubgameIndex], currWaitParams = {}, recovery = !1, $("#bonus_screen").remove(), $(msb).find(ms1).html(""), soundOn && channelSpin.stop(), Ue = -1, Kn(), subgamesList[currSubgameIndex - 1].bonus_hit.bonus_type) {
            case "super_games":
                fn("super_games", un, 0), soundOn && (t = createjs.Sound.play("ring_fg"));
                break;
            case "free_games":
                fn("free_games", ln, 0), soundOn && (t = createjs.Sound.play("ring_fg"));
                break;
            case "inc_factor_plus":
                continueCmd()
        }
    }

    function Xt() {
        if (_App.idleTimerStop(), recovery) pe.continueBonus();
        else {
            $(".ua").css({
                display: bl
            });
            for (var e = currWaitReq.continue_params[0].values.length, t = 0; t < e; t++) $("#bonus" + t).off(ae, Xt);
            continueCmd(!1)
        }
    }

    function Yt(e) {
        recovery = !1, $("#" + e.currentTarget.id).off(ae, Yt), $("#bonusC0").css({
            display: bl
        });
        var t = currWaitReq.continue_params[0].values,
            s = gameAConf.bonus_choise,
            n = t.length;
        if (soundOn && createjs.Sound.play(s.sounds[t[0]]), s.close)
            for (var o = 0; o < n; o++) {
                var a = !0;
                (i = "#bonus" + o) != "#" + e.currentTarget.id && (animate(i, parseInt($(i).css("background-size")), s.close, !1, s.size[0]), a && ($(i).on(ae, Xt), a = !1))
            } else {
                for (o = 0; o < n; o++) {
                    var i = "#bonus" + o,
                        r = oS.getSprite("bonus_close");
                    i != "#" + e.currentTarget.id && $(i).css({
                        "background-image": "url(" + r.src + ")",
                        "background-size": String(r.width) + "px " + r.height + "px"
                    })
                }
                Xt()
            }
    }

    function Vt(e) {
        clearTimeout(r);
        var t, s, n, o = 0,
            a = e.currentTarget.id.slice(5),
            i = gameAConf.bonus_choise,
            l = i.size,
            u = recovery && "continue_play_after_preselected_random_choice" === currWaitReq.subtype;
        u ? (t = gameResume.last_result[currSubgameIndex - 1].continue_params[0], s = gameResume.last_result[currSubgameIndex - 1].bonus_hit, n = gameResume.last_result[currSubgameIndex - 1].remaining_cards) : (t = currWaitReq.continue_params[0], s = currWaitReq.bonus_hit, n = currWaitReq.remaining_cards, currSubgame.subgame_bonus[0].selected_hidden_card_index = currWaitParams[t.label] = a, soundOn && createjs.Sound.play("bonus_select"));
        var c = t.values.length;
        for ("super_games" == s.bonus_type && (ge = s.bonus_value, be = 0), $(".chBon").off(ck, Vt), isMobile || ($(".chBon").off("mouseover", setcursorPointer), $(".chBon").off("mouseout", setcursorAuto)); o < c;) i.bonuses[o] == s.bonus_type + s.bonus_value && (t.values[0] = o, t.values[o] = 0), o++;
        var m = oS.getSprite("choise_bonus"),
            p = m.height / c,
            d = 0,
            g = '" class="ua"' + stP + " background-position-y:-",
            b = he + p + wi,
            f = to + (l[1] - p) / 2 + bibgI,
            _ = divB + "bonusC";
        for ($("#bonus" + a).append(_ + a + g + p * t.values[0] + b + m.width + le + (l[0] - m.width) / 2 + f + m.src + ");" + bgS + m.width + "px " + m.height + pd), $("#bonus" + a).css("cursor", "auto"), f = b + (m = oS.getSprite("choise_bonus_ua")).width + le + (l[0] - m.width) / 2 + f + m.src + ");" + bgS + m.width + "px " + m.height + pd, o = 0; o < c; o++) o != a && ($("#bonus" + o).append(_ + o + g + p * i.bonuses.indexOf(n[d].bonus_type + n[d].bonus_value) + f), d++);
        u ? Xt() : ($(".ua").css({
            display: no
        }), animate("#bonus" + a, parseInt($("#bonus0").css("background-size")), i.open, !1, l[0]), $("#bonus" + a).on(ae, Yt)), subgamesList[currSubgameIndex + 1].start_subgame_timestamp = (new Date).toISOString().replace("T", " ")
    }

    function Qt(e) {
        for (var t, s, n = currSubgame.subgame_bonus[0], a = currSubgame.scatters_win[0].positions, i = gameAConf.bonus_choise.bonuses, r = 0, l = !1, u = '" class="PtP_bonus"' + stP + "height:" + SH + wi + SW + bibgI, c = a.length, m = 0; m < c; m++) {
            var p = e.offsetX + lay.symbolColsX[0],
                d = e.offsetY + lay.symbolRowsY[0],
                g = a[m][0];
            if (p > lay.symbolColsX[g] && p < lay.symbolColsX[g] + SW && d > lay.symbolRowsY[g] && d < lay.symbolRowsY[g] + SH) {
                l = !0, t = "bonus", Ot(), n.selected_hidden_card_index = currWaitParams.selected_hidden_card_index = g, soundOn && createjs.Sound.play("bonus_select"), Kn(), $(j).append(o + "<rect x=" + (lay.symbolColsX[m] - lay.symbolColsX[0]) + " y=" + (lay.symbolRowsY[m] + 5 - lay.symbolRowsY[0]) + " width=" + SW + " height=" + SH + me + (gameAConf.win_color || "#FFFF00") + '"/>' + sv), $(msb).find(ms1).html(langText.SCATTERStext + small + (n.symbol - 1) * smallSymbolW + "px 0" + pd + " = " + pe.cash(n.win)), s = oS.getSprite(t), $("#reel_frame_" + g).append(divB + t + g + u + s.src + ");background-position-y:-" + i.indexOf(currWaitReq.bonus_hit.bonus_type + currWaitReq.bonus_hit.bonus_value) * SH + "px;" + bgS + s.width + "px " + s.height + pd), ps(n.win), it = !1, Hs(), channelSpin && channelSpin.stop();
                break
            }
        }
        if (l) {
            $(j).off(ck, Qt), startState = "", _App.idleTimerStop(), t = "bonus_ua", s = oS.getSprite(t);
            for (var b = "px;" + bgS + s.width + "px " + s.height + pd, f = 0; f < c; f++) m == f ? r = 1 : $("#reel_frame_" + a[f][0]).append(divB + t + f + u + s.src + ");background-position-y:-" + i.indexOf(currWaitReq.remaining_cards[f - r].bonus_type + currWaitReq.remaining_cards[f - r].bonus_value) * SH + b)
        }
    }

    function Kt() {
        r = setTimeout(Kt, 1e3 * (Math.floor(3 * Math.random()) + 2)), animate("#bonus" + Math.floor(5 * Math.random()), parseInt($("#bonus0").css("background-size")), gameAConf.bonus_choise.before, !1, gameAConf.bonus_choise.size[0])
    }

    function Zt() {
        soundOn && (channelSpin = createjs.Sound.play("bonus_background_loop", {
            loop: -1
        }));
        var e = oS.getSprite("background_bonus"),
            t = gameAConf.bonus_choise,
            s = '" class="chBon"' + stP + " z-index:6; height:" + t.size[1] + wi + t.size[0] + le;
        $(msb).find(ms1).html(""), Ot(), $(GC).append(divB + "bonus_screen" + stP + "top:" + $(GL).css("top") + "; z-index:3; height:768" + wi + "1024" + le + "68" + bibgI + e.src + ");" + bgS + e.width + "px " + e.height + pd), e = oS.getSprite("bonus_animation");
        var n = bibgI + e.src + ");" + bgS + e.width + "px " + e.height + pd;
        t.positions.forEach(function(e, t) {
            $("#bonus_screen").append(divB + "bonus" + t + s + e[0] + to + e[1] + n)
        }), $(".chBon").on(ck, Vt), isMobile || ($(".chBon").on("mouseover", setcursorPointer), $(".chBon").on("mouseout", setcursorAuto)), startState = "select_card"
    }

    function es(e) {
        if ($(j).off(ck, es), 1 == reelR) {
            for (var t = 0; t < reelC; t++) {
                var s = e.offsetX + lay.symbolColsX[0],
                    n = e.offsetY + lay.symbolRowsY[0];
                if (s > lay.symbolColsX[t] && s < lay.symbolColsX[t] + SW && n > lay.symbolRowsY[t] && n < lay.symbolRowsY[t] + SH) break
            }
            o = 0
        } else {
            for (t = 0; t < gCc; t++) {
                if ((s = e.offsetX + lay.symbolColsX[0]) > lay.symbolColsX[t] && s < lay.symbolColsX[t] + SW) break
            }
            for (var o = 0; o < gameConfig.rows; o++) {
                if ((n = e.offsetY + lay.symbolRowsY[0]) > lay.symbolRowsY[o] && n < lay.symbolRowsY[o] + SH) break
            }
        }
        if (t < reelC && o < reelR) {
            $(R).css({
                display: bl
            }), _o(306, R);
            s = 554 - SW >> 1, n = 60;
            var a = resultSymbols[t][o],
                i = oS.getSprite("main_" + a),
                r = ans + "main_" + a,
                l = gameConfig.paytables[gameConfig.subgames_labels.main.subgame_id],
                u = "",
                c = "",
                m = [];
            if (i || (i = oS.getSprite("sym_main_" + a)), $(R).append(divB + a + '" style="position:relative;height:' + SH + wi + SW + le + s + to + n + bibgI + i.src + ");" + bgS + i.width + "px " + i.height + pd), r in gCl && animate("#" + a, i.width, gCl[r], !1), setTimeout(function() {
                    $(R).css({
                        display: no
                    }), $(R).html(""), screenActive && $(j).on(ck, es)
                }, 2e3), gameAsset.text.help.symbol_Help && a == gameAsset.text.help.symbol_Help[0]) u = gameAsset.text.help.symbol_Help[1];
            else {
                if (t = 0, m.push([]), m.push([]), a in l.paytable)
                    for (var p in l.paytable[a]) m[0][t] = p, m[1][t] = pe.cash(l.paytable[a][p].factor * currBetPerLine), t++;
                else if (l.paytable_scatters)
                    for (var p in l.paytable_scatters[a]) m[0][t] = p, m[1][t] = pe.cash(l.paytable_scatters[a][p].factor * currTotalBet), t++;
                for (; t > 0;) t--, u += m[1][t] + br, c += m[0][t] + br;
                $(R).append(divcl + 'symNum">' + c + de), $(".symNum").css({
                    left: s + 30 + Number(SW) + "px"
                })
            }
            $(R).append(divcl + 'symAmmount">' + u + de)
        } else screenActive && $(j).on(ck, es)
    }

    function ts() {
        recovery = !1, clearTimeout(p), setButtonOff(bSb, ns), $(bSb).remove(), $(gmI).append(divB + "buttonStartBlinck1" + addInt + oS.getSprite("signTake").src + ")" + den), $(st).css("display", no), gs(as), startState = "", _App.idleTimerStop(), inDouble = 1, rt = 0, js(), setButtonOff(bGMb, ts), $(bGMb).remove(), $(gmI).append(divB + "buttonGameMenuBlinck1" + addInt + oS.getSprite("signX2").src + ")" + den), animate(bGMb1, parseInt($(bGMb1).css("background-size")), {
            start: [0, 7],
            speed: 40
        }, 0), $(bGMb1).on(ae, ss), sizeHandler()
    }

    function ss() {
        $(bGMb1).off(ae, ss), $(msb).find(ms1).html(""), clearTimeout(h), ao(), $(j).html(""), dbl.DoubleEnter()
    }

    function ns() {
        setButtonOff(bSb, ns), $(bSb).remove(), setButtonOff(bGMb, ts), $(bGMb).remove(), $(gmI).append(divB + "buttonStartBlinck1" + addInt + oS.getSprite("signTake").src + ")" + den), animate(bSb1, parseInt($(bSb1).css("background-size")), {
            start: [0, 7],
            speed: 40
        }, 0), sizeHandler(), $(bSb1).on(ae, os)
    }

    function os() {
        startState = "", _App.idleTimerStop(), $(bSb1).off(ae, os), $(bSb1).remove(), setButtonOff(bGMb, ts), $(bGMb).remove(), $(gm).css("display", bl), $(st).css("display", bl), ut = 0, lt = !0, at = !0, Ke = currSubgame.lines_win.length, Qe = currSubgame.scatters_win.length, $(msb).find(ms1).html(""), Es(), rt = 1, gotoNextState()
    }

    function as() {
        animate(st, parseInt($(st).css("background-size")), {
            start: [16, 23],
            speed: 80
        }, 1), gs(as), clearTimeout(p), os(), oe = 1
    }

    function is() {
        gs(is), Xe = gameWin
    }

    function rs() {
        gs(rs), Xe = freeround_win
    }

    function ls() {
        xt = 3, cs(), soundOn && us()
    }

    function us() {
        t.volume > .05 ? (t.volume -= .05, setTimeout(us, 150)) : t.stop()
    }

    function cs() {
        switch (xt) {
            case 3:
                soundOn && t.removeAllEventListeners();
            case 1:
                xt = 0, $("body").css({
                    "background-image": "url(" + $(oS.getSprite("background_online_1920")).attr("src") + ")"
                }), gs(ls), clearTimeout(n), $(Y).off(ae, cs), $(Y).remove(), gotoNextState();
                break;
            case 2:
                var e = oS.getSprite("bigWin2");
                $(Y).off(ae, cs), $(Y).css({
                    height: isMobile ? 143 : 570,
                    top: isMobile ? 305 : 90,
                    "background-position": oo,
                    "background-image": "url(" + e.src + ")"
                }), xt = 3, soundOn && t.addEventListener("complete", cs), animate(Y, e.width, {
                    start: [0, 32],
                    loop: [0, 32],
                    speed: 40
                }, 0)
        }
    }

    function ms(e, t, s) {
        s = null != s ? s : 0, $(e).find(H).html("string" == typeof t ? t : pe.cash(t));
        var n = Math.floor((parseInt($(e).width()) - 12 - s) / parseInt($(e).find(H).width()) * parseInt($(e).find(H).css("font-size")));
        $(e).find(H).css("font-size", n <= 50 ? n + "px" : 50)
    }

    function ps(e) {
		e=parseFloat(e);
        gameWin += Number(e), freeround_win += Number(e), ms(wp, freeround_limit ? freeround_win : gameWin);
		

gameWin= Number(gameWin).toFixed(2);
freeround_win= Number(gameWin).toFixed(2);
gameWin=parseFloat(gameWin);
freeround_win=parseFloat(freeround_win);

		
    }

    function ds(e) {
        QAtrace += "START handler:!" + startState + "!" + e.name + "\n", $(document).on("keyup", kn), a = e, setButtonOn(st, e)
    }

    function gs(e) {
        var t = a ? a.name : "NULL";
        QAtrace += "deactivateStart:!" + startState + "!" + e.name + "=" + t + "\n", startWait = 0, a === e && ($(document).off("keyup", kn), setButtonOff(st, e), a = null)
    }

    function bs() {
        gs(bs), animate(st, parseInt($(st).css("background-size")), {
            start: [16, 23],
            speed: 80
        }, 1), at = !1, js()
    }

    function fs() {
        if (rt)
            if ($(j).css("display", bl), (new Date).getTime() - _t > gameConfig.reel_rotate_mintime) {
                if (currSubgame.lines_win && currSubgame.lines_win.length && (2 != Ke || w || ut || !Fe || ds(bs), ++Ke < currSubgame.lines_win.length)) return void
                function() {
                    if (y = currSubgame.lines_win[Ke], !networkOut && !inHelp && !inDouble) {
                        if (!k && at) {
                            var e = langText.LINEtext + " " + (y.line_number + 1) + ": ",
                                t = y.subgame_win_factor,
                                s = y.wilds.length;
                            if (y.symbols.forEach(function(t) {
                                    e += divcl + "smallSym_" + (currSubgame.subgame_label in gameAsset.images ? currSubgame.subgame_label : "main") + '"' + bgP + "-" + (t - 1) * smallSymbolW + "px 0" + pd
                                }), s) {
                                !gameAConf["paytablecoord" + y.wilds[0].factor] || y.wilds[0].factor;
                                for (var n = 0; n < s; n++) t *= y.wilds[n].factor
                            }
                            var a = (t > 1 ? " x " + t : "") + " = " + pe.cash(y.win),
                                i = lay.symbolRowsY,
                                r = lay.symbolColsX,
                                l = SH >> 1,
                                u = SW >> 1,
                                c = o,
                                m = "",
                                p = gameAConf.win_color || "#FFFF00",
                                g = !0,
                                b = gameConfig.lines[y.line_number],
                                f = b.length;
                            $(msb).find(ms1).html(e + a);
                            for (var _ = 0; _ < f; _++)
                                if (g &= b[0] == b[_], _ < y.symbols.length) {
                                    var h = y.positions ? y.positions[_] : _;
                                    if (Ne[h] || De[h]) var S = 5,
                                        x = reelR * SH;
                                    else S = i[1 == reelR ? b[h] * gCc : b[h]] - i[0] + 5, x = SH;
                                    var v = "<rect x=" + (r[h] + 2 - r[0]) + " y=" + S + " width=" + (SW + 5) + " height=" + x;
                                    c += v + me + p + '"/>', m += v + ' fill="black"/>'
                                } if (g) c += "<rect mask=url(#hole) x=" + u + " y=" + (i[1 == reelR ? b[0] * gCc : b[0]] - i[0] + l + 2) + " width=" + (r[_ - 1] - r[0]) + " height=5 fill=" + p;
                            else {
                                for (c += '<polyline points="', _ = 0; _ < f; _++) c += r[_] + 2 - r[0] + u + "," + (i[1 == reelR ? b[_] * gCc : b[_]] - i[0] + l + 5) + " ";
                                c += '" mask=url(#hole) style="fill:none;stroke:' + p + ';stroke-width:5"'
                            }
                            c += '/><mask id="hole"><rect x=0 y=0 width=948 height=534 fill="white"/>' + m + "</mask>" + sv, $(j).append(c)
                        }
                        w || ut || (ps(y.win), soundOn && (y.win >= 10 * currTotalBet && !Ze ? (Ze = 1, createjs.Sound.play("service_bigwin")) : createjs.Sound.play("service_winline"))), d = setTimeout(function() {
                            $(j).html(""), fs()
                        }, T)
                    }
                }();
                if (w || ut || gs(bs), Ze = 0, gameAConf.sticked_bonus && _ && currSubgameIndex < parseInt(subgamesList[0].scatters_win[0].bonus_value))
                    for (var e = _.length, t = 0; t < e; t++) {
                        var s = "sticked",
                            n = oS.getSprite(s),
                            a = gCc * _[t].position[0] + parseInt(_[t].position[1]),
                            i = "stS" + a;
                        Pe[a] || (Pe[a] = 1, $("#reel_frame_" + _[t].position[1]).append(divB + i + '" class="sticked" ' + stP + "height:" + SH + wi + SW + to + _[t].position[0] * SH + bi + bgS + n.width + "px " + n.height + bgUrl + n.src + divEnd), s = ans + s, i = "#" + i, soundOn && createjs.Sound.play("wild_stick"), animate(i, n.width, gCl[s], !1))
                    }
                var r = currSubgame.subgame_bonus;
                if (r.length && ("coffee_magic" === r[0].type || r.length && "duck_spell" === r[0].type)) {
                    var l = r[0],
                        u = l.count,
                        c = "",
                        m = "",
                        p = o,
                        g = 5 - lay.symbolRowsY[0],
                        b = l.positions,
                        f = b.length;
                    u > 5 && (c = " x " + u, u = 1);
                    for (t = 0; t < f; t++) p += "<rect x=" + (lay.symbolColsX[b[t][1]] - lay.symbolColsX[0] + 5) + " y=" + (lay.symbolRowsY[b[t][0]] + g) + " width=" + SW + " height=" + SH + me + 'rgb(255,255,0)"/>';
                    $(j).append(p + sv);
                    var h = "main_" + l.symbol + "_bonus";
                    switch (pt = 0, l.type) {
                        case "coffee_magic":
                            for (var S = 0; S < u; S++) m += small + l.symbol * smallSymbolW + "px 0" + pd;
                            if (h in gameAsset.syms)
                                for (t = 0; t < f; t++) pt++, _aMovingColumns[b[t][1]].show(b[t][0], function(e) {
                                    null != e && ($("#" + e.currentTarget.parentNode.id + "BG").css("display", bl), $("#" + e.currentTarget.id).remove()), 0 == --pt && zs()
                                }, h);
                            break;
                        case "duck_spell":
                            var x = gameAConf.bonus_choise.bonuses.indexOf(currWaitReq.bonus_hit.bonus_type + currWaitReq.bonus_hit.bonus_value);
                            for (S = 0; S < u; S++) m += small + (x + 10) * smallSymbolW + "px 0" + pd;
                            for (t = 0; t < f; t++) pt++, h in gameAsset.images ? _aMovingColumns[b[t][1]].show(b[t][0], function(e) {
                                $("#" + e.currentTarget.id).css({
                                    display: bl,
                                    "background-size": SH + "px " + oS.getSprite("bonus").height + "px",
                                    "background-image": "url(" + oS.getSprite("bonus").src + ")",
                                    "background-position": "0px -" + x * SH + "px"
                                }), 0 == --pt && setTimeout(function() {
                                    $(".animSym").remove(), zs()
                                }, 500)
                            }, h) : _aMovingColumns[b[t][1]].setSymb1(b[t][0], "bonus", "0px -" + x * SH + "px", function() {
                                0 == --pt && zs()
                            })
                    }
                    $(msb).find(ms1).html(m + c + " = " + pe.cash(l.win)), soundOn && createjs.Sound.play("bonus"), ps(l.win)
                } else Gs()
            } else setTimeout(fs, (new Date).getTime() - _t)
    }

    function _s(e) {
        $("#" + e.currentTarget.id).off(ae, _s), 0 == --pt && fs()
    }

    function hs(e) {
        if (null != e) {
            var t = e.currentTarget.id;
            $("#" + t).off(ae, hs);
            var s = t.split("_");
            void 0 === gCl[ans + s[0] + "_" + s[1]].loop && ($("#" + this.parentNode.id + "BG").css("display", bl), $("#" + t).remove())
        }
        if (gameAConf.wild_x && A[s[2]][s[3]] > 1 && (++pt, _aMovingColumns[s[2]].show(s[3], _s, s[0] + "_" + s[1] + "_x" + (A[s[2]][s[3]] - 1))), 0 == --pt)
            if (gs($s), currSubgame.win > 0 && (gameAConf.x8 && 8 == currSubgame.subgame_factor || gameAConf.x4 && 4 == currSubgame.subgame_factor)) {
                var n = "x" + currSubgame.subgame_factor,
                    o = oS.getSprite(n);
                all_attractions && o ? ($(GL).append(divB + 'expandedWild_frame" ' + stP + "height:" + gameAConf[n][1] + wi + gameAConf[n][0] + le + gameAConf[n][2] + to + gameAConf[n][3] + bibgI + o.src + ");" + den), animate("#expandedWild_frame", o.width, {
                    start: [0, gameAConf[n][4]],
                    speed: gameAConf[n][5]
                }, !1), setTimeout(function() {
                    $("#expandedWild_frame").remove(), fs()
                }, gameAConf[n][6])) : fs()
            } else fs()
    }

    function Ss() {
        var e = 0;
        if (!w && !ut) {
            var t = !1,
                s = 0,
                n = currSubgame.subgame_label in gameAsset.images ? currSubgame.subgame_label : "main",
                o = currSubgame.lines_win.length;
            gameAConf.sticked_bonus && _ && currSubgameIndex === parseInt(subgamesList[0].scatters_win[0].bonus_value) && $("div").children(".sticked").remove(), A = [];
            for (var a = 0; a < reelC; a++) {
                A.push([]);
                for (var i = 0; i < reelR; i++) A[a].push(0)
            }
            for (var r = 0; r < o; r++) {
                var l = currSubgame.lines_win[r],
                    u = l.wilds ? l.wilds.length : 0;
                s < l.win && (e = l.symbol, s = l.win), t |= u;
                for (var c = l.symbol_count, m = 0; m < c; m++)
                    if (!Ne[m] && 0 == De[m]) {
                        var p = l.positions ? l.positions[m] : m,
                            d = parseInt(gameConfig.lines[l.line_number][p]);
                        1 == reelR && (p = d * gCc + p);
                        var g = 1 == reelR ? 0 : d,
                            b = ans + n + "_" + resultSymbols[p][g];
                        if (b in gCl || (b = ans + "main_" + resultSymbols[p][g]), b in gCl && !A[p][g] && (0 == Pe[gCc * g + p] || gameAConf.sticked_bonus) && (A[p][g] = 1, pt++, gameAConf.wild_x && u))
                            for (a = 0; a < u; a++)
                                for (i = 0; i < l.wilds[a].positions.length; i++) p == l.wilds[a].positions[i] && (A[p][g] += parseInt(l.wilds[a].factor))
                    }
            }
            if (currSubgame.all_screen_symbols_bonus && ($(msb).find(ms1).html("All animals bonus = " + pe.cash(currSubgame.all_screen_symbols_bonus.win)), ps(currSubgame.all_screen_symbols_bonus.win)), currSubgame.win > 0 && (gameAConf.x8 && 8 == currSubgame.subgame_factor || gameAConf.x4 && 4 == currSubgame.subgame_factor)) {
                var f = currSubgame.stop_reels.length,
                    h = gameConfig.paytables[currSubgame.reels_sets_name].paytable_wilds;
                for (i = 0; i < f; i++)
                    for (a = 0; a < reelR; a++) currSubgame.stop_reels[i][a] in h && (A[i][a] = 1)
            }
        }
        if (gameAConf.wild_zone && currSubgame.expanded_wilds.length && currSubgame.expanded_wilds.forEach(function(e) {
                A[e.wild_position[1]][e.wild_position[0]] = 0, pt--, e.expanded_positions.forEach(function(e) {
                    A[e[1]][e[0]] = 0, pt--
                })
            }), pt > 0) {
            gameAConf.wild_x && t || ds($s);
            var S = A.length;
            for (i = 0; i < S; i++)
                for (a = 0; a < reelR; a++) A[i][a] && _aMovingColumns[i].show(a, hs);
            if (soundOn)
                if (v && t && gameAsset.sounds.main_wild) createjs.Sound.play("main_wild");
                else if (gameAConf.winsSounds) {
                for (var x = 0, y = currSubgame.total_win / currTotalBet; y > gameAConf.winsSounds[x].le;) x++;
                createjs.Sound.play(gameAConf.winsSounds[x].name)
            } else {
                var T = "sym_" + currSubgame.subgame_label + "_" + e;
                createjs.Sound.play(gameAsset.sounds[T] ? T : "sym_main_" + e)
            }
        } else currSubgame.all_screen_symbols_bonus ? setTimeout(fs, 600) : fs()
    }

    function $s() {
        gs($s), animate(st, parseInt($(st).css("background-size")), {
            start: [16, 23],
            speed: 80
        }, 1), $(".animSym").each(function(e, t) {
            $("#" + t.id).trigger(ae, [ae, "Event"])
        })
    }

    function xs(e) {
        gs(Bs), $("#" + e.currentTarget.id).off(ae, xs), 0 == --exWildVideoCount && (gameAConf.exWilds_attraction && exWilds > 1 ? fn("exWilds_attraction", an, 0) : gameAConf.fg_wild_attraction && ot ? fn("fg_wild_attraction", gn, 0) : Ss())
    }

    function ys(e) {
        $("#" + e.currentTarget.id).off(ae, ys)
    }

    function ws(e) {
        null != e && $("#" + e.currentTarget.id).off(ae, ws), 0 == --exWildVideoCount && (gameAConf.wild_zone && currSubgame.expanded_wilds.length ? ($("div").children(".animSym").remove(), currSubgame.expanded_wilds.forEach(function(e) {
            var t = "main_" + e.symbol + "_wild_zone";
            _aMovingColumns[parseInt(e.wild_position[1])].show(e.wild_position[0], ys, t), e.expanded_positions.forEach(function(e) {
                _aMovingColumns[e[1]].show(e[0], ys, t)
            })
        }), Ss()) : gameAConf.exWilds_attraction && exWilds > 1 ? fn("exWilds_attraction", an, 0) : gameAConf.fg_wild_attraction && ot ? fn("fg_wild_attraction", gn, 0) : Ss())
    }

    function vs(e, t, s) {
        gameAConf.all_wilds_sound && soundOn && createjs.Sound.play("wild_zone");
        var n = t % 3;
        switch (currSubgame.expanded_wilds.length) {
            case 2:
                t > 2 && (n = (t - 2) % 3), (currSubgame.expanded_wilds[1].wild_position[0] < e && 2 == t || 0 === n) && (n = "");
                break;
            default:
                2 == currSubgame.expanded_wilds[0].wild_position[1] && (n = (t - 2) % 3)
        }
        _aMovingColumns[t].setSymb(e, "sym_main_" + s, ws, "main_" + s + n), exWildVideoCount++
    }

    function Ts() {
        if (Ee > 0) {
            soundOn && createjs.Sound.play("bonus"), Ee--;
            var e = currSubgame.subgame_bonus[0].bonuses[Ee];
            e.positions ? _aMovingColumns[e.positions[0][1]].show(e.positions[0][0], Xs, "main_" + e.symbols) : Xs(), $(msb).find(ms1).html("")
        } else {
            inBonus = !1;
            for (var t = 0, s = currSubgame.lines_win.length, n = 0; n < s; n++) {
                var o = currSubgame.lines_win[n];
                t |= o.wilds && o.wilds.length
            }
            t && gameAConf.fg_wild_attraction && ot ? fn("fg_wild_attraction", gn, 0) : Ss()
        }
    }

    function Cs() {
        if (ot && gameAConf.free_respins_tops) {
            if ($t = !0, currSubgame.free_game_total - currSubgame.free_game_number == 1) {
                $(".topDigits").remove();
                var e = "top_respins"
            } else e = "main_scatter_top", Ys(currSubgame.free_game_total - currSubgame.free_game_number);
            var t = oS.getSprite(e);
            t && ks(t, e)
        }
    }

    function ks(e, t) {
        $(E).css({
            "background-image": "url(" + e.src + ")",
            "background-size": e.width + "px " + e.height + "px",
            "background-position-x": gCl[t] ? gCl[t][2] + "px" : "center"
        })
    }

    function As() {
        gs(As), $(".expanded").trigger(ae, [ae, "Event"])
    }

    function Bs() {
        gs(Bs), $(".sticked").trigger(ae, [ae, "Event"])
    }

    function Os() {
        Cs(), (et || recovery && !ot && currSubgame.win > 0) && $(msb).find(ms1).html(""), Qe = -1, Ke = -1;
        var e = currSubgame.subgame_bonus;
        if (e.length && "increase_current_subgame_factor" === e[0].type) Ee = e[0].bonuses.length, Me = e[0].type, Ee > 0 && (inBonus = !0, Ts());
        else if (pt = 0, exWildVideoCount = 0, w || ut) Ss();
        else {
            _ = currSubgame.sticked_symbols;
            var t = !1,
                s = currSubgame.expanded_wilds,
                n = gameAConf.wild_zone;
            if (exWilds = s.length, n && exWilds) {
                var o = s[0],
                    a = parseInt(o.wild_position[0]),
                    i = parseInt(o.wild_position[1]),
                    r = o.symbol,
                    l = "main_" + r;
                if (l in gameAsset.images) {
                    if (exWilds > 1)
                        for (var u = s[1], c = o.expanded_positions, m = parseInt(u.wild_position[0]), p = parseInt(u.wild_position[1]), d = 0; d < c.length; d++) 2 === parseInt(c[d][1]) && parseInt(c[d][0]) >= m && c.splice(d, c.length - 1);
                    exWildVideoCount++, _aMovingColumns[i].show(a, ws), soundOn && createjs.Sound.play("wild_zone"), setTimeout(function() {
                        vs(a, i + 1, r), a + 1 < reelR && vs(a + 1, i, r), setTimeout(function() {
                            (exWilds < 2 || a < m) && vs(a, i + 2, r), a + 1 < reelR && (vs(a + 1, i + 1, r), a + 2 < reelR && vs(a + 2, i, r), setTimeout(function() {
                                (exWilds < 2 || a + 1 < m) && vs(a + 1, i + 2, r), a + 2 < reelR && vs(a + 2, i + 1, r), a + 3 < reelR && vs(a + 3, i, r), setTimeout(function() {
                                    (exWilds < 2 || a + 2 < m) && a + 2 < reelR && vs(a + 2, i + 2, r), a + 3 < reelR && (vs(a + 3, i + 1, r), exWilds < 2 && setTimeout(function() {
                                        vs(a + 3, i + 2, r)
                                    }, n))
                                }, n)
                            }, n))
                        }, n)
                    }, n), exWilds > 1 && (exWildVideoCount++, _aMovingColumns[p].show(m, ws), setTimeout(function() {
                        vs(m, p + 1, r), m + 1 < reelR && vs(m + 1, p, r), setTimeout(function() {
                            vs(m, p + 2, r), m + 1 < reelR && (vs(m + 1, p + 1, r), m + 2 < reelR && vs(m + 2, p, r), setTimeout(function() {
                                vs(m + 1, p + 2, r), m + 2 < reelR && vs(m + 2, p + 1, r), m + 3 < reelR && vs(m + 3, p, r), setTimeout(function() {
                                    m + 2 < reelR && vs(m + 2, p + 2, r), m + 3 < reelR && (vs(m + 3, p + 1, r), setTimeout(function() {
                                        vs(m + 3, p + 2, r)
                                    }, n))
                                }, n)
                            }, n))
                        }, n)
                    }, n))
                } else
                    for (d = 0; d < exWilds; d++)
                        for (var g = s[d].expanded_positions.length, b = 0; b < g; b++) _aMovingColumns[s[d].expanded_positions[b][1]].setSymb(s[d].expanded_positions[b][0], "sym_" + l, Ss)
            } else if (exWilds || _) {
                if (_) {
                    var f = _.length;
                    for (d = 0; d < f; d++)
                        if (0 == De[_[d].position[1]]) {
                            var h = _[d].symbol + "_expanded",
                                S = oS.getSprite(h),
                                x = '" class="sticked" ' + stP + "height:";
                            if (S) {
                                var y = "stS" + d;
                                De[_[d].position[1]] = 1, $("#reel_frame_" + _[d].position[1]).append(divB + y + x + SH * reelR + wi + SW + bi + bgS + S.width + "px " + S.height + bgUrl + S.src + divEnd), exWildVideoCount++, h = ans + h, y = "#" + y, $(y).on(ae, xs), startState = "stickedWildStop", setTimeout(function() {
                                    ds(Bs)
                                }, 1e3), animate(y, S.width, gCl[h], !1), t = !0, soundOn && createjs.Sound.play("main_exwild")
                            } else if (!gameAConf.sticked_bonus) {
                                var v = gCc * _[d].position[0] + parseInt(_[d].position[1]);
                                if (0 == Pe[v])
                                    if (Pe[v] = 1, y = "stS" + v, (h = "free_" + _[d].symbol) in gameAsset.images) S = oS.getSprite(h), $("#reel_frame_" + _[d].position[1]).append(divB + y + x + SH + wi + SW + to + _[d].position[0] * SH + bi + bgS + S.width + "px " + S.height + bgUrl + S.src + divEnd), h = ans + h, animate(y = "#" + y, S.width, gCl[h], !1);
                                    else if (S = oS.getSprite("sym_main_" + _[d].symbol), $("#reel_frame_" + _[d].position[1]).append(divB + y + x + SH + wi + SW + to + _[d].position[0] * SH + bi + bgS + SW + "px " + SH + bgUrl + S.src + divEnd), exWilds) {
                                    var T = s[d].expanded_positions.length;
                                    for (b = 0; b < T; b++) {
                                        var C = s[d].expanded_positions[b];
                                        y = "stS" + (v = gCc * C[0] + parseInt(C[1])), $("#reel_frame_" + _[d].position[1]).append(divB + y + x + SH + wi + SW + to + C[0] * SH + bi + bgS + SW + "px " + SH + bgUrl + S.src + divEnd), Pe[v] = 1
                                    }
                                }
                            }
                        } else t = !0
                }
                if (!t && exWilds > 0) {
                    $(GL).append(divB + 'expandedWild_frame" ' + stP + "height:" + SH * reelR + wi + "1024" + to + lay.symbolRowsY[0] + bi + den), soundOn && createjs.Sound.play("main_exwild");
                    for (d = 0; d < exWilds; d++) {
                        var k = s[d],
                            A = parseInt(k.col_index);
                        if (!Ne[A]) {
                            var B = "#" + (L = k.symbol + "_expanded") + d;
                            (S = oS.getSprite(L)) ? (exWildVideoCount++, $("#expandedWild_frame").append(divB + L + d + '" class="expanded' + stP + "top:0px;z-index:1; height:" + SH * reelR + wi + SW + le + lay.symbolColsX[A] + bibgI + S.src + ");" + bgS + S.width + "px " + S.height + pd), $(B).on(ae, ws), animate(B, S.width, gCl[ans + L], !1), startState = "exWildStop", setTimeout(function() {
                                ds(As)
                            }, 1e3), Ne[A] = B) : _aMovingColumns[A].setExWild(k.symbol, ws)
                        }
                    }
                }
                if (exWildVideoCount > 0) return;
                Ls()
            } else if (currSubgame.subst_symbols) {
                var I = currSubgame.result_reels.length;
                if (gameAConf.Golden_Hand_Bonus_show) {
                    for (soundOn && createjs.Sound.play("GoldenHand_Bonus_wild"), St = -1, O = 0; O < I && currSubgame.result_reels[O][1] != currSubgame.subst_symbols[0].symbol; O++);
                    Rs()
                } else {
                    var W = gameAConf.Chilli_Bomb_symbol,
                        L = "main_" + W + "_bonus";
                    for (O = 0; O < I && currSubgame.result_reels[O][2] != W; O++);
                    _aMovingColumns[2].show(O, Ws, L), soundOn && createjs.Sound.play("sym_" + W + "_bonus")
                }
            } else Ls()
        }
    }

    function Is() {
        $(Y).off(ae, Is);
        for (var e = currSubgame.subst_symbols, t = e.length, s = 0; s < t; s++) _aMovingColumns[e[s].position[1]].setSymb(e[s].position[0], "sym_main_" + e[s].symbol);
        Ss(), bn()
    }

    function Ws(e) {
        if (null != e) {
            var t = "#" + e.currentTarget.id;
            $(t).off(ae, Ws), $(t).remove()
        }
        if (gameAConf.big_anim) fn("big_anim", Is, O, 1);
        else {
            for (var s = currSubgame.subst_symbols, n = s.length, o = 0; o < n; o++) _aMovingColumns[s[o].position[1]].setSymb(s[o].position[0], "sym_main_" + s[o].symbol);
            Ss()
        }
    }

    function Ls() {
        if (ue) setTimeout(Ls, 85);
        else {
            for (var e = gameConfig.paytables[currSubgame.reels_sets_name].paytable_wilds, s = 0, n = 0, o = currSubgame.lines_win.length, a = 0; a < o; a++) {
                var i = currSubgame.lines_win[a];
                5 == i.symbol_count && e && i.symbol in e && (n = 1), s |= i.wilds && i.wilds.length
            }
            Ge > 2 ? (soundOn && (t = createjs.Sound.play("ring_fg")), gameAConf.bigAnim_attraction ? setTimeout(function() {
                fn("full_house", dn, 0)
            }, 50) : fn("full_house", dn, 0)) : n && gameAConf.wilds5 ? fn("wilds5", gn, 0) : ce ? (soundOn && (t = createjs.Sound.play("ring_fg")), fn("ofakind5", pn, 0)) : s && gameAConf.fg_wild_attraction && ot ? fn("fg_wild_attraction", gn, 0) : Ss()
        }
    }

    function Rs(e) {
        if (St > -1 && null != e) {
            var t = "#" + e.currentTarget.id;
            $(t).off(ae, Rs), $("#" + this.parentNode.id + "BG").css("display", bl), $(t).remove()
        }++St < currSubgame.subst_symbols.length ? (_aMovingColumns[1].setSymb(O, "GoldenHand_Bonus_show_" + gameAConf.Golden_Hand_Bonus_show[O][St]), soundOn && createjs.Sound.play("GoldenHand_Bonus_stop"), setTimeout(function() {
            _aMovingColumns[currSubgame.subst_symbols[St].position[1]].setSymb(currSubgame.subst_symbols[St].position[0], "sym_main_12", Rs, "sym_main_12")
        }, 200)) : (_aMovingColumns[1].setSymb(O, "sym_main_10"), Ss())
    }

    function js() {
        v = !1, T = 0, C = 0, k = !0
    }

    function Es() {
        T = currSubgame.lines_win.length <= 3 ? 300 : 250, autoplay && (T /= 2), C = autoplay ? 300 : 800, k = !1, v = !0
    }

    function Ms() {
        ue ? setTimeout(Ms, 85) : (fn("cashTime", nn, 0), soundOn && (t = createjs.Sound.play("ring_fg")))
    }

    function Ns() {
        ut && !inDouble ? Os() : inHelp || (d = setTimeout(Os, C))
    }

    function Ds() {
        QAtrace += " FGEnd() \n", gs(Ds), startState = "", _App.idleTimerStop(), $(msb).find(ms1).html(""), ot = !1, rt = 0, "increase_current_subgame_factor" == Me && "main" == gameAConf.bonuses[0].bonus_end && 1 == gameAConf.bonuses[0].reset_score_in_new_bonus && (Me = "", je = 0, $("#bonus_mult").css({
            display: no
        }));
        var e = extraBet ? "extra" : "main";
        b = oS.getSprite("background_" + e), b && $(GL).css({
            "background-image": "url(" + b.src + ")"
        });
        for (var t = 0; t < reelC; t++)
            for (var s = 0; s <= reelR + 1; s++) e + "_" + sym_names[t][s] in gameAsset.syms && _aMovingColumns[t].setSymb(s - 1, "sym_" + e + "_" + sym_names[t][s]);
        $("#top_background_fg").css("display", no), $(N).css("display", no), $(".topDigits").remove(), $(cw).css({
            display: no
        }), $(J).html(""), $(X).html(""), $(X).css({
            top: "-8px"
        }), ao(), clearTimeout(h), Ue = -1, Kn(), clearInterval(g), Ot(), js(), et = !1, gotoNextState(), $t && ($t = !1)
    }

    function Ps() {
        startState = "", _App.idleTimerStop(), gs(Ps), $(cw).css({
            display: no
        }), $(msb).find(ms1).html(""), gotoNextState()
    }

    function Gs() {
        var e = currSubgame.scatters_win,
            t = e.length,
            s = currSubgame.subgame_bonus;
        if (rt && e && t) {
            if (t > 1)
                for (var n = 0; n < t; n++)
                    if (e[n].bonus_type && 0 === n) {
                        var a = e[0];
                        e[0] = e[t - 1], e[t - 1] = a
                    } if (++Qe < t) return void
            function() {
                var e, t = currSubgame.scatters_win[Qe],
                    s = currSubgame.subgame_label,
                    n = t.positions,
                    a = n.length;
                if (!networkOut && !inHelp && !inDouble && 0 === dt) {
                    if ($(j).html(""), $(msb).find(ms1).html(""), t.win > 0) {
                        var i = langText.SCATTERStext,
                            r = t.subgame_win_factor > 1 ? " x " + t.subgame_win_factor : "",
                            l = t.count;
                        for (l > 5 && (r = " x " + l + r, l = 1), e = 0; e < l; e++) i += divcl + "smallSym_" + (s in gameAsset.images ? s : "main") + '"' + bgP + "-" + (t.symbol - 1) * smallSymbolW + "px 0" + pd;
                        $(msb).find(ms1).html(i + r + " = " + pe.cash(t.win)), w || ut || ps(t.win)
                    } else {
                        var u = currSubgame.subgame_bonus[0];
                        w && u.win > 0 && $(msb).find(ms1).html(langText.SCATTERStext + small + (u.symbol - 1) * smallSymbolW + "px 0" + pd + " = " + pe.cash(u.win))
                    }
                    if (t.bonus_type && t.bonus_type != no && !w && Fs(t.bonus_type), a > 0) {
                        var c, m = gameConfig.paytables[currSubgame.reels_sets_name].paytable_scatters[t.symbol],
                            p = 0,
                            g = "main_" + t.symbol + "_scatterX2";
                        for (var l in m) m[l].bonus_type != no && (p = 1);
                        if (m[t.count].free_games_extra_bet_only && !extraBet && (p = 0), !t.bonus_type && p && !(g in gameAsset.images) || gameAConf.no_scatter_animation && gameAConf.no_scatter_animation === s) w || ut || !soundOn || createjs.Sound.play("service_scatterX2"), d = setTimeout(zs, 600);
                        else if (w || ut) d = setTimeout(zs, 600);
                        else {
                            var b = "sym_" + s + "_" + t.symbol;
                            if (m[t.count].free_games_extra_bet_only && extraBet && (b = "sym_extra_" + t.symbol), b in gameAsset.sounds || (b = "sym_main_" + t.symbol), soundOn && createjs.Sound.play(gameAsset.sounds.main_scatter ? "main_scatter" : b), opera_mini) dt = 1, d = setTimeout(Us, 600);
                            else {
                                dt = a;
                                for (var f = 0; f < dt; f++) 1 == reelR ? (e = n[f][0], c = 0) : (e = n[f][1], c = n[f][0]), _aMovingColumns[e].show(c, Us, g in gameAsset.images && 2 == t.count ? g : (extraBet ? "extra_" : "main_") + t.symbol + "_scatter");
                                startState = "stopAllAnim", t.bonus_type && t.bonus_type !== no || ds($s)
                            }
                        }
                        for (var _ = o, h = 5 - lay.symbolRowsY[0], f = 0; f < a; f++) 1 == reelR ? c = e = n[f][0] : (e = n[f][1], c = n[f][0]), _ += "<rect x=" + (lay.symbolColsX[e] - lay.symbolColsX[0] + 5) + " y=" + (lay.symbolRowsY[c] + h) + " width=" + SW + " height=" + SH + me + (gameAConf.win_color || "#FFFF00") + '"/>';
                        $(j).append(_ + sv)
                    } else d = setTimeout(zs, 600)
                }
            }()
        }
        if (rt && s.length) {
            var i = s[0];
            switch (Me = i.type, Ot(), Me) {
                case "score":
                    (Ee = i.bonuses[0].count) > 0 || i.bonuses[0].win ? Vs() : Hs();
                    break;
                default:
                    Hs()
            }
        } else Hs()
    }

    function Hs() {
        if ($(j).html(""), QAtrace += rt + " endSubGame gameOverShow: " + et + "\n", ot && currSubgame.is_last) {
            if (hideExSymbols = 1, Ot(), nt = !0, _ = null, !gameAConf.free_respins_sounds) {
                for (var e = free2Games = 0, t = subgamesList.length, s = 0; s < t; s++) switch (subgamesList[s].subgame_label) {
                    case "free":
                        e++;
                        break;
                    case "free2":
                        free2Games++
                }
                gameWin > 0 ? ($(q).html(langText.CONGRATULATIONStext), $(J).html(langText.playedFG1 + e + langText.playedFG2 + (free2Games ? langText.playedFG1 + free2Games + langText.playedSG2 : "") + langText.WONtext), $(J).css({
                    color: "#ff6e00"
                }), $(X).html(br + pe.cash(gameWin)), $(X).css({
                    color: ye
                }), free2Games && $(X).css({
                    top: "-18px"
                }), g = setInterval(function() {
                    $(q).css({
                        color: ++vt % 2 ? "#ff6e00" : "white"
                    })
                }, 280)) : $(q).html(br + langText.endFreeGames_text), $(cw).css({
                    display: bl
                })
            }
            soundOn && (channelSpin && channelSpin.stop(), createjs.Sound.play("fg_end")), $(msb).find(ms1).html(langText.pressSTARTTtext), startState = "FGEnd", ds(Ds), _App.idleTimerStart()
        } else ot ? it || (ge > 0 && ge == be ? ($(q).html(br + langText.playedFG1 + ge + langText.playedSG2), ge = be = 0, $(cw).css({
            display: bl
        }), $(msb).find(ms1).html(langText.pressSTARTTtext), startState = "SGEnd", _App.idleTimerStart(), ds(Ps)) : gotoNextState()) : (it || (et && (0 === gameWin && $(msb).find(ms1).html(langText.gameOVERtext), Es(), at = !0, ut || gotoNextState()), initial_bet || networkOut || !currSubgame.is_last || et || tt || ut || freeround_limit || $(msb).find(ms1).html(m > 0 ? langText.selectBETtext + ", " + langText.pressSTARTtext : langText.insertCREDITStext)), networkOut || inJackpot || inIntJackpot || !rt || (inHelp || autoplay || !w || lt || et) && (!ut || inDouble || 0 != currSubgame.is_free) || Ns(), et = !1)
    }

    function zs() {
        $(j).html(""), Gs()
    }

    function Fs(e) {
        var t, s;
        switch (it = !0, $(N).css("display", no), e) {
            case "free_games":
                $(M).css("display", no), "free" === currSubgame.subgame_label ? t = "free_scatter_top" : gameAConf.bonuses && currSubgame.scatters_win.length > 0 && currSubgame.scatters_win[0].symbol == gameAConf.bonuses[0].symbol && (t = "bonus_top"), (s = oS.getSprite(t)) || (t = "main_scatter_top", s = oS.getSprite(t)), s && (ao(), Ue = -1, clearTimeout(h), ks(s, t)), gameAsset.text && (gameAsset.text.top_digits_pos ? Ys(currSubgame.scatters_win[Qe].bonus_value) : gameAsset.text.respin_digits_pos && Ys(currSubgame.free_games + currSubgame.free_game_total - currSubgame.free_game_number)), ot = !0;
                break;
            case "preselected_random_choice":
                t = "top_bonus_win", (s = oS.getSprite(t)) && (ao(), Ue = -1, clearTimeout(h), ks(s, t))
        }
    }

    function Us(e) {
        if (null != e) {
            $("#" + e.currentTarget.id).off(ae, Us);
            var s = e.currentTarget.id.split("_"),
                n = "",
                o = s.length - 2;
            for (i = 0; i < o; i++) n += s[i] + "_";
            void 0 === gCl[ans + n.slice(0, -1)].loop && ($("#" + this.parentNode.id + "BG").css("display", bl), $("#" + e.currentTarget.id).remove())
        }
        0 == --dt && (gs($s), it ? ($(st).addClass(btd), Nn(), "free2" === subgamesList[currSubgameIndex + 1].subgame_label && gameAConf.super_games ? fn("super_games", cn, 0) : "free_games" === currSubgame.scatters_win[0].bonus_type ? fn("free_games", rn, 0) : currSubgame.subgame_bonus.length && gameAConf.bonus_attraction ? fn("bonus_attraction", mn, 0) : setTimeout(Js(), 500), soundOn && (!channelSpin || "free" !== currSubgame.subgame_label && "free2" !== currSubgame.subgame_label || channelSpin.stop(), t = createjs.Sound.play("ring_fg"))) : gameAConf.scatters_attraction && gameAConf.scatters_attraction[0].sym == s[1] ? fn("scatters_attraction", en, 0) : zs())
    }

    function qs() {
        startState = "", _App.idleTimerStop(), gs(qs), gotoNextState()
    }

    function Js() {
        switch ($(j).html(""), QAtrace += " ringEnd " + subgamesList[currSubgameIndex + 1].type + " " + currSubgameIndex + "\n", subgamesList[currSubgameIndex + 1].type) {
            case "select_wild_symbol":
                gotoNextState();
                break;
            case "preselected_random_choice":
                soundOn && (channelSpin = createjs.Sound.play("bonus_wait_loop", {
                    loop: -1
                }));
                var e = subgamesList[currSubgameIndex + 1].subtype;
                "bonus_pick_the_pig" === e || "select_multiplier" === e ? gotoNextState() : ($(msb).find(ms1).html(langText.pressSTARTTtext), startState = "preselected_random_choice", ds(qs), _App.idleTimerStart());
                break;
            default:
                currSubgame.scatters_win.length && 100 == currSubgame.scatters_win[0].bonus_value ? ($(X).html(br + br + br + "+ 100 " + langText.freegames1), $(cw).css({
                    display: bl
                })) : gameAsset.text && gameAsset.text.respinCongrText && ($(q).html(br + br + gameAsset.text.respinCongrText), $(q).css({
                    color: ye
                }), $(cw).css({
                    display: bl
                })), $(msb).find(ms1).html(langText.pressSTARTTtext), startState = "startFG", ds(Ks), _App.idleTimerStart(), soundOn && (channelSpin = createjs.Sound.play("fg_wait_loop", {
                    loop: -1
                }))
        }
    }

    function Xs() {
        switch (Me) {
            case "score":
                if (gameAConf.bonuses && (gameAConf.bonuses[0].bonus_digits_pos && Ys(++je), gameAConf.bonuses[0].bonus_score_sounds)) {
                    for (var e = 0; gameAConf.bonuses[0].bonus_score_sounds[e].score < je + 1;) e++;
                    soundOn && createjs.Sound.play(gameAConf.bonuses[0].bonus_score_sounds[e].name)
                }
                Vs();
                break;
            case "increase_current_subgame_factor":
                $("#bonus_mult").css({
                    "background-position": "0px -" + gCl.bonus_mult[1] * ++je + "px"
                }), Ts()
        }
    }

    function Ys(e) {
        var t = oS.getSprite("bonus_digits");
        if (t) var s = gameAConf.bonuses[0].bonus_digits_pos[0],
            n = gameAConf.bonuses[0].bonus_digits_pos[1];
        else(t = oS.getSprite("top_digits")) ? (s = gameAsset.text.top_digits_pos[currSubgame.subgame_label][0], n = gameAsset.text.top_digits_pos[currSubgame.subgame_label][1]) : (t = oS.getSprite("respins_digits")) && (s = gameAsset.text.respin_digits_pos[0], n = gameAsset.text.respin_digits_pos[1]);
        if (t) {
            var o = parseInt(t.width / 10);
            $(".topDigits").remove();
            do {
                s -= o, $(E).append(divcl + 'topDigits" ' + stP + "background-position:-" + e % 10 * o + "px 0;left:" + s + to + n + pd)
            } while ((e = Math.floor(e / 10)) > 0)
        }
    }

    function Vs() {
        var e = currSubgame.subgame_bonus[0];
        if (Ee > 0) {
            Ee--, soundOn && createjs.Sound.play("bonus"), $(msb).find(ms1).html(gameAConf.bonuses && gameAConf.bonuses[0].msg ? gameAConf.bonuses[0].msg : "");
            var s = "main_" + e.bonuses[0].symbol + "_bonus";
            if (s in gameAsset.images) {
                var n = e.bonuses[0].positions[Ee];
                _aMovingColumns[n[1]].show(n[0], Xs, s)
            } else Xs()
        } else if (hideExSymbols = 1, Ot(), e.bonuses[0].win)
            if (!0, channelSpin && channelSpin.stop(), gameAConf.bonuses && "free" === gameAConf.bonuses[0].bonus_start) {
                Re = !1;
                var o = langText.COLLECTEDtext + " " + e.bonuses[0].total_count + " ";
                gameAConf.bonuses && gameAConf.bonuses[0].win_msg && (o += gameAConf.bonuses[0].win_msg), o += langText.WONtext;
                var a = e.bonuses[0].win[0].elements[0];
                "xtotalbet" == a.bonus_type ? o += a.bonus_value + " x " + langText.TotalBETtext : "free_games" == a.bonus_type && (o += a.bonus_value + langText.NEWtext + langText.FREE_GAMEStext, Re = !0), $(q).html(langText.CONGRATULATIONStext), $(q).css("color", "#ff6e00"), $(J).html(br + addPictToString(o) + " +"), $(J).css("color", "#ff6e00"), $(X).html(br + pe.cash(gameWin)), $(X).css("color", ye), g = setInterval(function() {
                    $(q).css({
                        color: ++vt % 2 ? "#ff6e00" : "white"
                    })
                }, 280), ps(e.bonuses[0].win[0].win), $(cw).css({
                    display: bl
                }), soundOn && (channelSpin = createjs.Sound.play("fg_end")), $(msb).find(ms1).html(langText.pressSTARTTtext), ds(Qs), startState = "bonusEnd", _App.idleTimerStart()
            } else {
                QAtrace += " showBonusScore " + currSubgameIndex + " \n", Me = "";
                var i = e.bonuses[0].win[0].elements[0].bonus_type;
                Fs(i), "free_games" === i && fn("free_games", rn, 0), $(st).addClass(btd), Nn(), soundOn && (t = createjs.Sound.play("ring_fg"))
            }
        else Hs()
    }

    function Qs() {
        switch (startState = "", _App.idleTimerStop(), gs(Qs), clearInterval(g), $(cw).css({
            display: no
        }), Me) {
            case "score":
                1 == gameAConf.bonuses[0].reset_score_in_new_bonus && Re && Ys(je = 0);
                break;
            default:
                Me = ""
        }
        it = !1, Re ? gameAConf.before_fg_attraction ? fn("before_fg_attraction", sn, 0) : gotoNextState() : ($(N).css("display", no), $(".topDigits").remove(), Hs())
    }

    function Ks() {
        if (gs(Ks), $(msb).find(ms1).html(""), Ot(), $(cw).css({
                display: no
            }), currSubgame.scatters_win.length && 100 == currSubgame.scatters_win[0].bonus_value && gameAConf["100_fg_attraction"]) fn("100_fg_attraction", Zs, 0);
        else {
            gameAConf.free_respins_tops || $(".topDigits").remove(), QAtrace += "startFG(): " + currSubgameIndex + "\n", startState = subgamesList[currSubgameIndex + 1].subgame_label, _App.idleTimerStop(), at = !1, He = !0;
            var e = oS.getSprite("background_free");
            e && $(GL).css({
                "background-image": "url(" + e.src + ")"
            });
            for (var s = 0; s < reelC; s++)
                for (var n = 0; n <= reelR + 1; n++) "free_" + sym_names[s][n] in gameAsset.syms && _aMovingColumns[s].setSymb(n - 1, "sym_free_" + sym_names[s][n]);
            if ($("#top_background_fg").css("display", bl), gameAConf.bonuses && (0 == gameAConf.bonuses[0].in_bonus_change_top && (He = !1, $t = !0), "free" == gameAConf.bonuses[0].bonus_start)) switch (gameAConf.bonuses[0].bonus_type) {
                case "score":
                    Ut();
                    break;
                case "increase_current_subgame_factor":
                    $("#bonus_mult").css({
                        "background-position": "0px -" + gCl.bonus_mult[1] * je + "px",
                        display: bl
                    }), Me = "increase_current_subgame_factor"
            }
            He && -1 == Ue && Kn(), channelSpin && channelSpin.stop(), t && t.stop(), gameAConf.before_fg_attraction ? fn("before_fg_attraction", sn, 0) : gotoNextState(), it = !1
        }
    }

    function Zs() {
        $(Y).off(ae, Zs), bn(), delete gameAConf["100_fg_attraction"], setTimeout(Ks, 40)
    }

    function en() {
        $(Y).off(ae, en), bn(), zs()
    }

    function tn() {
        $(Y).off(ae, tn), ue && ++yt < gameAConf.bigAnim_attraction.length ? fn("bigAnim_attraction", tn, yt) : (bn(), Os())
    }

    function sn() {
        $(Y).off(ae, sn), ue && ++yt < gameAConf.before_fg_attraction.length ? fn("before_fg_attraction", sn, yt) : (bn(), gotoNextState())
    }

    function nn() {
        $(Y).off(ae, nn), ue && ++yt < gameAConf.cashTime.length ? fn("cashTime", nn, yt) : (bn(), setTimeout(Os, 85))
    }

    function on() {
        $(Y).off(ae, on), ue && ++yt < gameAConf.before_fg_attraction.length ? fn("before_fg_attraction", on, yt) : (bn(), Zt())
    }

    function an() {
        $(Y).off(ae, an), ue && ++yt < gameAConf.exWilds_attraction.length ? fn("exWilds_attraction", an, yt) : (bn(), Ss())
    }

    function rn() {
        $(Y).off(ae, rn), QAtrace += yt + " attrFGEnd " + ue + " \n", ue && ++yt < gameAConf.free_games.length ? fn("free_games", rn, yt) : (bn(), Js())
    }

    function ln() {
        $(Y).off(ae, ln), ue && ++yt < gameAConf.free_games.length ? fn("free_games", ln, yt) : (bn(), continueCmd())
    }

    function un() {
        $(Y).off(ae, un), ue && ++yt < gameAConf.super_games.length ? fn("super_games", un, yt) : (bn(), continueCmd())
    }

    function cn() {
        $(Y).off(ae, cn), ue && ++yt < gameAConf.super_games.length ? fn("super_games", cn, yt) : (bn(), Js())
    }

    function mn() {
        $(Y).off(ae, mn), ue && ++yt < gameAConf.bonus_attraction.length ? fn("bonus_attraction", mn, yt) : (bn(), Js())
    }

    function pn() {
        $(Y).off(ae, pn), ue && ++yt < gameAConf.ofakind5.length ? fn("ofakind5", pn, yt) : (bn(), Ss())
    }

    function dn() {
        $(Y).off(ae, dn), ue && ++yt < gameAConf.full_house.length ? fn("full_house", dn, yt) : (bn(), setTimeout(function() {
            ce ? (soundOn && (t = createjs.Sound.play("ring_fg")), fn("ofakind5", pn, 0)) : Ss()
        }, 85))
    }

    function gn() {
        $(Y).off(ae, gn), bn(), Ss()
    }

    function bn() {
        gs(_n), $("body").css({
            "background-image": "url(" + $(oS.getSprite("background_online_1920")).attr("src") + ")"
        }), ue = 0, $(Y).remove()
    }

    function fn(e, n, o, a) {
        var i = oS.getSprite(e + o);
        if (i && oS.loaded(e + o) && !recovery) {
            if (!o || a) {
                ue = 1;
                var r = oS.getSprite("background_online_1920_attract");
                if (isMobile) var l = "scale(4)";
                else l = "scale(2)";
                $(GL).append(divB + "attraction" + stP + den), $(Y).css({
                    "-ms-transform": l,
                    "-webkit-transform": l,
                    transform: l,
                    "z-index": 3,
                    display: no
                }), r && $("body").css({
                    "background-image": "url(" + $(r).attr("src") + ")"
                }), ne && setTimeout(function() {
                    ds(_n)
                }, 1e3)
            }
            yt = o;
            var u = gameAConf[e][o].dim;
            isMobile ? $(Y).css(s = u ? {
                left: u[6] + "px",
                top: u[7] + "px",
                width: u[4] + "px",
                height: u[5] + "px"
            } : {
                left: "380px",
                top: "230px",
                width: "256px",
                height: "160px"
            }) : $(Y).css(s = u ? {
                left: u[2] + "px",
                top: u[3] + "px",
                width: u[0] + "px",
                height: u[1] + "px"
            } : {
                left: "256px",
                top: "160px",
                width: "512px",
                height: "320px"
            }), $(Y).css({
                "background-size": i.width + "px " + i.height + "px",
                "background-image": "url(" + i.src + ")"
            }), $(Y).css("display", bl), $(Y).on(ae, n), soundOn && e + o in gameAsset.sounds && (t = createjs.Sound.play(e + o)), animate(Y, i.width, gameAConf[e][o].anim, 1)
        } else n()
    }

    function _n() {
        ue = 0, $(Y).trigger(ae, [ae, "Event"]), t && t.stop()
    }

    function hn(e, t) {
        var s = oS.getSprite(e),
            n = gameAConf[e].dim,
            o = oS.getSprite("background_online_1920_attract");
        if (o && $("body").css({
                "background-image": "url(" + $(o).attr("src") + ")"
            }), isMobile) {
            $(GL).append(divB + "attraction" + stP + bgS + s.width + "px " + s.height + le + n[6] + to + n[7] + wi + n[4] + he + n[5] + bgUrl + s.src + divEnd);
            var a = "scale(4)";
            $(Y).css({
                "-ms-transform": a,
                "-webkit-transform": a,
                transform: a
            })
        } else if ($(GL).append(divB + "attraction" + stP + bgS + s.width + "px " + s.height + le + n[2] + to + n[3] + wi + n[0] + he + n[1] + bgUrl + s.src + divEnd), gameAConf[e].scale) {
            a = "scale(" + gameAConf[e].scale + ")";
            $(Y).css({
                "-ms-transform": a,
                "-webkit-transform": a,
                transform: a
            })
        }
        $(Y).css({
            "z-index": 3
        }), t && $(Y).on(ae, t), setTimeout(function() {
            ds(ls)
        }, 2e3), animate(Y, s.width, gameAConf[e].anim, 0)
    }

    function Sn() {
        $(j).html(""), gameWin = 0, rt = 0, tt = !0, "last_win" == show_win || freeround_limit || ($(wp).find(z).html(langText.WINtext), $(wp).find(H).html(""))
    }

    function $n() {
        setButtonOff(D, $n), $("#TbArrowUp").css({
            display: bl
        }), setButtonOn("#TbArrowUp", Wn)
    }

    function xn(e, t) {
        if (gameConfig.extra_bet_enabled) {
            $("#q_stepL0").css({
                "font-size": "15px"
            }), $("#q_stepR0").css({
                "font-size": "15px"
            });
            var s = 'EXTRA<div style="top: 20px;font-size: 20px;">WIN' + de + '<div style="top: 5px;position: absolute;',
                n = ': -29px;"><svg height="24" width="26"> <polygon points="',
                o = '" style="fill:' + ye + ';" />' + sv + de;
            if (e) {
                if (extraBet) {
                    switch (wt = setInterval(function() {
                        c = ++vt % 2 ? "#2edc3c" : "white", $("#q_stepL0").css({
                            color: c
                        }), $("#q_stepR0").css({
                            color: c
                        }), o = '" style="fill:' + c + ';" />' + sv + de, $("#q_stepL0").html(s + "right" + n + "25.727,23.748 1.039,11.946 25.727,0.06" + o), $("#q_stepR0").html(s + "left" + n + "1.039,0.06 25.727,11.861 1.039,23.748" + o)
                    }, 280), extraBet = 0, soundOn && t && createjs.Sound.play("extra_win_off"), $(GL).css({
                        "background-image": "url(" + oS.getSprite("background_main").src + ")"
                    }), L[Ue]) {
                        case "top_jackpot":
                            a = "top_jackpot";
                            ks(oS.getSprite(a), a);
                            break;
                        case "top_name":
                            a = "top_name", ks(oS.getSprite(a), a);
                            break;
                        case "top_fg":
                            clearTimeout(h), Ue--, Kn()
                    }
                    for (r = 0; r < reelC; r++)
                        for (l = 0; l <= reelR + 1; l++) _aMovingColumns[r].setSymb(l - 1, "sym_main_" + sym_names[r][l])
                }
            } else {
                wt && clearInterval(wt), $("#q_stepL0").html(s + "right" + n + "25.727,23.748 1.039,11.946 25.727,0.06" + o), $("#q_stepR0").html(s + "left" + n + "1.039,0.06 25.727,11.861 1.039,23.748" + o), extraBet = gameConfig.extra_bet_factor, currNumLines = gameConfig.lines_max_number, soundOn && t && createjs.Sound.play("extra_win_on");
                var a, i = oS.getSprite("background_extra");
                switch (i && $(GL).css({
                    "background-image": "url(" + i.src + ")"
                }), L[Ue]) {
                    case "top_jackpot":
                        a = "top_jackpot_extra", (i = oS.getSprite(a)) && ks(i, a);
                        break;
                    case "top_name":
                        a = "top_name_extra", (i = oS.getSprite(a)) && ks(i, a);
                        break;
                    case "top_fg":
                        clearTimeout(h), Ue--, Kn()
                }
                for (var r = 0; r < reelC; r++)
                    for (var l = 0; l <= reelR + 1; l++) "extra_" + sym_names[r][l] in gameAsset.syms && _aMovingColumns[r].setSymb(l - 1, "sym_extra_" + sym_names[r][l])
            }
        }
    }

    function yn() {
        var e = br + br + br + langText.LINES_SETbeg + currNumLines;
        if (gameConfig.extra_bet_enabled) {
            if (e = "EXTRA WIN " + (extraBet ? langText.active : langText.not_active) + br + br, extraBet) {
                var t = gameAsset.text.extraBet.descr,
                    s = t.indexOf("3, 4", 0),
                    n = t.indexOf(".", s);
                e += addPictToString(t.substring(s, n + 1)) + br
            } else e = br + e;
            e += langText.LINEStext + " " + currNumLines + br + langText.TotalBETtext + " = " + pe.cash((currNumLines + extraBet) * currBetPerLine) + (cashOnly ? "" : langText.extraBet_cw3)
        }
        return $(q).css("color", "#1E90FF"), e
    }

    function wn(e) {
		
        var t = parseInt(e.offsetY / 103);
        gameConfig.lines_min_number < gameConfig.lines_max_number && I.length > 1 || gameConfig.extra_bet_enabled && 0 === t ? (gameConfig.extra_bet_enabled && 0 === t && (t = extraBet ? 1 : 0), currNumLines = I[I.length > 1 ? 4 - t : 0], At(t), Q ? (currBetPerLine = gameConfig.line_min_bet * gameConfig.lines_max_number / currNumLines, Ct(0), $(q).html(br + langText.LINES_SETbeg + '<span class="colortext">' + currNumLines + "</span>"), $(q).css("color", "#ff6e00"), $(J).html(br + langText.BETtext + ': <span class="colortext">' + pe.cash(currBetPerLine) + "</span>"), $(J).css("color", "#1E90FF"), $(X).html(br + langText.TotalBETtext + ': <span class="colortext">' + pe.cash((currNumLines + extraBet) * currBetPerLine) + "</span>"), $(X).css("color", "#ff6e00")) : ($(X).html(""), $(J).html(""), $(q).html(yn())), soundOn && createjs.Sound.play(["service_line001", "service_line012", "service_line014", "service_line016", "service_line021"][4 - t]), qe || (qe = 1, $(cw).css({
            display: bl
        })), clearTimeout(congrTimer), congrTimer = setTimeout(vn, 5e3)) : (soundOn && createjs.Sound.play(V), $("#br").css({
            color: "red"
        }), setTimeout(function() {
            $("#br").css({
                color: ye
            })
        }, 2e3))
		
	
		
    }

    function vn() {
        $(X).html(""), $(cw).css({
            display: no
        }), qe = 0, clearTimeout(congrTimer)
    }

    function Tn() {
        En(), $(gmI).css({
            display: no
        }), ao(), clearTimeout(h), help.showHelp(), inHelp = 1, _App.idleTimerStart()
    }

    function Cn() {
        gs(Cn), _App.idleTimerStop(), currBetPerLine = gameConfig.line_min_bet, Ct(0), currNumLines = gameConfig.lines_max_number, At(0), $(J).html(""), $(X).html(""), $(cw).css({
            display: no
        });
        var e, t = 11,
            s = freeround_win,
            n = currDenom.cents < 1 ? 1 : currDenom.cents;
        soundOn && (e = createjs.Sound.play("service_credit_loop", {
            loop: -1
        })), ds(rs), Xe = 0, freeround_win < 25 ? t = 3 : freeround_win < 45 ? t = 7 : freeround_win > 1e6 ? t = 11111 : freeround_win > 1e5 ? t = 151 : freeround_win > 1e4 && (t = 53), x = setInterval(function() {
            var o = ++Xe * t;
            s < o ? (clearInterval(x), x = null, m += s * n, gs(rs), soundOn && (e.stop(), createjs.Sound.play("service_credit_end")), setTimeout(function() {
                ze = 0, $(wp).find(z).html("last_win" === show_win ? langText.LastWin : langText.WINtext), $(wp).find(H).html(""), freeround_limit = 0, Et(), Bn()
            }, 200)) : (s -= o, m += o * n), ms(wp, s), zn()
        }, 100)
    }

    function kn(e) {
        var t = e.keyCode || e.which;
        switch (t) {
            case 32:
            case 13:
                a && $(st).click();
                break;
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
                gameConfig.allow_client_demo_request && Ve.length > 0 && (screenActive || freeround_limit) && (Ye = !0, (Te = t - 49) >= Ve.length && (Te = 0), currDemoMode = Ve[Te++], gs(In), It())
        }
    }

    function An() {
        setButtonOff(D, An), ho(), $n()
    }

    function Bn() {
		

		
		if(serverResponse.freeround_play!=undefined){
		freeround_play=serverResponse.freeround_play;
		
		if(freeround_limit <= freeround_play){
		freeround_limit=0;	
		}
		
		}
		
		
		
        if (fast = 0, freeround_limit) {
            if (freeround_limit === freeround_play) {
                $(q).html(langText.CONGRATULATIONStext);
                var e = langText.playedFREE_spins1 + freeround_play + langText.playedFREE_spins2;
                freeround_win && ($(X).html(br + pe.cash(freeround_win)), e += langText.WONtext), $(J).html(e), $(cw).css({
                    display: bl
                }), ds(Cn), rt = 0, oe = 0
            } else ds(In);
            return $(msb).find(ms1).html(langText.pressSTARTTtext), void _App.idleTimerStart()
        }!oe || ot ? screenActive || autoplay || ot || stopAll || (r = setTimeout(ro, Math.floor(12e4 * Math.random()) + 6e4), l = setTimeout(lo, 3e3), denomNum > 1 && !initial_bet && setButtonOn(bd, Mn), setButtonOn("#lft_lines", wn), setButtonOn("#rht_lines", wn), cashOnly || creditOnly || setButtonOn("#frameCredit", Hn), $(z).removeClass("string2_inactive"), setButtonOn(bmh, playClick), $(bmh).on(ae, Tn), gameConfig.line_max_bet > gameConfig.line_min_bet && !Q && setButtonOn(D, $n), Q && setButtonOn(D, An), setButtonOn(gm, Fn), $(j).on(ck, es), startState = "waitGame", ds(In), gameConfig.autoplay && $(st).on("touchstart mousedown", On), screenActive = 1, _App.idleTimerStart()) : It()
    }

    function On() {
        $(st).off("touchstart mousedown", On), startWait = (new Date).getTime()
    }

    function In() {
        startWait = 0, $(st).off("touchstart mousedown", On), (m / currDenom.cents > 0 || freeround_limit) && (gs(In), ct ? Qn("play") : It())
    }

    function Wn(e) {
        uo(V);
		
        var t = "TbArrowUp" === e.target.id ? gameConfig.line_step_bet_numbers_quick : gameConfig.line_step_bet_numbers;
        if (currBetPerLine == gameConfig.line_max_bet) currBetPerLine = gameConfig.line_min_bet;
        else if (t)
            for (var s = t.length, n = 0; n < s; n++) {
                var o = parseFloat(t[n]);
                if (currBetPerLine < o && o <= gameConfig.line_max_bet) {
                    currBetPerLine = o;
                    break
                }
            } else currBetPerLine++;
        Ct(0)
    }

    function Ln() {
        if (uo(V), currBetPerLine == gameConfig.line_min_bet) currBetPerLine = gameConfig.line_max_bet;
        else if (gameConfig.line_step_bet_numbers)
            for (var e = gameConfig.line_step_bet_numbers.length - 1; e >= 0; e--) {
                var t = parseFloat(gameConfig.line_step_bet_numbers[e]);
                if (currBetPerLine > t && t >= gameConfig.line_min_bet) {
                    currBetPerLine = t;
                    break
                }
            } else currBetPerLine--;
        Ct(0)
    }

    function Rn() {
        uo(V);
        var e = I.length,
            t = 0;
        if (currNumLines == I[e - 1]) currNumLines = I[t];
        else
            for (; t < e;) {
                var s = parseInt(I[t]);
                if (currNumLines < s && s <= gameConfig.lines_max_number) {
                    currNumLines = s;
                    break
                }
                t++
            }
        At(4 - t)
    }

    function jn() {
        uo(V);
        var e = I.length - 1,
            t = e;
        if (currNumLines == I[0]) currNumLines = I[e];
        else
            for (; t >= 0;) {
                var s = parseInt(I[t]);
                if (currNumLines > s && s >= gameConfig.lines_min_number) {
                    currNumLines = s;
                    break
                }
                t--
            }
        At(4 - t)
    }

    function En() {
        screenActive && (clearTimeout(r), clearTimeout(l), denomNum > 1 && setButtonOff(bd, Mn), setButtonOff("#lft_lines", wn), setButtonOff("#rht_lines", wn), setButtonOff(D, $n), setButtonOff(D, An), setButtonOff("#TbArrowUp", Wn), $("#TbArrowUp").css({
            display: no
        }), setButtonOff("#frameCredit", Hn), $(z).addClass("string2_inactive"), setButtonOff(bmh, playClick), $(bmh).off(ae, Tn), setButtonOff(gm, Fn), $(j).off(ck, es), $(R).css({
            display: no
        }), screenActive = 0, $(st).off("touchstart mousedown", On), gs(In)), _App.idleTimerStop()
    }

    function Mn() {
	
	
        ++denomIndex >= denomNum && (denomIndex = 0), currDenom = ve[denomIndex], zn(), cashOnly && (ms(D, currTotalBet + extraBet * currBetPerLine, gameConfig.line_max_bet != gameConfig.line_min_bet ? 45 : 0), $(F).find(P).html(pe.cash(currBetPerLine)), $("#frameBetLabel").html(langText.BETtext + ": " + pe.cash(currBetPerLine))), uo(V), $(bd).find(".btnTitle").html(currDenom.label + br + Currency), $(q).html(br + br + langText.DENOMINATIONtext), $(q).css("color", "#1e90ff"), $(J).html(""), $(X).html(br + CurrencySign + currDenom.label + ("" == CurrencySign ? " " + Currency : "")), $(X).css("color", ye), qe || (qe = !0, $(cw).css({
            display: bl
        })), clearTimeout(congrTimer), congrTimer = setTimeout(vn, 2e3), Sn(), Et()
    }

    function Nn() {
        autoplay && (soundOn && createjs.Sound.play("service_autoplay_off"), stopAll || $(msb).find(ms1).html(""), setButtonOff(bGMb, Nn), animate(bGMb, parseInt($(bGMb).css("background-size")), {
            start: [0, 7],
            speed: 40
        }, 0), $(bGMb).on(ae, Dn))
    }

    function Dn() {
        $(bGMb).remove(), $(gm).css("display", bl), $("#autoNumber").find(P).html(""), ft = autoplay = bt = gt = 0
    }

    function Pn(e) {
        var t = gameConfig.autoplay_steps || [0, 5, 10, 25, 50, 100, 500, 1e3],
            s = "",
            n = V;
        switch (e.currentTarget.id) {
            case "autoArrowDown":
                --ft < 0 && (ft = t.length - 1);
                break;
            case "autoArrowUp":
                ft++;
                break;
            case "autoNumber":
            case "autoIcon":
                n = "service_autoplay_on", s = "MAX", ft = t.length - 1, setButtonOff("#autoNumber", Pn), setButtonOff("#autoIcon", Pn), fe = 0, setTimeout(go, 100)
        }
        uo(n), ft == t.length || ft <= 0 ? Dn() : (bt = gt = t[ft], $("#autoNumber").find(P).html("MAX" === s ? s : gt), autoplay = 1)
    }

    function Gn(e) {
        e=Math.round(e);
var t = e % 100,
            s = currSession.use_currency_locale ? playerAccount.decimal_separator : ".";
        return s += 0 == t ? "00" : t < 10 ? "0" + t : t, CurrencySign + fo(Math.floor(e / 100)) + s
    }

    function Hn() {
        playClick(), we = !we, $("#frameCredit").find(z).html(we ? langText.CREDITtext : langText.CASHtext), zn()
    }

    function zn() {
        if (we) var e = m / currDenom.cents,
            t = e > 0 ? e : "";
        else t = Gn(m);
        ms("#frameCredit", t)
    }

    function Fn() {
        if (null === Je)
            if (ct) Dn(), Qn("exit");
            else {
                for (var e = 0, t = 0, s = [
                        [bhi, 0],
                        ["#buttonHome", 0],
                        ["#buttonFullScreen", 0],
                        ["#buttonSound", 0]
                    ], n = s.length, o = totalBetLock ? 50 : 0; t < n;) $(s[t][0]).css("display") === bl && (e++, s[t][1] = 1), t++;
                switch (t = 0, e) {
                    case 1:
                        for (; 0 == s[t][1];) t++;
                        $(s[t][0]).css({
                            left: 457 - o
                        });
                        break;
                    case 2:
                        for (; 0 == s[t][1];) t++;
                        for ($(s[t][0]).css({
                                left: 315 - o
                            }), t++; 0 == s[t][1];) t++;
                        $(s[t][0]).css({
                            left: 599 - o - o
                        });
                        break;
                    case 3:
                        for (; 0 == s[t][1];) t++;
                        for ($(s[t][0]).css({
                                left: 173 - o
                            }), t++; 0 == s[t][1];) t++;
                        for ($(s[t][0]).css({
                                left: 457 - o - o
                            }), t++; 0 == s[t][1];) t++;
                        $(s[t][0]).css({
                            left: 741 - o - o - o
                        });
                        break;
                    case 4:
                        $(s[0][0]).css({
                            left: 118 - o
                        }), $(s[1][0]).css({
                            left: 346 - o - o
                        }), $(s[2][0]).css({
                            left: 574 - o - o - o
                        }), $(s[3][0]).css({
                            left: 802 - o - o - o - o
                        })
                }
                vn(), $(cw).css({
                    display: no
                }), En(), startState = "inGameMenu", _App.idleTimerStart(), ct = !0, uo("service_menu_up"), setButtonOn(gm, Fn), $("#menuWindow").css({
                    display: bl
                }), gameConfig.extra_bet_enabled && (setButtonOn("#lft_lines", wn), setButtonOn("#rht_lines", wn)), gameConfig.autoplay && (setButtonOn("#autoNumber", Pn), setButtonOn("#autoIcon", Pn), setButtonOn("#autoArrowDown", Pn), setButtonOn("#autoArrowUp", Pn)), exitAllow && setButtonOn("#buttonHome", Yn), fullScreenButonOn && setButtonOn("#buttonFullScreen", Jn), opera_mini || (historyMax && setButtonOn(bhi, Xn), setButtonOn("#buttonSound", qn), $("#buttonSound").on(ae, Un)), kt(), $("#menuBet").css("opacity", Q ? .3 : 1), $("#menuLines").css("opacity", Q ? .3 : 1), Q || (setButtonOn("#betArrowUp", Wn), setButtonOn("#betArrowDown", Ln), setButtonOn(F, mo), setButtonOn("#betIcon", mo), setButtonOn("#linesArrowUp", Rn), setButtonOn("#linesArrowDown", jn), setButtonOn(U, co), setButtonOn("#linesIcon", co)), ds(In), denomNum > 1 && setButtonOn(bd, Mn)
            }
    }

    function Un() {
        $("#buttonSound").css({
            "background-image": "url(" + oS.getSprite(soundOn ? "button_NOsound" : "button_sound").src + ")"
        })
    }

    function qn() {
        uo(V), soundOn && u && u.stop(), soundOn = !soundOn, withSound || (withSound = 1, createjs.Sound.initializeDefaultPlugins() && ($.each($CT_gameObject.interface_sounds, function(e, t) {
            createjs.Sound.registerSound("../../html-interface-stable/audio/" + t, e)
        }), $.each(gameAsset.sounds, function(e, t) {
            createjs.Sound.registerSound(".." + t, e)
        })))
    }

    function Jn() {
        uo(V), screenfull.toggle()
    }

    function Xn() {
        Qn("history"), $(GC).append('<iframe id="historyFrame' + stP + 'width:100%;height:100%;z-index:10;border-width:0px" src="../rgs/history1.html"><iframe>'), isMobile && !opera_mini && $("#historyFrame").css("height", "108%")
    }

    function Yn() {
        soundOn && createjs.Sound.play("service_menu_down"), setTimeout(function() {
            window.parent.postMessage('CloseGame',"*"); 
 $(s_oMain).trigger("exitGame");
        }, soundOn ? 1097 : 250)
    }

    function Vn() {
        Dn(), Qn(null)
    }

    function Qn(e) {
        gameConfig.extra_bet_enabled && (setButtonOff("#lft_lines", wn), setButtonOff("#rht_lines", wn)), setButtonOff(gm, Fn), setButtonOff("#betArrowUp", Wn), setButtonOff("#betArrowDown", Ln), setButtonOff(F, mo), setButtonOff("#betIcon", mo), setButtonOff("#linesArrowUp", Rn), setButtonOff("#linesArrowDown", jn), setButtonOff(U, co), setButtonOff("#linesIcon", co), gameConfig.autoplay && (setButtonOff("#autoNumber", Pn), setButtonOff("#autoIcon", Pn), setButtonOff("#autoArrowDown", Pn), setButtonOff("#autoArrowUp", Pn)), exitAllow && setButtonOff("#buttonHome", Yn), fullScreenButonOn && setButtonOff("#buttonFullScreen", Jn), opera_mini || (historyMax && setButtonOff(bhi, Xn), setButtonOff("#buttonSound", qn), $("#buttonSound").off(ae, Un)), totalBetLock && setButtonOff(K, ho), _App.idleTimerStop(), clearTimeout(S), denomNum > 1 && setButtonOff(bd, Mn), gs(In), Je = e, soundOn && createjs.Sound.play("service_menu_down"), setTimeout(function() {
            switch (ct = !1, $("#menuWindow").css({
                display: no
            }), Je) {
                case "play":
                    It();
                    break;
                case "history":
                    _App.idleTimerStart();
                    break;
                default:
                    Bn()
            }
            Je = null
        }, soundOn ? 1097 : 250)
    }

    function Kn() {
        switch (function() {
            for (var e = L.length; ++Ue < e && !(L[Ue] in gameAsset.images || "top_jackpot" == L[Ue]) || L[Ue] in gameAConf && !(nextSubgameLabel in gameAConf[L[Ue]]););
            Ue >= e && (Ue = 0)
        }(), $(M).css("display", no), L[Ue]) {
            case "top_wild":
                var e = "top_wild_fg",
                    t = oS.getSprite(e);
                t && ot ? gameAsset.text && gameAsset.text.choosedWildPos && $(M).css("display", bl) : (e = "top_wild", t = oS.getSprite(e)), t && ks(t, e);
                break;
            default:
                (t = oS.getSprite(L[Ue])) && ks(t, L[Ue]);
                break;
            case "top_fg":
                if (ot) switch (currSubgame.subgame_label) {
                    case "free":
                        if (e = "top_fg_super", t = oS.getSprite(e)) ks(t, e);
                        else {
                            var s = gameConfig.paytables[currSubgame.reels_sets_name].paytable_scatters,
                                n = 0;
                            for (var o in s)
                                for (var a in s[o])
                                    if ("free_games" === s[o][a].bonus_type) {
                                        n = 1;
                                        break
                                    } if (e = "top_fg", t = oS.getSprite(e), !n || !t) return void Kn();
                            ks(t, e)
                        }
                        break;
                    case "free2":
                        return void Kn()
                } else {
                    s = gameConfig.paytables[gameConfig.main_subgame_reels_set].paytable_scatters, n = 0;
                    for (var o in s)
                        for (var a in s[o]) {
                            if (gameConfig.extra_bet_enabled) {
                                e = extraBet ? "top_fg" : "top_extra", n = 1;
                                break
                            }
                            if ("free_games" === s[o][a].bonus_type && !s[o][a].free_games_extra_bet_only) {
                                e = "top_fg", n = 1;
                                break
                            }
                        }
                    if (!n) return void Kn();
                    ks(t = oS.getSprite(e), e)
                }
                break;
            case "top_jackpot":
                if ("" != jpUrl && !portret) return extraBet && !ot ? (e = "top_jackpot_extra", (t = oS.getSprite(e)) || (e = "top_jackpot", t = oS.getSprite(e))) : (e = "top_jackpot_fg", t = oS.getSprite(e), ot && t || (e = "top_jackpot", t = oS.getSprite(e))), t ? ks(t, e) : $(E).css({
                    "background-image": ""
                }), jpNum = xe = $e = 0, $("#jackpot_name").css({
                    display: bl,
                    "background-position": "0px -" + ie[re[jpNum][xe]][0] + "px"
                }), $("#jackpot_frame").css({
                    display: bl
                }), inShowJackpotLevels = 1, Ie = 200, void so();
                Ue = 0;
            case "top_name":
                extraBet && !ot ? (e = "top_name_extra", (t = oS.getSprite(e)) || (e = "top_name", t = oS.getSprite(e))) : (e = "top_name_fg", t = oS.getSprite(e), ot && t || (e = "top_name", t = oS.getSprite(e))), ks(t, e)
        }
        h = setTimeout(Kn, 4e3)
    }

    function Zn() {
        "" != jpUrl && (setTimeout(Zn, 1e3), networkOut || $.ajax({
            type: "GET",
            url: decodeURIComponent(jpUrl),
            success: function(e) {
                jp_current_levelsTop = [], re = [];
                var t = 0;
                if (jpsystems = e.jpsystems, $.each(jpsystems, function(e, s) {
                        jp_current_levelsTop.push([]), re.push([]), $.each(jpsystems[e].levels, function(n, o) {
                            o.show_on_display && o.value_vis && (jp_current_levelsTop[t].push(o.value_vis * jpsystems[e].denom_cents), re[t].push("happy_hour" === s.type ? s.type : o.level_name.toUpperCase()))
                        }), 0 === jp_current_levelsTop[t].length ? (jp_current_levelsTop.pop(), re.pop()) : (re[t].reverse(), jp_current_levelsTop[t++].reverse())
                    }), portret) {
                    jpStartShow && (jpStartShow = 0, pe.showJackpotTop()), inShowJackpotLevels && (ao(), Kn());
                    for (var s = 0; s < jp_current_levelsTop[jpNum].length; s++)
                        if (oldJpAmmount[s] < jp_current_levelsTop[jpNum][s]) {
                            for (var n = oldJpAmmount[s], o = 0, a = 0; Math.floor(n /= 10) > 0;) o++;
                            for (n = jp_current_levelsTop[jpNum][s]; Math.floor(n /= 10) > 0;) a++;
                            a > o && $("#" + W[s]).prepend(divcl + 'tablo_jackpot_digits" id="' + W[s] + a + '"' + bgP + "0px -0" + pd), rotateAmmount[s] = 1
                        }
                }
            }
        }))
    }

    function eo(e, t) {
        oldJpAmmount[e] = t;
        var s = 0,
            n = "",
            o = divcl + 'tablo_jackpot_digits"',
            a = o + bgP + "0px -1606px; width:40" + pd;
        if (t > 0)
            do {
                var i = o + ' id="' + W[e] + s + '"' + bgP + "0px -";
                2 == s && (n = a + n), n = i + t % 10 * 146 + pd + n, s++
            } while ((t = Math.floor(t / 10)) > 0);
        if (s < 3) {
            var r = i + "0" + pd;
            switch (s) {
                case 1:
                    n = r + n, s++;
                case 2:
                    s++, n = r + (n = a + n)
            }
        }
        $("#" + W[e]).html(n)
    }

    function so() {
        var e = divcl + 'jackpot_digits"',
            t = Number(jp_current_levelsTop[jpNum][xe]),
            s = 0,
            n = "",
            o = e + bgP + "-" + 11 * gCl.top_jackpot_digits_width + "px -" + $e + wi + (gCl.top_jackpot_digits_width >> 1) + pd;
        if (t > 0)
            do {
                2 == s && (n = o + n), n = e + bgP + "-" + t % 10 * gCl.top_jackpot_digits_width + "px -" + $e + pd + n, s++
            } while ((t = Math.floor(t / 10)) > 0);
        if (s < 3) {
            var a = e + bgP + "0px -" + $e + pd;
            switch (s) {
                case 1:
                    n = a + n;
                case 2:
                    n = a + (n = o + n)
            }
        }
        $("#jackpot_frame").html(n)
    }

    function ao() {
        $("#jackpot_name").css({
            display: no
        }), $("#jackpot_frame").css({
            display: no
        }), inShowJackpotLevels = 0
    }

    function io(e, t, s, n) {
        if (n > 0) {
            var o = t % 10,
                a = parseInt(document.getElementById(W[e] + s).style.backgroundPosition.split(" ")[1]) - n;
            a <= -1460 && (a += 1460), (0 == o && a < -1314 ? 0 : a / -146) > o && (a = -146 * o, 0 == s && (oldJpAmmount[e]++, oldJpAmmount[e] == jp_current_levelsTop[jpNum][e] && (rotateAmmount[e] = 0))), $("#" + W[e] + s).css({
                "background-position": "0px " + a + "px"
            })
        }
    }

    function ro() {
        "main_attraction" in gameAsset.sounds && soundOn && (u = createjs.Sound.play("main_attraction"), r = setTimeout(ro, Math.floor(12e4 * Math.random()) + 6e4))
    }

    function lo() {
        animate(st, parseInt($(st).css("background-size")), {
            start: [16, 23],
            speed: 80
        }, 1), animate(gm, parseInt($(gm).css("background-size")), {
            start: [16, 23],
            speed: 80
        }, 1), l = setTimeout(lo, 3e3)
    }

    function uo(e) {
        soundOn && createjs.Sound.play(e), ct && (clearTimeout(S), S = setTimeout(Vn, 1e4))
    }

    function co() {
        setButtonOff(U, co), setButtonOff("#linesIcon", co), uo("service_autoplay_on"), currNumLines = gameConfig.lines_max_number, Se = 0, $(U).find(P).html("MAX"), $(U).find(P).css({
            color: "red"
        }), setTimeout(po, 100)
    }

    function mo() {
        setButtonOff(F, mo), setButtonOff("#betIcon", mo), uo("service_autoplay_on"), currBetPerLine = gameConfig.line_max_bet, _e = 0, $(F).find(P).html("MAX"), $(F).find(P).css({
            color: "red"
        }), setTimeout(bo, 100)
    }

    function po() {
        $(U).find(P).css({
            color: ++Se % 2 ? "white" : "red"
        }), Se < 5 ? setTimeout(po, 100) : (setButtonOn(U, co), setButtonOn("#linesIcon", co), At(0))
    }

    function go() {
        $("#autoNumber").find(P).css({
            color: ++fe % 2 ? "white" : "red"
        }), fe < 5 ? setTimeout(go, 100) : (setButtonOn("#autoNumber", Pn), setButtonOn("#autoIcon", Pn), $("#autoNumber").find(P).html(gt))
    }

    function bo() {
        $(F).find(P).css({
            color: ++_e % 2 ? "white" : "red"
        }), _e < 5 ? setTimeout(bo, 100) : ($(F).find(P).html(pe.cash(currBetPerLine)), setButtonOn(F, mo), setButtonOn("#betIcon", mo), $("#frameBetLabel").html(langText.BETtext + ": " + pe.cash(currBetPerLine)), Ct(0))
    }

    function fo(e) {
        for (var t, s, n = 0 == e ? "0" : ""; e > 0;) t = e % 1e3, s = "", (e = Math.floor(e / 1e3)) > 0 && (currSession.use_currency_locale && (s = playerAccount.thousands_separator), t < 10 ? s += "00" : t < 100 && (s += "0")), n = s + t + n;
        return n
    }

    function _o(e, t) {
        var s = oS.getSprite("menuWindowBg1"),
            n = 'style="position:absolute;z-index:-1;' + bgS + s.width + "px ",
            o = wi + s.width + to,
            a = n + s.height + he + s.height / 2 + o,
            i = bgUrl + s.src + divEnd;
        $(t).append(divB + 'top"' + a + "0" + i), $(t).append(divB + 'bottom"' + a + (e - 8) + "px;background-position:0px 8" + i), s = oS.getSprite("menuWindowBg2"), $(t).append(divB + 'middle"' + n + s.height + he + (e - 16) + o + 8 + bgUrl + s.src + divEnd)
    }

    function ho() {
        uo(V), (Q = !Q) ? ($("#menuBet").css("opacity", .3), $("#menuLines").css("opacity", .3), setButtonOff("#betArrowUp", Wn), setButtonOff("#betArrowDown", Ln), setButtonOff(F, mo), setButtonOff("#betIcon", mo), setButtonOff("#linesArrowUp", Rn), setButtonOff("#linesArrowDown", jn), setButtonOff(U, co), setButtonOff("#linesIcon", co), $(K).css({
            "background-position-x": "-202px"
        }), $("#lockText").html(langText.locked), $("#lock").css({
            display: bl
        })) : ($("#menuBet").css("opacity", 1), $("#menuLines").css("opacity", 1), setButtonOn("#betArrowUp", Wn), setButtonOn("#betArrowDown", Ln), setButtonOn(F, mo), setButtonOn("#betIcon", mo), setButtonOn("#linesArrowUp", Rn), setButtonOn("#linesArrowDown", jn), setButtonOn(U, co), setButtonOn("#linesIcon", co), $(K).css({
            "background-position-x": "0px"
        }), $("#lockText").html(langText.Unlocked), $("#lock").css({
            display: no
        }))
    }

    function So() {
        if (autoplay && Dn(), "prevWinDisplayLoop" === state || "gameInit" === state) {
            En();
            var t, s = (new Date).getTime() - e,
                n = Z - ee,
                o = parseInt(s / 36e5),
                a = parseInt((s - 36e5 * o) / 6e4);
            t = n < 0 ? "-" + pe.cash(-n) : pe.cash(n), $(R).css({
                display: bl
            }), _o(300, R), $(R).append(divB + 't">' + br + "REALITY CHECK<br><br>Duration: " + o + " hours " + a + " minutes.<br>Bet: " + pe.cash(Z) + ".<br>Win: " + pe.cash(ee) + ".<br>Total losses: " + t + ".<br>" + de), $(R).append('<button id="contPlay" class="button">Continue play</button><button id="returnWeb" class="button">Return to web</button>'), setButtonOn("#contPlay", $o), setButtonOn("#returnWeb", Yn), _App.idleTimerStart(), te = 1
        } else te = 0
    }

    function $o() {
        setButtonOff("#contPlay", $o), setButtonOff("#returnWeb", Yn), $(R).css({
            display: no
        }), $(R).html(""), _App.idleTimerStop(), Bn(), setTimeout(So, 6e4 * mtTime)
    }

    function xo() {
        if (opera_mini ? setTimeout(xo, 40) : requestAnimationFrame(xo), "" != jpUrl)
            for (s = 0; s < 4; s++) rotateAmmount[s] && _CTSlotApp.rotateNumber(s);
        if (inShowJackpotLevels && _CTSlotApp.changeJpDigitsColor(), hideExSymbols && _CTSlotApp.hideExWild(), reelStarted) {
            for (var e = !1, t = _aMovingColumns.length, s = 0; s < t; s++) e |= _aMovingColumns[s]._updateMoving();
            e || (reelStarted = !1, _CTSlotApp.startSubgameShowWin())
        } else startWait > 0 && (new Date).getTime() - startWait >= 2e3 && _CTSlotApp.upAutoplay()
    }
    this.subgameStarted = function() {
        ot ? setTimeout(Wt, 2 == currSubgameIndex ? 100 : 500) : Wt()
    }, this.subgameAnimFinished = function() {
        var e = 0,
            t = 0,
            s = -1,
            n = 0,
            o = gameConfig.paytables[currSubgame.reels_sets_name].paytable_scatters,
            a = 0,
            i = gameConfig.paytables[currSubgame.reels_sets_name].paytable_wilds,
            r = currSubgame.stop_reels;
        resultSymbols = currSubgame.stop_reels;
        var l = (new Date).getTime() - _t + ("main" === currSubgame.subgame_label ? 0 : 100),
            u = gameConfig.reel_rotate_mintime > 0 ? gameConfig.reel_rotate_mintime / reelC : 360,
            c = currSubgame.subgame_bonus[0];
        QAtrace += currSubgame.win + " subgameAnimFinished: " + currSubgame.result_reels + "\n" + currSubgame.subgame_label + "\n" + JSON.stringify(c) + "\n", c && all_attractions && ("modify_reels" == c.type || "expanding_wilds_by_chance" == c.type) && (gameAConf.wizard_bonus && (ne = 0, fn("wizard_", Rt, 0), l += 40 * gameAConf.wizard_bonus[0][4]), soundOn && createjs.Sound.play("wizard"));
        var m = gameConfig.paytables[currSubgame.reels_sets_name].paytable_wilds;
        r = currSubgame.stop_reels;
        if (Ge = 0, gameAConf.full_house)
            if (5 === reelC) {
                if (r.length > 3 && !(r[0][0] in m))
                    for (var p = r[0].length, d = 0, g = 0; g < 5; g++) {
                        for (var b = 0; b < p; b++)
                            if (r[0][0] != r[g][b]) {
                                d = 1;
                                break
                            } if (d) break;
                        b == p && Ge++
                    }
            } else r.length > 9 && r[0][0] == r[1][0] && r[0][0] == r[2][0] && r[0][0] == r[5][0] && r[0][0] == r[6][0] && r[0][0] == r[7][0] && r[0][0] == r[10][0] && r[0][0] == r[11][0] && r[0][0] == r[12][0] && (Ge = 3);
        if (ce = 0, currSubgame.lines_win.forEach(function(t) {
                5 == t.symbol_count && (ce = 1), i && t.symbol in i && t.symbol_count >= 4 && (e = 1)
            }), reelR > 1) {
            if (currSubgame.scatters_win.length) {
                var f = [];
                for (var m in o[1]) f.push(parseInt(m));
                s = (f = Math.min(this, f)) > 3 ? f : 3
            }
            for (var _ = 0; _ < reelC; _++) {
                var h = "no";
                if ("be" === regulation && (h = "service_stop00" + (_ + 1)), o)
                    for (var S = reelR - 1; S >= 0; S--)
                        if (r[_][S] in o) {
                            n++, _ == reelC - 2 && 1 == n || _ == reelC - 1 && n <= 2 || (h = "service_specialstop" + n);
                            break
                        } for (S = reelR - 1; S >= 0; S--)
                    if (i)
                        for (symbs in i)
                            if (r[_][S] == symbs) {
                                h = gameAsset.sounds.wild_stop ? "wild_stop" : "wilds_stop";
                                break
                            } for (S = reelR - 1; S >= 0; S--) {
                    var $ = "sym_" + r[_][S] + "_stop";
                    if ($ in gameAsset.sounds) {
                        h = $;
                        break
                    }
                }
                if (o)
                    for (S = reelR - 1; S >= 0; S--) currSubgame.scatters_win.length && r[_][S] in o && t++;
                t === s - 1 && (a = 1), (a || Ge - 2 == _ && Ge > 2) && !se ? (_aMovingColumns[_].setAnimDuration(l + u * _ + se, h, 0, _), se = 4e3 / (reelC - _ - 1)) : !e && !ce || se || _ !== reelC - 2 ? _aMovingColumns[_].setAnimDuration(l + u * _ + se, h, se ? 20 : null) : (_aMovingColumns[_].setAnimDuration(l + u * _ + se, h, 0, _), se = 2e3)
            }
        } else
            for (_ = 0; _ < reelC; _++) _aMovingColumns[_].setAnimDuration(l + (parseInt(_ / gameConfig.columns) + _ % gameConfig.columns << 8), "no");
        if (pe.playerAccountUpdated(), "skillStop" === startState && (!c || "modify_reels" !== c.type && "expanding_wilds_by_chance" !== c.type) && !se)
            for (_ = 0; _ < reelC - (0 == gameConfig.reel_rotate_mintime ? 0 : 1); _++) _aMovingColumns[_].stopRotating()
    }, this.intJackpotExit = function() {
        inIntJackpot = 0, ze = 1, m = parseInt(playerAccount.credit), zn(), $("#interactiveFrame").remove(), inJackpot ? Pt() : pe.startSubgameShowWin()
    }, this.prevWinDisplayLoop = function() {
        if (historyMax && !opera_mini && $(bhi).css({
                display: bl
            }), gs(is), mt + currSession.gameplay_mintime < (new Date).getTime() && game_finished) {
            if (autoplay && !ct) return void It();
            gameWin > 0 && !nt && !autoplay ? (rt = 1, T = 450, lt = !1, Ns(), initial_bet && Et()) : (Et(), rt = 0), xt || (te ? Bn() : So())
        } else setTimeout(this.prevWinDisplayLoop, 100)
    }, this.subgameFinished = function() {
        QAtrace += "subgameFinished\n", w = !0, ot && (hideExSymbols = 1), gotoNextState()
    }, this.continueBonus = function() {
        $(msb).find(ms1).html(langText.pressSTARTTtext), ds(Jt), startState = "endChooseBonus", _App.idleTimerStart()
    }, this.waitForContinue = function() {
        switch (inDouble || stopAll || autoplay || _App.idleTimerStart(), subgamesList[currSubgameIndex].start_subgame_timestamp = (new Date).toISOString().replace("T", " "), currWaitReq.type) {
            case "preselected_random_choice":
                switch (channelSpin && channelSpin.stop(), currWaitReq.subtype) {
                    case "select_multiplier":
                        $(j).html(""), $(j).css("display", no), soundOn && (channelSpin = createjs.Sound.play("fg_wait_loop", {
                            loop: -1
                        })), Le = 0, Ae = 200, Be = 100, ke = 1, Ce = 1, $(msb).find(ms1).html(gameAsset.text.chooseWildText), g = setTimeout(jt, Ae), startState = "select_multiplier", $(R).css({
                            display: bl
                        }), _o(306, R), $(R).append(divB + 't">' + br + gameAsset.text.chooseWildText + de);
                        for (var e = 20, t = (l = currWaitReq.continue_params[0]).values.length, s = Math.floor(834 - (t - 1) * e - t * SW) >> 1, n = 80, o = oS.getSprite("sym_main_" + gameAConf.select_multiplierSym), a = 0; a < t; a++) {
                            var i = "choosWildPict_" + a;
                            $(R).append(divB + i + stP + " z-index:6;height:" + SH + wi + SW + le + s + to + n + bibgI + o.src + ");" + bgS + o.width + "px " + o.height + pd), s += SW + e, $("#" + i).on(ck, Ft)
                        }
                        f = setInterval(function(e) {
                            for (var s = 0; s < t; s++) $("#choosWildPict_" + l.values[s]).css("opacity", s == Le ? "1" : ".5");
                            ++Le >= t && (Le = 0)
                        }, 300);
                        break;
                    case "bonus_pick_the_pig":
                        soundOn && (channelSpin = createjs.Sound.play("bonus_background_loop", {
                            loop: -1
                        })), $(msb).find(ms1).html(gameAsset.text.help.bar_message);
                        var r = "top_bonus_win";
                        (o = oS.getSprite(r)) && (ao(), Ue = -1, clearTimeout(h), ks(o, r)), startState = "PickThePig", $(j).on(ck, Qt);
                        break;
                    case "select_card":
                        gameAConf.before_fg_attraction ? fn("before_fg_attraction", on, 0) : Zt(), null != gameAConf.bonus_choise.before && Kt();
                        break;
                    case "continue_play_after_preselected_random_choice":
                        recovery && (Zt(), Vt({
                            currentTarget: {
                                id: "bonus" + gameResume.selected_hidden_card_index
                            }
                        }))
                }
                break;
            case "select_wild_symbol":
                $(j).html(""), $(j).css("display", no), soundOn && (channelSpin = createjs.Sound.play(gameAsset.sounds.choose ? "choose" : "fg_wait_loop", {
                    loop: -1
                })), Le = We = 0, Ae = 200, Be = 100, ke = 1, Ce = 1, $(msb).find(ms1).html(gameAsset.text.chooseWildText), g = setTimeout(jt, Ae), startState = "select_wild_symbol", $(R).css({
                    display: bl
                }), _o(306, R), $(R).append(divB + 't">' + br + gameAsset.text.chooseWildText + de);
                var l;
                for (e = 20, t = (l = currWaitReq.continue_params[0]).values.length, s = Math.floor(834 - (t - 1) * e - t * SW) >> 1, n = 80, a = 0; a < t; a++) {
                    i = "choosWildPict_" + l.values[a];
                    var u = oS.getSprite("main_" + l.values[a]);
                    o = u || oS.getSprite("sym_main_" + l.values[a]);
                    $(R).append(divB + i + stP + " z-index:6;height:" + SH + wi + SW + le + s + to + n + bibgI + o.src + ");" + bgS + o.width + "px " + o.height + pd), s += SW + e, i = "#" + i, $(i).on(ck, qt), u && (animate(i, o.width, gCl[ans + "main_" + l.values[a]], !0), $(i).on(ae, Ht), We++)
                }
                u || (f = setInterval(function(e) {
                    for (var s = 0; s < t; s++) $("#choosWildPict_" + l.values[s]).css("opacity", s == Le ? "1" : ".5");
                    ++Le >= t && (Le = 0)
                }, 300));
                break;
            case "can_play_red_black_double":
                if (autoplay) currWaitParams.double_betpart = "skip", gotoNextState();
                else if (inDouble) {
                    if (!recovery) switch (gameWin = Number(currDouble.win), currDouble.double_result) {
                        case "lost":
                            dbl.doubleLoose();
                            break;
                        case "win":
                            dbl.doubleWin(!1)
                    }
                } else currWaitParams.double_betpart = "skip", T *= 1.2, ut = 1, startState = "enterDouble", ds(as), p = setTimeout(function() {
                    gs(as), $(gmI).append(divB + "buttonStartBlinck" + addInt + oS.getSprite("signTake").src + ")" + den), animate(bSb, parseInt($(bSb).css("background-size")), {
                        start: [8, 15],
                        loop: [8, 15],
                        speed: 40
                    }, 0), setButtonOn(bSb, ns), $(st).css("display", no), sizeHandler()
                }, 5e3), $(gm).css("display", no), $(gmI).append(divB + "buttonGameMenuBlinck" + addInt + oS.getSprite("signX2").src + ")" + den), animate(bGMb, parseInt($(bGMb).css("background-size")), {
                    start: [8, 15],
                    loop: [8, 15],
                    speed: 40
                }, 0), setButtonOn(bGMb, ts), sizeHandler(), 0 == currSubgame.is_free && Ns()
        }
    }, this.endDouble = function(e, t) {
        ut = 0, $("#frameBetLabel").css({
            display: bl
        }), $(D).find(z).html(langText.TotalBETtext), freeround_limit ? ms(wp, freeround_win) : ms(D, currTotalBet + extraBet * currBetPerLine, gameConfig.line_max_bet != gameConfig.line_min_bet ? 45 : 0), $(wp).find(z).html(freeround_limit ? langText.FREE_spins_win : langText.WINtext), $(wp).find(H).css({
            color: "white"
        }), $(gm).css("display", bl), $(st).css("display", bl), $(bmh).css({
            display: bl
        }), $(bd).css({
            display: bl
        }), $("#left_lines").css({
            display: bl
        }), $("#right_lines").css({
            display: bl
        }), gameWin > 0 ? (Es(), rt = 1, at = !0) : (Sn(), Ot()), Ue = -1, Kn(), e ? pe.gameFinished() : (t && (oe = 1), gotoNextState())
    }, this.gameFinished = function() {
        if (inDouble && !recovery) switch (gameWin = Number(currDouble.win), currDouble.double_result) {
            case "lost":
                dbl.doubleLoose();
                break;
            case "limit_over":
                dbl.doubleWin(!0)
        } else if (Xe = 0, recovery = !1, $(msb).find(ms1).html(langText.gameOVERtext), ee += Number(gameWin), gameWin > 0 && !freeround_limit) {
            var e, s = 11,
                o = gameWin,
                a = currDenom.cents < 1 ? 1 : currDenom.cents;
            soundOn && (e = createjs.Sound.play("service_credit_loop", {
                loop: -1
            })), ds(is), gameWin < 25 ? s = 3 : gameWin < 45 ? s = 7 : gameWin > 1e6 ? s = 11111 : gameWin > 1e5 ? s = 151 : gameWin > 1e4 && (s = 53), x = setInterval(function() {
                var i = ++Xe * s * (1 + autoplay);
                o < i ? (clearInterval(x), x = null, freeround_limit || (m += o * a, gs(is), soundOn && (e.stop(), createjs.Sound.play("service_credit_end"))), setTimeout(function() {
                    ze = 0, $(wp).find(z).html(langText.WinnerPaidtext), ms(wp, gameWin), all_attractions ? gameWin > 40 * currTotalBet ? (xt = 3, soundOn ? (t = createjs.Sound.play("megaWin")).addEventListener("complete", cs) : n = setTimeout(cs, 1e4), hn("megaWin")) : gameWin > 20 * currTotalBet ? (xt = 2, soundOn ? t = createjs.Sound.play("bigWin") : n = setTimeout(cs, 1e4), hn("bigWin1", cs)) : gameWin >= 10 * currTotalBet ? (xt = 1, hn("bigWinCoins"), soundOn ? (t = createjs.Sound.play("celeb1"), setTimeout(function() {
                        t.stop(), t = createjs.Sound.play("celeb2")
                    }, 2e3), n = setTimeout(function() {
                        t.stop(), t = createjs.Sound.play("celeb3"), n = setTimeout(cs, 4500)
                    }, 5e3)) : setTimeout(cs, 5e3)) : gotoNextState() : gotoNextState()
                }, 200)) : (o -= i, m += i * a), ms(wp, o), zn()
            }, 100)
        } else gotoNextState();
        tt = !1, pe.playerAccountUpdated()
    }, this.playerAccountUpdated = function() {
        x || inJackpot || ze || (m = parseInt(playerAccount.credit), zn())
    }, this.exitHelp = function() {
        _App.idleTimerStop(), Bn(), $(gmI).css({
            display: bl
        }), inHelp = 0, gameWin > 0 && Os(), Ue = -1, Kn()
    }, this.hideExWild = function() {
        var e = ot || autoplay ? .07 : .05,
            t = 0;
        for (var s in Ne) t++, $(Ne[s]).css("opacity", parseFloat($(Ne[s]).css("opacity")) - e), parseFloat($(Ne[s]).css("opacity")) < e && t--;
        0 === t && (Ne = [], $("#expandedWild_frame").remove(), hideExSymbols = 0)
    }, this.startSubgameShowWin = function() {
        if (QAtrace += "startSubgameShowWin\n", gs(Lt), inIntJackpot) Gt();
        else if (inJackpot) Pt();
        else {
            w = !1, rt = 1, it = !1, et = 1 == currSubgame.is_last, k = !1, Es(), parseInt(currSubgame.win) > 0 && !freeround_limit && ($(wp).find(z).html(langText.WINtext), ot || $(wp).find(H).html(""), $(wp).find(H).css({
                color: "white"
            }));
            var e = currSubgame.subgame_bonus[0];
            gameAConf.cashTime && currSubgame.win > 20 * currTotalBet ? Ms() : e && ("modify_reels" == e.type || "expanding_wilds_by_chance" == e.type) && gameAConf.bigAnim_attraction || Os()
        }
    }, this.upAutoplay = function() {
        soundOn && createjs.Sound.play("service_autoplay_on"), bt = gt = gameConfig.autoplay_steps[gameConfig.autoplay_steps.length - 1], autoplay = 1, It()
    }, this.stopAllfunc = function() {
        switch (stopAll = !0, QAtrace += " this.stopAll \n", startState) {
            case "takeJackpot":
                setButtonOff(st, Mt);
                break;
            case "bonusEnd":
                setButtonOff(st, Qs);
                break;
            case "startFG":
                setButtonOff(st, Ks);
                break;
            case "FGEnd":
                setButtonOff(st, Ds);
                break;
            case "SGEnd":
                setButtonOff(st, Ps);
                break;
            case "preselected_random_choice":
                setButtonOff(st, qs);
                break;
            case "endChooseBonus":
                setButtonOff(st, Jt);
                break;
            case "inDouble":
                DBLwait = listenrsOn, dbl.dblListenersOff();
                break;
            case "enterDouble":
                setButtonOff(bGMb, ts), setButtonOff(bSb, ns);
                break;
            case "inGameMenu":
                rt = 0, clearTimeout(g), clearTimeout(S);
                break;
            case "waitGame":
                rt = 0, clearTimeout(g), En();
                break;
            case "select_card":
                $(".chBon").off(ck, Vt), isMobile || ($(".chBon").off("mouseover", setcursorPointer), $(".chBon").off("mouseout", setcursorAuto))
        }
        networkOut && $(msb).find(ms1).html(langText.NetworkProblеm)
    }, this.startAll = function() {
        switch (networkOut && $(msb).find(ms1).html(""), stopAll = !1, QAtrace += " this.startAll \n", startState) {
            case "takeJackpot":
                setButtonOn(st, Mt), _App.idleTimerStart();
                break;
            case "bonusEnd":
                $(msb).find(ms1).html(langText.pressSTARTTtext), setButtonOn(st, Qs), _App.idleTimerStart();
                break;
            case "startFG":
                $(msb).find(ms1).html(langText.pressSTARTTtext), setButtonOn(st, Ks), _App.idleTimerStart();
                break;
            case "FGEnd":
                $(msb).find(ms1).html(langText.pressSTARTTtext), setButtonOn(st, Ds), _App.idleTimerStart();
                break;
            case "SGEnd":
                $(msb).find(ms1).html(langText.pressSTARTTtext), setButtonOn(st, Ps), _App.idleTimerStart();
                break;
            case "preselected_random_choice":
                $(msb).find(ms1).html(langText.pressSTARTTtext), setButtonOn(st, qs), _App.idleTimerStart();
                break;
            case "endChooseBonus":
		
                $(msb).find(ms1).html(langText.pressSTARTTtext), setButtonOn(st, Jt), _App.idleTimerStart();
                break;
            case "enterDouble":
                $(msb).find(ms1).html(""), setButtonOn(bGMb, ts), setButtonOn(bSb, ns), rt && Ns(), _App.idleTimerStart();
                break;
            case "inDouble":
                DBLwait && dbl.dblListenersOn();
                break;
            case "inGameMenu":
                S = setTimeout(Vn, 1e4), gameWin > 0 ? (rt = 1, Ns()) : Et(), _App.idleTimerStart();
                break;
            case "waitGame":
		
                gameWin > 0 ? (rt = 1, Ns()) : Et(), Bn();
                break;
            case "select_multiplier":
            case "select_wild_symbol":
                $(msb).find(ms1).html(gameAsset.text.chooseWildText), _App.idleTimerStart();
                break;
            case "select_card":
                $(msb).find(ms1).html(""), _App.idleTimerStart(), $(".chBon").on(ck, Vt), isMobile || ($(".chBon").on("mouseover", setcursorPointer), $(".chBon").on("mouseout", setcursorAuto))
        }
    }, this.historyExit = function() {
        _App.idleTimerStop(), $("#historyFrame").remove(), Bn()
    }, this.changeJpDigitsColor = function() {
        if (++Oe < Ie) Oe % 8 == 0 && ($e += gCl.top_jackpot_digits_height) + 5 >= oS.getSprite("top_jackpot_digits").height && ($e = 0), so();
        else {
            if (Oe = 0, ++xe > 1 && (Ie = 100), xe > jp_current_levelsTop[jpNum].length - 1 && (xe = $e = 0, Ie = 200, ++jpNum > jp_current_levelsTop.length - 1)) return jpNum = 0, ao(), void Kn();
            $("#jackpot_name").css({
                display: bl,
                "background-position": "0px -" + ie[re[jpNum][xe]][0] + "px"
            })
        }
    }, this.showJackpotTop = function() {
        rotateAmmount = [0, 0, 0, 0];
        var e = jp_current_levelsTop[jpNum].length;
        switch (e) {
            case 1:
                $("#tabloSilver").css({
                    display: no
                });
            case 2:
                $("#tabloBronze").css({
                    display: no
                });
            case 3:
                $("#tabloLead").css({
                    display: no
                }), $("#tabloBronze").css({
                    left: "256px"
                })
        }
        switch (e) {
            case 4:
                $("#tabloLead").find(".jpLabel").css("background-position", "0px -" + ie[re[jpNum][3]][1] + "px"), $("#tabloLead").css({
                    display: bl
                }), $("#tabloBronze").css({
                    left: "512px"
                });
            case 3:
                $("#tabloBronze").find(".jpLabel").css("background-position", "0px -" + ie[re[jpNum][2]][1] + "px"), $("#tabloBronze").css({
                    display: bl
                });
            case 2:
                $("#tabloSilver").find(".jpLabel").css("background-position", "0px -" + ie[re[jpNum][1]][1] + "px"), $("#tabloSilver").css({
                    display: bl
                });
            case 1:
                $("#tabloGold").find(".jpLabel").css("background-position", "0px -" + ie[re[jpNum][0]][1] + "px"), $("#tabloGold").css({
                    display: bl
                })
        }
        for (var t = 0; t < e; t++) eo(t, jp_current_levelsTop[jpNum][t])
    }, this.rotateNumber = function(e) {
        var t = 0,
            s = oldJpAmmount[e] + 1,
            n = Math.floor(146 * (jp_current_levelsTop[jpNum][e] - oldJpAmmount[e]) / 60);
        n = n > 140 ? 140 : n;
        do {
            io(e, s % 10, t, n), t++
        } while ((s = Math.floor(s / 10)) > 0)
    }, this.cash = function(e, t) {
        return t | cashOnly ? Gn(e * currDenom.cents) : fo(e)
    }, this.gameIsReady = function() {
		
		
		gameResume=serverResponse.resume_game;
		
        Zn(), I = gameConfig.lines_step_numbers;
        var t = gameAConf.game_settings,
            s = currSession.enabled_denoms.length;
        if (t) {
            if (t.fixed_lines) {
                gameConfig.lines_min_number = gameConfig.lines_max_number = t.fixed_lines;
                for (var n = 0; n < 5; n++) I[n] = t.fixed_lines
            }
            t.lines_steps_only && (I = t.lines_steps_only)
        }
        gCl = gameAConf.layout, denomNum = 0, gCc = gameConfig.columns, Fe = 0 != gameConfig.skill_stop_enabled, _o(204, cw), $(cw).append(divB + "congr_text" + den), $(cw).append(divB + "congr_text0" + den), $(cw).append(divB + "congr_text1" + den), $(X).css({
            "font-size": "50px",
            color: "yellow",
            position: "relative",
            top: "-8px"
        });
		
		if(gameResume==undefined  && !recovery){
		var gameResume={currDenom:currSession.enabled_denoms[0]};
		
		}
		
		
		
        for (n = 0; n < s; n++) currSession.enabled_denoms[n].label in gameConfig.game_denoms && (ve.push(currSession.enabled_denoms[n]), denomNum++);
        for (n = 1; n < denomNum; n++)
            for (var a = n; a > 0 && parseInt(ve[a].cents) < parseInt(ve[a - 1].cents); a--) {
                var i = ve[a - 1];
                ve[a - 1] = ve[a], ve[a] = i
            }
			console.log(gameResume);
        if (recovery) {
			
            for (extraBet = gameResume.extra_bet, playerAccount = gameResume.account_status_after_bet, currBetPerLine = parseFloat(gameResume.line_bet), currNumLines = parseInt(gameResume.lines), state = "subgameFinished", n = 0; n < denomNum; n++)

			
                if (ve[0].id == gameResume.game_denom) {
                    //denomIndex = gameResume.denomIndex;$("#frameTotalBet").find(".string1").html(fo(parseFloat(currNumLines * currBetPerLine / gameConfig.lines_per_credit)));
                   // break;
                } 
				history_currDenom = ve[0];
				
				
				
				denomIndex = gameResume.denomIndex;$("#frameTotalBet").find(".string1").html(fo(parseFloat(currNumLines * currBetPerLine / gameConfig.lines_per_credit)));
				
        } else state = "gameInit", currBetPerLine = freeround_limit ? freeround_bet_per_line_cents : gameConfig.line_min_bet, currNumLines = freeround_limit ? freeround_lines : gameConfig.lines_max_number, denomIndex = 0, gameConfig.extra_bet_enabled && (extraBet = gameConfig.extra_bet_factor);
        m = parseInt(playerAccount.credit), currDenom = ve[denomIndex], currTotalBet = parseFloat(currNumLines * currBetPerLine / gameConfig.lines_per_credit), $(wp).find(H).html(""), freeround_limit ? $(wp).find(z).html(langText.FREE_spins_win) : (ms(D, currTotalBet + extraBet * currBetPerLine, gameConfig.line_max_bet != gameConfig.line_min_bet ? 45 : 0), $(wp).find(z).html(langText.WINtext)), help = new payTable1;
        var r = I.length;
		
		
		
        $(bd).find(".btnTitle").html(currDenom.viewLabel + br + Currency);
        var l = "left_lines",
            c = oS.getSprite(l),
            p = stP + bgS + c.width + "px " + c.height + he + c.height + wi + c.width + le;
        $(gmI).append(divB + l + p + "22" + to + "-508" + bgUrl + c.src + divEnd), l = "#" + l, $(l).append(divB + 'bl" class="vericaltext">' + (gameAConf.turbo ? langText.TURBOtext : langText.LINEStext) + de);
        var d = 40;
        for (n = 0; n < 5; n++) $(l).append(divB + "q_stepL" + n + '" class="linesN' + den), $("#q_stepL" + n).css({
            top: d
        }), $("#q_stepL" + n).html(I[gameConfig.lines_min_number < gameConfig.lines_max_number && r > 1 ? 4 - n : 0]), d += 102;
        $(l).append(divB + "lft_lines" + stP + he + c.height + wi + "55px" + den), l = "right_lines", c = oS.getSprite(l), $(gmI).append(divB + l + p + "1064" + to + "-508" + bgUrl + c.src + divEnd), l = "#" + l;
        for (d = 40, n = 0; n < 5; n++) $(l).append(divB + "q_stepR" + n + '" class="linesN' + den), $("#q_stepR" + n).css({
            top: d,
            left: "22px"
        }), $("#q_stepR" + n).html(I[gameConfig.lines_min_number < gameConfig.lines_max_number && r > 1 ? 4 - n : 0]), d += 102;
        if ($(l).append(divB + "rht_lines" + stP + he + c.height + wi + "55" + le + "20px" + den), gameConfig.lines_min_number < gameConfig.lines_max_number && r > 1)
            for ($(l).append(divB + 'br" class="vericaltext">' + (gameAConf.turbo ? langText.TURBOtext : langText.LINEStext) + de), n = 0; currNumLines > parseInt(I[n]);) n++;
        else $("#linesArrowUp").remove(), $("#linesArrowDown").remove(), $(U).append(divB + "FIXED" + stP + 'border-radius:4px;border:3px solid silver;color:white;padding:8px; text-align:center; font-weight:bold; font-size:32px; bottom:-95px; width:265px">' + langText.FIXED + de), $(l).append(divB + 'br" class="vericaltext">' + langText.FIXED + de), $("#br").css({
            color: ye
        }), n = 4;
        (recovery && extraBet || !recovery && gameConfig.extra_bet_enabled) && (n = 4), $("#br").css({
            left: "5px",
            top: 513 - $("#br").outerHeight() >> 1
        }), $("#bl").css({
            top: 513 - $("#bl").outerHeight() >> 1
        });
        i = {
            "font-size": "25px",
            color: ye
        };
        if ($("#q_stepL" + (4 - n)).css(i), $("#q_stepR" + (4 - n)).css(i), gameConfig.extra_bet_enabled) {
            var g = 'EXTRA<div style="top: 20px;font-size: 20px;">WIN' + de + '<div style="top: 5px;position: absolute;',
                b = ': -29px;"><svg height="24" width="26"> <polygon points="',
                f = '" style="fill:yellow;" />' + sv + de;
            $("#q_stepL0").css({
                "font-size": "15px"
            }), $("#q_stepL0").html(g + "right" + b + "25.727,23.748 1.039,11.946 25.727,0.06" + f), $("#q_stepR0").css({
                left: "20px",
                "font-size": "15px"
            }), $("#q_stepR0").html(g + "left" + b + "1.039,0.06 25.727,11.861 1.039,23.748" + f)
        }
        $("#frameBetLabel").html(langText.BETtext + ": " + pe.cash(currBetPerLine)), $(F).find(P).html(pe.cash(currBetPerLine)), $(U).find(P).html(currNumLines), totalBetLock && (c = oS.getSprite("total_bet_lock"), $("#menuWindow").append(divB + "lock-container" + stP + bgS + c.width + "px " + c.height + "px;right:30" + to + "430" + wi + (c.width >> 1) + he + c.height + bgUrl + c.src + divEnd), $(K).append(divB + 'lockText">' + langText.Unlocked + de), $("#lockText").css({
            position: "absolute",
            width: "100%",
            color: "yellow",
            "font-size": "20px",
            "text-align": "center",
            "text-transform": "uppercase",
            top: "56px",
            "z-index": 8
        }), $(K).append(divB + "totBetText" + stP + 'width:100%;color:yellow;font-size:20px;text-align:center;text-transform:uppercase;top:-23px">' + langText.TotalBETtext + de)), gameConfig.line_max_bet == gameConfig.line_min_bet && ($("#betArrowUp").remove(), $("#betArrowDown").remove(), $(F).append(divB + "FIXED" + stP + 'border-radius:4px;border:3px solid silver;color:white;padding:8px; text-align:center; font-weight:bold; font-size:32px; bottom:-95px; width:265px">' + langText.FIXED + de)), gameAConf.turbo ? ($(U).find(G).html(langText.MULTIPLIERtext), $("#linesIcon").css({
            "background-position": "-690px 0"
        })) : $(U).find(G).html(langText.LINEStext), $(F).find(G).html(langText.BETtext), gameConfig.autoplay ? ($("#autoNumber").find(G).html(langText.autoPlaytext.replace(br, " ")), $("#autoNumber").find(P).html("")) : ($("#menuAuto").remove(), $("#menuBet").css({
            left: 128
        }), $("#menuLines").css({
            left: 576
        })), $("#frameGameName").find(".msg_string").html(game_name), reelC = gameConfig.reels_sets[gameConfig.main_subgame_reels_set].reels.length, reelR = gameConfig.rows;
        var _ = "1024x768_" + gCc + "x" + reelR;
        gCc * reelR == reelC && (_ += "x" + reelC, reelR = 1), lay = $CT_gameObject.screenConfigs[_], smallSymbolW = gameAConf.ScreenConfig.smallSymbolW || lay.smallSymbolW, SW = lay.symbolW, SH = lay.symbolH;
        var h = lay.symbolColsX[reelC - 1] - lay.symbolColsX[0] + SW + 10,
            S = gameConfig.rows * SH + 30,
            x = wi + smallSymbolW + he + lay.smallSymbolH + bgUrl;
        o = '<svg width="' + h + '" height="' + S + '">', $(j).css({
            width: h + "px",
            height: gameConfig.rows * SH + 30 + "px",
            left: lay.symbolColsX[0] - 5 + "px",
            top: lay.symbolRowsY[0] - 5
        }), $("head").append("<style>.colortext { color: yellow; }</style>"), c = oS.getSprite("main"), y = "<style>.smallSym_", $("head").append(y + "main {" + bgS + c.width + "px " + c.height + x + c.src + stEnd), (c = oS.getSprite("free")) && $("head").append(y + "free {" + bgS + c.width + "px " + c.height + x + c.src + stEnd), (c = oS.getSprite("free2")) && $("head").append(y + "free2 {" + bgS + c.width + "px " + c.height + x + c.src + stEnd), (c = oS.getSprite("choise_bonus")) && $("head").append("<style>.choise_bonus {" + bgS + "46px 180" + wi + 46 + he + 36 + bgUrl + c.src + stEnd), "" !== jpUrl && (opera_mini || (y = divcl + 'jpLabel" style="', $("#tabloGold").append(y + bgI + oS.getSprite("jackpotTabloNames").src + divEnd), $("#tabloSilver").append(y + bgI + oS.getSprite("jackpotTabloNames").src + divEnd), $("#tabloBronze").append(y + bgI + oS.getSprite("jackpotTabloNames").src + divEnd), $("#tabloLead").append(y + bgI + oS.getSprite("jackpotTabloNames").src + divEnd), $("#tabloSilver").css({
            display: no
        }), $("#tabloBronze").css({
            display: no
        }), $("#tabloLead").css({
            display: no
        }), y = "tablo_jackpot_digits", $("head").append("<style>." + y + " {" + bgS + "80px 1752" + wi + "80" + he + "146" + bgUrl + oS.getSprite(y).src + stEnd)), $("#jackpot_name").css({
            top: gCl.top_jackpotYs[0] + "px",
            "background-image": "url(" + oS.getSprite("qcm_levels").src + ")"
        }), c = oS.getSprite("top_jackpot_digits"), $("head").append("<style>.jackpot_digits {" + bgS + c.width + "px " + c.height + wi + gCl.top_jackpot_digits_width + he + gCl.top_jackpot_digits_height + bgUrl + c.src + stEnd), $("#jackpot_frame").css({
            top: gCl.top_jackpotYs[1] + "px",
            height: gCl.top_jackpot_digits_height + "px"
        })), (c = oS.getSprite("background_main")) && $(GL).css({
            "background-image": "url(" + c.src + ")"
        }), y = "top_background_fg", (c = oS.getSprite(y)) && $(GL).append(divB + y + '" style="display:none;' + bgS + c.width + "px " + c.height + he + c.height + wi + c.width + bgUrl + c.src + divEnd), $("body").css({
            "background-image": "url(" + oS.getSprite("background_online_1920").src + ")"
        }), $(E).css("height", lay.symbolRowsY[0] + "px"), y = "top_fg_bonus_pict2", (c = oS.getSprite(y)) && $(E).append(divB + 'topAditional_frame2" style="' + bgS + c.width + "px " + c.height + he + c.height + wi + c.width + le + gCl[y][2] + to + gCl[y][3] + bgUrl + c.src + divEnd), y = "top_fg_bonus_pict3", (c = oS.getSprite(y)) && $(N).append(divB + "topAditional_frame3" + stP + bgS + c.width + "px " + c.height + he + gCl[y][1] + wi + gCl[y][0] + le + gCl[y][2] + to + gCl[y][3] + bgUrl + c.src + divEnd), (c = oS.getSprite("choose")) && $(E).append(divB + 'topAditional_frame" style="' + bgS + c.width + "px " + c.height + he + c.height + wi + c.width / 3 + le + ((1024 - oS.getSprite("top_wild_fg").width) / 2 + gameAsset.text.choosedWildPos[0]) + to + gameAsset.text.choosedWildPos[1] + bgUrl + c.src + divEnd), (c = oS.getSprite("bonus_mult")) && $(E).append(divB + "bonus_mult" + stP + "z-index:5;display:none;" + bgS + c.width + "px " + c.height + he + gCl.bonus_mult[1] + wi + gCl.bonus_mult[0] + le + gCl.bonus_mult[2] + to + gCl.bonus_mult[3] + bgUrl + c.src + divEnd), (c = oS.getSprite("bonus_digits") || oS.getSprite("top_digits") || oS.getSprite("respins_digits")) && $("head").append("<style>.topDigits {" + bgS + c.width + "px " + c.height + wi + c.width / 10 + he + c.height + bgUrl + c.src + stEnd), _aMovingColumns = [];
        for (n = 0; n < reelC; n++) _aMovingColumns[n] = new Reel(n);
        if (1 == gameConfig.allow_client_demo_request && $("#frameDemoLabel").css({
                display: bl
            }), $("#menuWindow").css({
                top: lay.symbolRowsY[0],
                height: gameConfig.rows * SH,
                "background-color": "rgba(0,0,0,.8)"
            }), $(bmh).find(".signsSmall").css({
                "background-position": "-20" + oo
            }), soundOn = withSound, !opera_mini && (historyMax && $(bhi).find(".signsSmall").css({
                "background-position": "-50" + oo
            }), Un(), isMobile && !tablet && gameConfig.double.double_enable)) {
            var y = ');"><span style="position: absolute; width: 100%; text-align: center; top: 50px; font-size: 20px; font-weight: bold;">';
            c = '2" class="interface114x117" style="position: absolute; bottom: -240px; -ms-transform:scale(2); -webkit-transform:scale(2); transform:scale(2);background-image: url(';
            $("#gameDoubleInterface").append(divB + "doubleButtons_black" + c + oS.getSprite("button_B").src + y + langText.doubleBLACKtext + "</span" + den), $("#doubleButtons_black2").css({
                right: "0px"
            }), $("#gameDoubleInterface").append(divB + "doubleButtons_red" + c + oS.getSprite("button_R").src + y + langText.doubleREDtext + "</span" + den)
        }
        if (cashOnly && (we = !1), $("#frameCredit").find(z).html(we ? langText.CREDITtext : langText.CASHtext), $(D).find(z).html(langText.TotalBETtext), $("#doubleButtons_red").find(".btnTitleD").html(langText.doubleREDtext), $("#doubleButtons_black").find(".btnTitleD").html(langText.doubleBLACKtext), $("#doubleLast_string2").html(langText.double10text), $("#doubleLast_string").html(langText.doubleLASTtext), $("#winx2").find(".gamble_string1").html(langText.doubleRBtext), $("#winx4").find(".gamble_string1").html(langText.doubleSUITtext), dbl = new DoubleRB, Ve = demodata || gameAConf.ScreenConfig.demoModes, zn(), $(bmh).addClass(btd), $(gm).addClass(btd), $(st).addClass(btd), $(bd).addClass(btd), $(".cursorCh").on("mouseover", setcursorPointer), $(".cursorCh").on("mouseout", setcursorAuto), recovery) {
            var v = gameResume.last_result,
                k = v.length,
                A = k - 1,
                B = gameResume.resume_subgame_index;
				
				
				
            for (n = 0; n < B; n++) subgameNext();
            if (gameResume.jackpot2_status && gameResume.jackpot2_status.interactive_starts.length > 0 && 0 == B) inIntJackpot = 1, currSubgameIndex = 0, currSubgame = v[currSubgameIndex], console.log(recovery, currSubgameIndex, B, k, currSubgame, gameResume.jackpot2_status.interactive_starts), state = "subgameAnimFinished", C = T = 300, Gt();
            else if ("lost" === v[A].double_result || "limit_over" === v[A].double_result) gameWin = Number(v[A].win), currDouble = v[A], last10Cards = currDouble.double_cards_history, w = !0, He = !1, dbl.DoubleEnter(!0), B == A ? (currSubgameIndex = B, subgameFinishCmd(!1)) : currSubgame = v[currSubgameIndex];
            else if (B >= k) currSubgame = v[currSubgameIndex], w = !0, gotoNextState();
            else if ("preselected_random_choice" == v[B].type) {
                He = !1, state = "waitForContinue", currWaitReq = v[B];
                var O = -1;
                switch (v[B].subtype) {
                    case "select_multiplier":
                        ps(v[0].total_win), et = !0, pe.waitForContinue(), currSubgameIndex = B;
                        break;
                    case "bonus_pick_the_pig":
                        function W(e) {
                            $("#" + e.currentTarget.id).off(ae, W)
                        }
                        ps(v[0].total_win - v[0].subgame_bonus[0].win), et = !0;
                        var L = v[0].scatters_win[0],
                            R = L.positions.length;
                        for (n = 0; n < R; n++) _aMovingColumns[L.positions[n][0]].show(0, W, "main_" + L.symbol);
                        pe.waitForContinue(), currSubgameIndex = B;
                        break;
                    case "continue_play_after_preselected_random_choice":
                        O--;
                    case "select_card":
                        ps(v[B + O].total_win), ot = !0, (c = oS.getSprite("background_free")) && $(GL).css({
                            "background-image": "url(" + c.src + ")"
                        }), currSubgameIndex = B, pe.waitForContinue()
                }
            } else if ("slot_subgame" === v[B].type) {
                if (gameResume.selected_wild_symbol_for_free_games && (gameAConf.bonuses && gameAConf.bonuses[0].win_msg ? (gameAConf.bonuses[0].win_msg[0] = "\t" + (gameResume.selected_wild_symbol_for_free_games - 1), $("#topAditional_frame3").css({
                        "background-position": "-" + (gameResume.selected_wild_symbol_for_free_games - currWaitReq.continue_params[0].values[0]) * parseInt($("#topAditional_frame3").css("width")) + "px 0"
                    })) : $(M).css({
                        "background-position": "-" + (parseInt(gameResume.selected_wild_symbol_for_free_games) - currWaitReq.continue_params[0].values[0]) * parseInt($(M).css("width")) + "px 0"
                    }), currWaitReq.continue_params[0][currWaitReq.continue_params[0].label] = gameResume.selected_wild_symbol_for_free_games), ps(Number(v[B].total_win) - Number(v[B].win)), 1 == v[B].is_free) {
                    if (ot = !0, Cs(), (c = oS.getSprite("background_free")) && $(GL).css({
                            "background-image": "url(" + c.src + ")"
                        }), null != v[B].subgame_bonus && v[B].subgame_bonus.length > 0) {
                        var Y = v[B].subgame_bonus[0];
                        switch (Me = Y.type) {
                            case "score":
                                Ee = Y.bonuses[0].count, je = Y.bonuses[0].total_count - Ee;
                                break;
                            case "increase_current_subgame_factor":
                                Ee = Y.bonuses.length
                        }
                    }
                    if (!gameAConf.bonuses || gameResume.selected_wild_symbol_for_free_games && !gameAConf.bonuses[0].win_msg) gameAConf.bonus_choise && "SUPER GAME" === v[B].type_descr && (be = v[B].subgame_label_game_number - 1, ge = v[B].subgame_label_game_total);
                    else if (0 == (Y = gameAConf.bonuses[0]).in_bonus_change_top && (He = !1, $t = !0), "free" === Y.bonus_start) switch (Y.bonus_type) {
                        case "score":
                            g = "top_fg_bonus_pict1";
                            (c = oS.getSprite(g)) && $(E).css({
                                "background-image": "url(" + c.src + ")",
                                "background-size": c.width + "px " + c.height + "px",
                                "background-position": gCl[g][2] + "px " + gCl[g][3] + "px"
                            }), $(N).css("display", bl), Y.bonus_digits_pos && Ys(je);
                            break;
                        case "increase_current_subgame_factor":
                            Me = "increase_current_subgame_factor", je = v[B].subgame_factor - v[0].subgame_factor - 1 - Ee, $("#bonus_mult").css({
                                "background-position": "0px -" + gCl.bonus_mult[1] * je + "px",
                                display: bl
                            })
                    }
                } else Tt();
                et = !0, gotoNextState()
            } else if (1 == v[A].wait_for_continue)
                if (w = !0, "result_red_black_double" === v[k - 2].type) currSubgameIndex = B, currDouble = v[k - 2], last10Cards = currDouble.double_cards_history, currWaitParams = {}, gameWin = Number(currDouble.win), He = !1, B == A ? (currWaitReq = v[B], state = "waitForContinue", dbl.DoubleEnter(!0)) : (state = "doubleSubgameFinished", dbl.DoubleEnter(!1), subgameFinishCmd(!1), gotoNextState(!1), currWaitReq = v[A]);
                else {
                    if ("bonus_pick_the_pig" == v[1].subtype) {
                        var V = v[0].scatters_win[0].positions,
                            Q = gameAConf.bonus_choise.bonuses,
                            Z = '" class="PtP_bonus"' + stP + "height:" + SH + wi + SW + bibgI,
                            ee = (g = "bonus", c = oS.getSprite(g), 0),
                            te = v[0].subgame_bonus[0].selected_hidden_card_index,
                            se = "px;" + bgS + c.width + "px " + c.height + pd,
                            ne = V.length;
                        $("#reel_frame_" + te).append(divB + g + te + Z + c.src + ");background-position-y:-" + Q.indexOf(v[1].bonus_hit.bonus_type + v[1].bonus_hit.bonus_value) * SH + se), g = "bonus_ua", c = oS.getSprite(g);
                        for (n = 0; n < ne; n++) V[n][0] != te ? $("#reel_frame_" + V[n][0]).append(divB + g + n + Z + c.src + ");background-position-y:-" + Q.indexOf(v[1].remaining_cards[n - ee].bonus_type + v[1].remaining_cards[n - ee].bonus_value) * SH + se) : ee = 1;
                        ps(v[0].total_win)
                    } else ps(v[currSubgameIndex].total_win);
                    if ("select_wild_symbol" == v[B].type) {
                        He = !1;
                        g = "main_scatter_top";
                        ks(c = oS.getSprite(g), g)
                    }
                    rt = 1, C = T = 300, lt = !1, et = !1, gotoNextState()
                }
        } else if (freeround_limit) ze = 1, $(q).html(langText.CONGRATULATIONStext), $(J).html(br + langText.WONtext), $(X).html(br + freeround_limit + " " + langText.free_spins), $(cw).css({
            display: bl
        }), $(msb).find(ms1).html(langText.pressSTARTTtext), ds(In), _App.idleTimerStart();
        else {
            switch ("main_attraction" in gameAsset.sounds && soundOn && !sound_always && (u = createjs.Sound.play("main_attraction")), regulation) {
                case "mt":
                    e = (new Date).getTime(), setTimeout(So, 6e4 * mtTime)
            }
            Bn(), Et(), gameConfig.extra_bet_enabled && (xn(0, 0), $(q).html(yn()), $(cw).css({
                display: bl
            }), qe = 1, congrTimer = setTimeout(vn, 5e3))
        }
        He && Kn(), $(".scripts").remove(), sizeHandler(), fullScreenButonOn || $("#buttonFullScreen").css("display", no), exitAllow || $("#buttonHome").css("display", no), $(wp).find(".frame88m").css("width", "225px"), $(D).find(".frame88m").css("width", "140px"), $("#frameCredit").find(".frame88m").css("width", "280px"), opera_mini ? xo() : requestAnimationFrame(xo), $("#preloader").remove()
    }
}

function setcursorPointer() {
    $(this).css("cursor", "pointer"), $(this).find(".menu_string2").css("color", "yellow"), $(this).find(".string2").css("color", "yellow")
}

function setcursorAuto() {
    $(this).css("cursor", "auto"), $(this).find(".menu_string2").css("color", "white"), $(this).find(".string2").css("color", "white")
}

function setButtonOff(e, t) {
    isMobile || ($(e).off("mouseover", setcursorPointer), $(e).off("mouseout", setcursorAuto), $(e).css("cursor", "default"), $(e).find(".string2").css("color", "white")), $(e).addClass(btd), $(e).off(ck, t)
}

function setButtonOn(e, t) {
    isMobile || ($(e).on("mouseover", setcursorPointer), $(e).on("mouseout", setcursorAuto)), $(e).removeClass(btd), $(e).on(ck, t)
}

function playClick() {
    soundOn && createjs.Sound.play("service_click1")
}

function animate(e, t, s, n, o) {
    var a = !1,
        i = !1,
        r = 0,
        l = 0,
        u = o || parseInt($(e).css("width")),
        c = parseInt($(e).css("height"));
    if ($.isArray(s.start)) var m = s.start[0],
        p = s.start[0],
        d = s.start[1];
    else m = 0, p = s.start.frames[m], d = s.start.frames.length - 1, a = !0;
    var g = setInterval(function() {
        if (null == $(e).css("width") && clearInterval(g), m > d) {
            if (n) $(e).css({
                "background-position": oo
            }), clearInterval(g);
            else if (s.loop) {
                i = !0, $.isArray(s.loop) ? (m = p = s.loop[0], d = s.loop[1], a = !1) : (m = 0, p = s.loop.frames[0], d = s.loop.frames.length - 1, a = !0);
                var o = p * u;
                l = Math.floor(o / t) * c, r = Math.floor(o % t), $(e).css({
                    "background-position": "-" + r + "px -" + l + "px"
                })
            } else clearInterval(g);
            $(e).trigger(ae, [ae, "Event"])
        } else o = p * u, l = Math.floor(o / t) * c, r = Math.floor(o % t), $(e).css({
            "background-position": "-" + r + "px -" + l + "px"
        }), m++, a ? p = i ? s.loop.frames[m] : s.start.frames[m] : p++
    }, s.speed)
}

function addPictToString(e) {
    for (var t = 0, s = e.indexOf("\t", t), n = "", o = small, a = "px 0" + pd; s > -1;) {
        n += s - t > 0 ? e.substring(t, s) : "", n += o + (l = parseInt(e.substring(s + 1, s + 3))) * smallSymbolW + a, t = s + 2, l > 9 && t++, s = e.indexOf("\t", t)
    }
    if (n += e.length - t > 0 ? e.substring(t, e.length) : "", t = 0, (s = n.indexOf("\r", t)) > -1) {
        var i = "";
        for (o = divcl + 'smallSym_free" ' + bgP + "-"; s > -1;) {
            i += s - t > 0 ? n.substring(t, s) : "", i += o + (l = parseInt(n.substring(s + 1, s + 3))) * smallSymbolW + a, t = s + 2, l > 9 && t++, s = n.indexOf("\r", t)
        }
        n = i += n.length - t > 0 ? n.substring(t, n.length) : ""
    }
    if (t = 0, (s = n.indexOf("\n", t)) > -1) {
        var r = "";
        for (o = divcl + 'choise_bonus" ' + bgP; s > -1;) {
            var l;
            r += s - t > 0 ? n.substring(t, s) : "", r += o + "0px -" + 36 * (l = parseInt(n.substring(s + 1, s + 3))) + pd, t = s + 2, l > 9 && t++, s = n.indexOf("\n", t)
        }
        n = r += n.length - t > 0 ? n.substring(t, n.length) : ""
    }
    return n
}
var startSound = 0;

function Reel(e) {
    var t, s, n, o, a, i, r, l, u, c, m, p = 0,
        d = 0,
        g = 0,
        b = 0,
        f = [],
        _ = -SH,
        h = [],
        S = "main",
        x = stP + "height:",
        y = "translate3d(0,",
        w = "px,0)",
        v = 1;
    this.show = function(e, t, s) {
            var n = parseInt(e) + 1;
            null != s && s in gameAsset.images || (s = nextSubgameLabel + "_" + f[n]), "main" == nextSubgameLabel || s in gameAsset.images || (s = "main_" + f[n]);
            var o = ans + s,
                a = oS.getSprite(s);
            if (a && o in gCl) {
                var i = s + "_" + l + "_" + e,
                    r = "#" + h[n];
                $(r).append(divB + i + '" class="animSym"' + x + "100%;width:100%;background-repeat:no-repeat;display:block;" + bgI + a.src + ");" + bgS + a.width + "px " + a.height + pd), i = "#" + i, $(r + "BG").css("display", no), $(i).on(ae, t), animate(i, a.width, gCl[o], void 0 === gCl[o].loop && 0 != gCl[o].inBegin)
            } else setTimeout(t, 40)
        }, this.startAnim = function() {
            startSound = o = a = 0, b = 0, c = 45, s = -1, n = (new Date).getTime(), d = 0, g = 1, p = 0, r = gameConfig.reels_sets[gameConfig.subgames_labels[nextSubgameLabel].subgame_id].reels[l], S != nextSubgameLabel && (S = nextSubgameLabel, t = Math.floor(Math.random() * r.length)), v = 1
        }, this._updateMoving = function() {
            if (g) {
                var e, S = c,
                    x = (new Date).getTime();
                switch (p = s > -1 && x - n >= s || d, o) {
                    case 0:
                        if (_ > 1.1 * -SH) {
                            var T = parseInt(S / 2.5);
                            _ -= T;
                            for (var C = 0; C <= reelR + 1; C++) {
                                var k = _ + SH * C;
                                $("#" + h[C]).css({
                                    transform: y + (k - T) + w,
                                    "-webkit-transform": y + (k - T) + w,
                                    "-moz-transform": y + (k - T) + w
                                })
                            }
                        } else o = 1;
                        break;
                    case 1:
                        if (_ < -SH) {
                            T = parseInt(S / 2.5);
                            _ += T;
                            for (C = 0; C <= reelR + 1; C++) {
                                k = _ + SH * C;
                                $("#" + h[C]).css({
                                    transform: y + (k - T) + w,
                                    "-webkit-transform": y + (k - T) + w,
                                    "-moz-transform": y + (k - T) + w
                                })
                            }
                        } else o = 2;
                        break;
                    case 2:
                        if (_ >= -SH && a < 1) {
                            --t < 0 && (t = r.length - 1);
                            for (C = reelR + 1; C > 0; C--) f[C] = f[C - 1];
                            f[0] = p && ++b <= reelR ? resultSymbols[l][reelR - b] : r[t], h.unshift(h[h.length - 1]), h.pop(), sym_names[l].unshift(sym_names[sym_names.length - 1]), sym_names[l].pop(), sym_names[l][0] = f[0], (e = extraBet && "main" === nextSubgameLabel ? "extra_" + f[0] : nextSubgameLabel + "_" + f[0]) in gameAsset.syms || (e = "main_" + f[0]), _ -= SH, $("#" + h[0] + "BG").css("background-image", "url(" + oS.getSprite("sym_" + e).src + ")"), $("#" + h[0]).css({
                                transform: y + _ + w,
                                "-webkit-transform": y + _ + w,
                                "-moz-transform": y + _ + w
                            })
                        }
                        if (soundOn && p && v && !d && ("be" !== regulation && (reelR > 1 ? createjs.Sound.play("spin") : x >= startSound && (startSound = x + 360, createjs.Sound.play("spin"))), v = 0), _ > u && p && b > reelR || a > 0)
                            if (_ > u && _ < -SH + parseInt(.2 * SH) && a < 2) {
                                a = 1, _ += S;
                                for (C = reelR + 1; C >= 0; C--) {
                                    k = _ + SH * C;
                                    $("#" + h[C]).css({
                                        transform: y + k + w,
                                        "-webkit-transform": y + k + w,
                                        "-moz-transform": y + k + w
                                    })
                                }
                            } else if (_ > -SH && a < 3) {
                            a = 2;
                            T = parseInt(S / 5);
                            _ -= T;
                            for (C = 0; C <= reelR + 1; C++) {
                                k = _ + SH * C;
                                $("#" + h[C]).css({
                                    transform: y + (k - T) + w,
                                    "-webkit-transform": y + (k - T) + w,
                                    "-moz-transform": y + (k - T) + w
                                })
                            }
                        } else {
                            _ = -SH;
                            for (C = 0; C <= reelR + 1; C++) $("#" + h[C]).css({
                                transform: y + _ + w,
                                "-webkit-transform": y + _ + w,
                                "-moz-transform": y + _ + w
                            }), _ += SH;
                            _ = -SH, g = 0, soundOn && (createjs.Sound.play(i), l === m && createjs.Sound.play("service_specialstop0"))
                        } else {
                            _ += S;
                            for (C = reelR + 1; C >= 0; C--) {
                                k = _ + SH * C;
                                $("#" + h[C]).css({
                                    transform: y + k + w,
                                    "-webkit-transform": y + k + w,
                                    "-moz-transform": y + k + w
                                })
                            }
                        }
                }
            }
            return g
        }, this.setSymb1 = function(e, t, s, n) {
            e = parseInt(e);
            var o = oS.getSprite(t),
                a = "#" + h[e + 1] + "BG",
                i = $(a).css("background-image");
            $(a).css({
                "background-image": "url(" + o.src + ")",
                "background-position": s,
                "background-size": SW + "px " + o.height + "px"
            }), setTimeout(function() {
                $(a).css({
                    "background-image": i,
                    "background-position": oo,
                    "background-size": SW + "px " + SH + "px"
                }), n()
            }, 600)
        }, this.setSymb = function(e, t, s, n) {
            e = parseInt(e), $("#" + h[e + 1] + "BG").css("background-image", "url(" + $(oS.getSprite(t)).attr("src") + ")"), sym_names[l][e + 1] = f[e + 1] = t.split("_")[2], null != s && this.show(e, s, n)
        }, this.setExWild = function(e, t, s) {
            s = null == s ? 0 : s;
            for (var n = reelR; n > s; n--) parseInt($("#" + h[n]).css("top")) >= 0 && (sym_names[l][n] = resultSymbols[l][n - 1] = f[n] = e, $("#" + h[n] + "BG").css("background-image", "url(" + $(oS.getSprite("sym_main_" + e)).attr("src") + ")"), exWildVideoCount++, this.show(n - 1, t, "main_" + e))
        }, this.setAnimDuration = function(e, t, o, a) {
            i = t, o && (c = o), m = a || -1, p = (s = e) > -1 && (new Date).getTime() >= n + s || d
        }, this.changeSpinSound = function(e) {
            e
        }, this.stopRotating = function() {
            d = 1
        },
        function(e) {
            l = e;
            var s = bi + '">' + divB,
                n = wi + SW,
                o = gameConfig.init_screen,
                a = 0,
                i = "#reel_frame_" + l;
            if (recovery) {
                if (gameResume.resume_subgame_index > 0)
                    for (a = gameResume.resume_subgame_index - 1; !gameResume.last_result[a].hasOwnProperty("result_reels") && a > 0;) a--;
                o = gameResume.last_result[a].result_reels, S = gameResume.last_result[a].subgame_label
            }
            if (r = gameConfig.reels_sets[gameConfig.subgames_labels[S].subgame_id].reels[l], u = parseInt(.1 * SH) - 2 * SH, $(GL).append(divB + "reel_frame_" + l + x + SH * reelR + n + to + lay.symbolRowsY[0] + le + lay.symbolColsX[l] + bi + "overflow:hidden" + den), resultSymbols.push([]), 1 == reelR) recovery && gameResume.resume_subgame_index > 0 ? resultSymbols[l].push(o[l][0]) : resultSymbols[l].push(o[Math.floor(l / gameConfig.columns)][l % gameConfig.columns]), $(i).css({
                top: lay.symbolRowsY[l]
            });
            else
                for (a = 0; a < gameConfig.rows; a++) resultSymbols[l].push(o[a][l]);
            t = Math.floor(Math.random() * r.length), a = 0, f.push(r[t]), h.push("symbol_frame_" + l + "_0"), sym_names.push([]), sym_names[l].push(f[a]), n = x + SH + n;
            var c = 'BG" class="bgSym' + x + SH + wi + SW + "px;background-repeat:no-repeat;" + bgI,
                m = oS.getSprite("sym_" + S + "_" + f[a]) || oS.getSprite("sym_main_" + f[a]);
            for ($(i).append(divB + h[a] + n + s + h[a] + c + m.src + divEnd + de), $("#" + h[a]).css({
                    transform: y + _ + w,
                    "-webkit-transform": y + _ + w,
                    "-moz-transform": y + _ + w
                }), _ += SH, a++; a <= reelR + 1; a++) f.push(a === reelR + 1 ? r[t] : resultSymbols[l][a - 1]), h.push("symbol_frame_" + l + "_" + a), sym_names[l].push(f[a]), m = oS.getSprite("sym_" + S + "_" + f[a]) || oS.getSprite("sym_main_" + f[a]), $(i).append(divB + h[a] + n + s + h[a] + c + m.src + divEnd + de), $("#" + h[a]).css({
                transform: y + _ + w,
                "-webkit-transform": y + _ + w,
                "-moz-transform": y + _ + w
            }), _ += SH;
            if (gameAConf.turbo)
                for (a = 0; a < reelR; a++) $(i).append(divB + "turbo" + l + a + x + SH + wi + SW + to + a * SH + "px; background: #000; opacity:0" + den);
            _ = -SH
        }(e)
}

function DoubleRB() {
    var e, t, s, n = {
            1: 1,
            0: 2,
            2: 0,
            3: 3
        },
        o = "px 0px",
        a = "#doubleButtons_",
        i = "#winx2",
        r = "#winx4",
        l = ".gamble_string3",
        u = 0,
        c = !1,
        m = "all",
        p = 0,
        d = opera_mini ? 500 : 250,
        g = 0,
        b = "",
        f = a + "spade",
        _ = a + "clubs",
        h = a + "heart",
        S = a + "diamond",
        x = a + "red",
        y = a + "black",
        w = 0;

    function v() {
        for (var e = 0; e < 10 && last10Cards[e] >= 0; e++) $("#last10single" + e).css({
            "background-position": "-" + n[Math.floor(last10Cards[e] / 13)] * $("#last10single" + e).width() + o
        })
    }

    function T() {
        var e = "service_dbl_blink",
            n = "-425" + o,
            c = "-570" + o;
        switch (u) {
            case 0:
                $(f).css({
                    "background-position": n
                }), $(_).css({
                    "background-position": oo
                }), $(x).css({
                    "background-position": c
                }), $(y).css({
                    "background-position": oo
                }), $(a + "red2").css({
                    "background-position": c
                }), $(a + "black2").css({
                    "background-position": oo
                }), $(r).find(l).html(""), $(i).find(l).html(""), $(msb).find(ms1).html(""), soundOn && createjs.Sound.play(e + (1 + (p << 1)));
                break;
            case 1:
                $(f).css({
                    "background-position": oo
                }), $(h).css({
                    "background-position": n
                }), $(x).css({
                    "background-position": oo
                }), $(y).css({
                    "background-position": c
                }), $(a + "red2").css({
                    "background-position": oo
                }), $(a + "black2").css({
                    "background-position": c
                }), $(r).find(l).html(_CTSlotApp.cash(s << 2)), $(i).find(l).html(_CTSlotApp.cash(s << 1)), $(msb).find(ms1).html(langText.colorOrSUITtext), soundOn && createjs.Sound.play(e + (2 * p + 1 + 1));
                break;
            case 2:
                $(S).css({
                    "background-position": n
                }), $(h).css({
                    "background-position": oo
                }), $(x).css({
                    "background-position": c
                }), $(y).css({
                    "background-position": oo
                }), $(a + "red2").css({
                    "background-position": c
                }), $(a + "black2").css({
                    "background-position": oo
                }), $(r).find(l).html(""), $(i).find(l).html(""), $(msb).find(ms1).html(""), soundOn && createjs.Sound.play(e + (1 + (p << 1)));
                break;
            case 3:
                $(S).css({
                    "background-position": oo
                }), $(_).css({
                    "background-position": n
                }), $(x).css({
                    "background-position": oo
                }), $(y).css({
                    "background-position": c
                }), $(a + "red2").css({
                    "background-position": oo
                }), $(a + "black2").css({
                    "background-position": c
                }), $(r).find(l).html(_CTSlotApp.cash(s << 2)), $(i).find(l).html(_CTSlotApp.cash(s << 1)), $(msb).find(ms1).html(langText.colorOrSUITtext), soundOn && createjs.Sound.play(e + (2 * p + 1 + 1)), u = -1
        }
        u++, t = setTimeout(T, d)
    }

    function C() {
		
		
		
		
        $(r).find(l).html(gameWin ? _CTSlotApp.cash(s << 2) : ""), $(i).find(l).html(gameWin ? _CTSlotApp.cash(s << 1) : ""), $("#frameTotalBet").find(".string1").html(gameWin - s ? _CTSlotApp.cash(gameWin - s) : ""), $(wp).find(".string1").html(gameWin ? _CTSlotApp.cash(s) : ""), $(wp).find(".string2").html(langText.doubleAtext)
    }

    function k() {
        var e = Math.floor(last10Cards[0] / 13);
        $("#big_card").css({
            "background-position": "-" + $("#big_card").width() + o
        }), $("#doubleCardNumber").css({
            display: bl,
            "background-image": "url(" + oS.getSprite("dbl_name_" + (e < 2 ? "red" : "black")).src + ")",
            "background-position": "-" + last10Cards[0] % 13 * $("#doubleCardNumber").width() + o
        }), $("#doubleCardsSmall").css({
            display: bl,
            "background-position": "-" + n[e] * $("#doubleCardsSmall").width() + o
        }), $("#doubleCardsBig").css({
            display: bl,
            "background-position": "-" + n[e] * $("#doubleCardsBig").width() + o
        })
    }

    function A() {
        g && (g = 0, $(bGMb1).css({
            "background-image": "url(" + oS.getSprite("sign12").src + ")"
        }), m = "all")
    }

    function B() {
        if (A(), $(wp).find(".string1").html(gameWin ? _CTSlotApp.cash(s) : ""), $("#frameTotalBet").find(".string1").html(""), soundOn) {
            var e = createjs.Sound.play("service_dbl_full");
            e.addEventListener("complete", function() {
                e.removeAllEventListeners(), dbl.dblListenersOn()
            })
        } else setTimeout(dbl.dblListenersOn, 500)
    }

    function O() {
        switch (u) {
            case 0:
                $(msb).find(ms1).html("");
                break;
            case 1:
                $(msb).find(ms1).html(b), u = -1
        }
        u++, t = setTimeout(O, d)
    }

    function I(s) {
        $(msb).find(ms1).html(s), $(bGMb1).remove(), c || ($(st).css({
            display: bl
        }), (!isMobile || !portret || isMobile && tablet) && $(bSb1).css({
            left: "20px"
        })), setButtonOn(bSb1, W), setButtonOn(st, W), u = 0, e = setTimeout(L, 3e4), t = setTimeout(O, d)
    }

    function W() {
        switch (setButtonOff(bSb1, W), setButtonOff(st, W), $(this).attr("id")) {
            case "buttonStart":
                animate(st, parseInt($(st).css("background-size")), {
                    start: [0, 15],
                    speed: 40
                }, 0), $(st).on(ae, L), w = 1;
                break;
            case "buttonStartBlinck1":
                animate(bSb1, parseInt($(bSb1).css("background-size")), {
                    start: [0, 7],
                    speed: 40
                }, 0), $(bSb1).on(ae, L)
        }
    }

    function L() {
        $(st).off(ae, L), $(bSb1).off(ae, L), clearTimeout(e), clearTimeout(t), M()
    }

    function R(e) {
        switch (dbl.dblListenersOff(), playClick(), $(_).css({
            "background-position": oo
        }), $(f).css({
            "background-position": oo
        }), $(h).css({
            "background-position": oo
        }), $(S).css({
            "background-position": oo
        }), $(x).css({
            "background-position": oo
        }), $(y).css({
            "background-position": oo
        }), $(a + "red2").css({
            "background-position": oo
        }), $(a + "black2").css({
            "background-position": oo
        }), $(this).attr("id")) {
            case "doubleButtons_spade":
                j("spade");
                break;
            case "doubleButtons_diamond":
                j("diamond");
                break;
            case "doubleButtons_clubs":
                j("clubs");
                break;
            case "doubleButtons_heart":
                j("heart");
                break;
            case "doubleButtons_black2":
                animate(a + "black2", parseInt($(a + "black2").css("background-size")), {
                    start: [0, 5],
                    speed: 40
                }, 1);
            case "doubleButtons_black":
                j("black");
                break;
            case "doubleButtons_red2":
                animate(a + "red2", parseInt($(a + "red2").css("background-size")), {
                    start: [0, 5],
                    speed: 40
                }, 1);
            case "doubleButtons_red":
                j("red");
                break;
            case "buttonGameMenuBlinck1":
                ! function() {
                    var e = "service_dbl_half";
                    g ? ($(bGMb1).css({
                        "background-image": "url(" + oS.getSprite("sign12").src + ")"
                    }), s = gameWin, e = "service_dbl_full", g = 0, m = "all") : ($(bGMb1).css({
                        "background-image": "url(" + oS.getSprite("signX2").src + ")"
                    }), s >>= 1, g = 1, m = "half");
                    if (animate(bGMb1, parseInt($(bGMb1).css("background-size")), {
                            start: [0, 7],
                            speed: 40
                        }, 1), soundOn) {
                        var t = createjs.Sound.play(e);
                        t.addEventListener("complete", function() {
                            t.removeAllEventListeners(), dbl.dblListenersOn()
                        })
                    } else setTimeout(dbl.dblListenersOn, 300);
                    C()
                }();
                break;
            case "buttonStartBlinck1":
                A(), animate(bSb1, parseInt($(bSb1).css("background-size")), {
                    start: [0, 7],
                    speed: 40
                }, 0), $(bSb1).on(ae, E)
        }
    }

    function j(e) {
        currWaitParams.double_key = e, currWaitParams.double_betpart = m, gotoNextState()
    }

    function E() {
        $(bSb1).off(ae, E), M()
    }

    function M() {
        inDouble = 0, $("#gameDoubleInterface").css({
            display: no
        }), $(bSb1).remove(), $(bGMb1).remove(), currWaitParams.double_betpart = "skip", freeround_win += gameWin, _CTSlotApp.endDouble(c, w)
    }
    this.DoubleEnter = function(e) {
        if (w = u = 0, $("#frameBetLabel").css({
                display: no
            }), $("#frameTotalBet").find(".string2").html("1/2"), $(wp).find(".string2").html(langText.doubleAtext), $(wp).find(".string1").css({
                color: ye
            }), $("#big_card").css({
                "background-position": oo
            }), $("#doubleCardNumber").css({
                display: no
            }), $("#doubleCardsSmall").css({
                display: no
            }), $("#doubleCardsBig").css({
                display: no
            }), $("#gameDoubleInterface").css({
                display: bl
            }), $(bmh).css({
                display: no
            }), $(bd).css({
                display: no
            }), $("#left_lines").css({
                display: no
            }), $("#right_lines").css({
                display: no
            }), p = 0, showWins = 0, freeround_win -= gameWin, s = gameWin, C(), c = !1, v(), recovery) {
            inDouble = 1, k(), "half" === currDouble.request_params.double_betpart && (g = 1, $("#frameTotalBet").find(".string1").html(currDouble.win - currDouble.double_win ? _CTSlotApp.cash(currDouble.win - currDouble.double_win) : ""));
            var t = a + currDouble.request_params.double_key,
                n = "-" + 4 * $(t).width() + o;
            if ($(t).css({
                    "background-position": n
                }), $(f).addClass(btd), $(_).addClass(btd), $(h).addClass(btd), $(S).addClass(btd), $(x).addClass(btd), $(y).addClass(btd), $(gm).addClass(btd), $(st).addClass(btd), $(gmI).append(divB + "buttonStartBlinck1" + addInt + oS.getSprite("signTake").src + ")" + den), $(st).css("display", no), $(gmI).append(divB + "buttonGameMenuBlinck1" + addInt + oS.getSprite("sign12").src + ")" + den), $(gm).css("display", no), e) switch (currDouble.double_result) {
                case "lost":
                    this.doubleLoose();
                    break;
                case "limit_over":
                    this.doubleWin(!0);
                    break;
                case "win":
                    this.doubleWin(!1)
            }
        } else !1, $(bGMb1).css({
            "background-image": "url(" + oS.getSprite("sign12").src + ")"
        }), dbl.dblListenersOn()
    }, this.doubleWin = function(e) {
        if (c = e, $(msb).find(ms1).html(langText.youWINtext), $(wp).find(".string2").html(langText.WINtext), $(wp).find(".string1").html(_CTSlotApp.cash(currDouble.double_win)), soundOn) {
            var t = createjs.Sound.play("service_dbl_win" + (p + 1));
            t.addEventListener("complete", function() {
                t.removeAllEventListeners(), c ? I(b = langText.doubleUpLIMITtext) : g ? B() : dbl.dblListenersOn()
            })
        } else setTimeout(function() {
            c ? I(b = langText.doubleUpLIMITtext) : g ? B() : dbl.dblListenersOn()
        }, 500);
        p < 6 && p++, p > 2 && !opera_mini && (d = 200)
    }, this.dblListenersOn = function() {
        stopAll || listenrsOn || (setButtonOn(f, R), setButtonOn(_, R), setButtonOn(h, R), setButtonOn(S, R), setButtonOn(x, R), setButtonOn(y, R), setButtonOn(a + "black2", R), setButtonOn(a + "red2", R), setButtonOn(bSb1, R), (s >> 1 || g) && setButtonOn(bGMb1, R), $(msb).find(ms1).html(langText.colorOrSUITtext), $("#big_card").css({
            "background-position": oo
        }), $("#doubleCardNumber").css({
            display: no
        }), $("#doubleCardsSmall").css({
            display: no
        }), $("#doubleCardsBig").css({
            display: no
        }), t = setTimeout(T, d), startState = "inDouble", _App.idleTimerStart(), listenrsOn = 1, C())
    }, this.doubleLoose = function() {
        if (p = 0, !0, soundOn) var e = createjs.Sound.play("service_dbl_lose");
        gameWin ? ($(wp).find(".string1").html(_CTSlotApp.cash(currDouble.double_win)), $(msb).find(ms1).html(langText.dealerWINtext), soundOn ? e.addEventListener("complete", function() {
            e.removeAllEventListeners(), g ? B() : dbl.dblListenersOn()
        }) : setTimeout(g ? B() : dbl.dblListenersOn(), 1e3)) : ($(wp).find(".string1").html(""), I(b = langText.dealerWINtext))
    }, this.dblListenersOff = function() {
        clearTimeout(t), setButtonOff(f, R), setButtonOff(_, R), setButtonOff(h, R), setButtonOff(S, R), setButtonOff(x, R), setButtonOff(y, R), setButtonOff(a + "red2", R), setButtonOff(a + "black2", R), setButtonOff(bSb1, R), setButtonOff(bGMb1, R), $(msb).find(ms1).html(""), _App.idleTimerStop(), listenrsOn = 0
    }, this.doubleSubgameStarted = function() {
        v(), k(), s = gameWin = currDouble.win, gotoNextState()
    }
}

function payTable1() {
    var e, t, s;

    function n(e) {
        return /touch/.test(e.type) ? (e.originalEvent || e).changedTouches[0].pageY : e.pageY
    }

    function o(e) {
        "touchstart" != e.type || t || (t = !0, s = n(e))
    }

    function a(o) {
        if (t) {
            o.preventDefault();
            var a = n(o),
                i = $(m4).position().top / scaleRatio + $(m4).height() - $(window).height() / scaleRatio - hpp;
            e += (a - s) / scaleRatio, s = a, e > hpp ? e = hpp : e < -i && (e = -i), $(hb).css({
                top: e
            }), $(hbE).css({
                top: -e + hpp
            }), $(sb).css("top", (-e + hpp) / (i + hpp) * scl)
        }
    }

    function i() {
        t = !1
    }

    function r(e) {
        e.preventDefault();
        var t = $(sb).position().top,
            s = ($(m4).position().top / scaleRatio + $(m4).height() - $(window).height() / scaleRatio) / scl,
            n = function(n) {
                var o = Math.min(scl, Math.max(0, (t + n.pageY - e.pageY) / scaleRatio));
                $(sb).css("top", o), $(hb).css("top", hpp - o * s), $(hbE).css("top", o * s), $("#info").css("top", o * s)
            },
            o = function() {
                document.removeEventListener("mousemove", n), document.removeEventListener("mouseup", o)
            };
        document.addEventListener("mousemove", n), document.addEventListener("mouseup", o)
    }

    function l(e) {
        e = window.event || e;
        var t = Math.max(-1, Math.min(1, e.wheelDelta || -e.detail)),
            s = $(sb).position().top,
            n = ($(m4).position().top / scaleRatio + $(m4).height() - $(window).height() / scaleRatio) / scl,
            o = Math.min(scl, Math.max(0, (s - 10 * t) / scaleRatio));
        return $(sb).css("top", o), $(hb).css("top", hpp - o * n), $(hbE).css("top", o * n), $("#info").css("top", o * n), !1
    }

    function u() {
        isMobile ? ($(hb).off("touchstart mousedown", o), $(hb).off("touchmove", a), $(hb).off("touchend touchcancel", i)) : ($(sb).off("mouseover", setcursorPointer), $(sb).off("mouseout", setcursorAuto), $(sb).off("mousedown", r), document.removeEventListener("mousewheel", l, !1), document.removeEventListener("DOMMouseScroll", l, !1)), setButtonOff(hbE, playClick), $(hbE).off(ae, u), $(hb).css({
            display: no
        }), $(GL).css({
            display: bl
        }), $(pt).remove(), $(pl).remove(), $(m4).html(""), $(sc).remove(), $(sb).remove(), $("#c").remove(), "" != jpUrl && portret && $("#topJackpot").css("display", bl), _CTSlotApp.exitHelp()
    }

    function c() {
        window.open("../../html-interface-stable/RoPrinHelp/" + gameName + "_ro.pdf")
    }

    function m(e, t, s, n, o, a, i) {
        null == i && (i = "white"), null == a && (a = 16);
        for (var r = 0, l = 0, u = gameConfig.rows, c = "<svg width=" + String(s * gCc + 5) + " height=" + String(n * u + 20) + " x=" + e + " y=" + t + '><text y="18" font-size="' + a + '" fill="' + i + '">' + langText.LINEtext + " " + String(o + 1) + "</text>", m = 0; m < u * gCc; m++) r = m % gCc * s, l = Math.floor(m / gCc) * n, c += "<rect x=" + r + " y=" + String(l + 20) + " width=" + s + " height=" + n + ' style="fill:rgb(' + (Math.floor(m / gCc) == gameConfig.lines[o][m % gCc] ? "255,0,0" : "253,252,252") + ');stroke-width:3;stroke:rgb(0,0,0)"/>';
        return c + "</svg>"
    }
    this.showHelp = function() {
            var t = "";
            switch (hpp = -$(GC).position().top / scaleRatio, e = hpp, $(hb).css({
                top: hpp
            }), $(hb).append(divB + "payTable" + den), $(hbE).css({
                top: 0
            }), setButtonOn(hbE, playClick), $(hbE).on(ae, u), regulation) {
                case "pt":
				
		
				
                    $(hb).append(divB + "info" + den), $("#info").css({
                        "z-index": 8,
                        position: "absolute",
                        width: 1024,
                        color: ye,
                        "font-size": 22,
                        "text-align": "center",
                        top: 0,
                        "font-weight": 500
                    }), $("#info").html(langText.DENOMINATIONtext + CurrencySign + currDenom.label + ("" === CurrencySign ? " " + Currency : "") + ", " + langText.BETtext + ": " + _CTSlotApp.cash(currBetPerLine) + ", " + (gameAConf.turbo ? langText.TURBOtext : langText.LINEStext) + ": " + currNumLines + ", " + langText.TotalBETtext + ": " + _CTSlotApp.cash(currTotalBet + extraBet * currBetPerLine)), $(pt).css("top", 25)
            }
            $(hb).css({
                display: bl
            }), $(GL).css({
                display: no
            }), $(gmI).css({
                display: no
            }), $("#topJackpot").css("display", no);
            var s = gameAsset.text,
                n = gameConfig.paytables[gameConfig.subgames_labels.main.subgame_id],
                p = 0,
                d = "top_name",
                g = oS.getSprite(d),
                b = g.height + 10,
                f = "#" + d,
                _ = '" style="position:absolute;background-repeat:no-repeat;height:',
                h = '" style="position:absolute;font-weight:bold;line-height:32px;font-size:32' + wi,
                S = [],
                x = !1,
                y = "#mess3";
            if ($(pt).append(divB + 'name"' + _ + g.height + wi + "1024" + bibgI + g.src + ");background-position-x:" + (gCl[d] ? gCl[d][2] + "px;" : "center;") + bgS + g.width + "px " + g.height + pd), _ += SH + wi + SW + le, $.each(n.paytable_wilds, function(e, t) {
                    if (!(n.paytable_scatters && e in n.paytable_scatters)) {
                        f = "#" + (d = "sym_main_" + e);
                        var o = "",
                            a = "",
                            i = divB + d,
                            r = 328,
                            l = 510;
                        (g = oS.getSprite(d)) && ($(pt).append(i + _ + 0 + to + b + bibgI + g.src + ");" + bgS + SW + "px " + SH + pd), e in n.paytable ? ($.each(n.paytable[e], function(e, t) {
                            o = e + ":" + br + o, a = _CTSlotApp.cash(t.factor * currBetPerLine) + br + a
                        }), $(f).append(i + "T" + h + 50 + le + (SW + 10) + 'px">' + o + de), $(f).append(i + "W" + h + 230 + le + (SW + 60) + 'px;text-align:right">' + a + de)) : (r = 10, l = 820), $(f).css({
                            color: "white"
                        }), $(f).append(i + "D" + h + l + le + (SW + r) + 'px;text-align:center">' + addPictToString(s.help[e]) + de), b += Math.max(SH, $(f + "D").outerHeight()) + 20)
                    }
                }), $.each(n.paytable_scatters, function(e, t) {
                    f = "#" + (d = "sym_main_" + e);
                    var n = "",
                        o = "",
                        a = divB + d,
                        i = 328,
                        r = 510;
                    g = oS.getSprite(d), $(pt).append(a + _ + 0 + to + b + bibgI + g.src + ");" + bgS + SW + "px " + SH + pd), $.each(t, function(e, t) {
                        t.factor > 0 ? (n = e + ":" + br + n, o = _CTSlotApp.cash(t.factor * currTotalBet) + br + o) : (i = 10, r = 820)
                    }), i > 10 && ($(f).append(a + "T" + h + 50 + le + (SW + 10) + 'px">' + n + de), $(f).append(a + "W" + h + 230 + le + (SW + 60) + 'px;text-align:right">' + o + de)), $(f).css({
                        color: "white"
                    }), $(f).append(a + "D" + h + r + le + (SW + i) + 'px;text-align:center">' + addPictToString(s.help[e]) + de), b += Math.max(SH, $(f + "D").outerHeight(), $(f + "W").outerHeight()) + 20
                }), p = 0, $.each(n.paytable, function(e, t) {
                    n.paytable_wilds && e in n.paytable_wilds || S.unshift(e)
                }), $.each(S, function(e) {
                        if (S[e] < 20) {
                            d = "sym_main_" + S[e], f = "#" + d;
                            var t = "",
                                s = "",
                                o = divB + d;
                            g = oS.getSprite(d), $(pt).append(o + _ + p % 2 * 550 + to + ((SH + 20) * Math.floor(p++/2)+b)+bibgI+g.src+");"+bgS+SW+"px "+SH+pd),$.each(n.paytable[S[e]],function(e,n){t=e+":"+br+t,s=_CTSlotApp.cash(n.factor*currBetPerLine)+br+s}),$(f).css({color:"white"}),$(f).append(o+"T"+h+50+le+(SW+10)+'px">'+t+de),$(f).append(o+"W"+h+210+le+(SW+60)+'px;text-align:right">'+s+de)}else x=!0}),d="",x){var w="";$.each(n.paytable[20],function(e,t){w=_CTSlotApp.cash(t.factor*currBetPerLine)}),d=addPictToString(s.help[20])+w+br+br}var v=19,T=parseInt($(f).css("top"))+Math.max(SH,$(f+"W").outerHeight()),C='<svg id="payLines">';if(!gameAConf.turbo){switch($(y).html(d+langText.LINEStext),$(y).css({top:T+20,color:"white"}),gameConfig.lines_mode){default:var k,A=145,B=gCc>3?50:80,O=gameConfig.lines_mode%5,I=Math.ceil(gameConfig.lines_mode/
                                        5) - 1, W = !0; v = gCc > 3 ? 35 : 55;
                                    for (p = 0; p < gameConfig.lines_mode; p++) k = Math.floor(p / 5), 0 != O && k == I && W && (B += (gCc * v + 45) * (5 - O) >> 1, W = !1), C += m(B + (gCc * v + 45) * (p % 5), A * Math.floor(p / 5), v, v, p, 25, "white"); k = A * Math.ceil(p / 5) + 40;
                                    break;
                                    case "30": case "40": case "50": case "100": A = 105;
                                    for (p = 0; p < gameConfig.lines_mode; p++) C += m(15 + (gCc * v + 20) * (p % 10), A * Math.floor(p / 10), v, v, p, 19, "white"); k = A * Math.floor(p / 10)
                                }
                                $(hb).prepend(C + sv + de), $(pl).css({
                                    top: T += $(y).outerHeight() + 40,
                                    left: -68,
                                    width: 1160,
                                    height: k,
                                    display: bl
                                }), T += k
                            }
                            if (s && s.help && s.help.help_bonus_description || s.extraBet && gameConfig.extra_bet_enabled) $.isArray(s.help.help_bonus_description) ? s.help.help_bonus_description.forEach(function(e) {
                                t += addPictToString(e)
                            }) : gameAConf.help_bonus_description ? gameAConf.help_bonus_description.app.forEach(function(e) {
                                var t = oS.getSprite(e.name);
                                t && ($(pt).append(divB + e.name + stP + bgS + t.width + "px " + t.height + le + e.coord[0] + to + (e.coord[1] + T) + wi + t.width + he + t.height + bgUrl + t.src + divEnd), $(pt).append(divB + e.name + "T" + stP + "font-weight:bold;font-size:30px;line-height:32" + to + (T += e.coord[1]) + wi + e.coord[0] + he + t.height + 'px">' + addPictToString(s.help.help_bonus_description) + de), T += t.height)
                            }) : s.extraBet && gameConfig.extra_bet_enabled ? (t += addPictToString(s.extraBet.on.replace("\r", gameConfig.lines_max_number + gameConfig.extra_bet_factor)), extraBet === gameConfig.extra_bet_factor && (t += addPictToString(s.extraBet.descr))) : t += addPictToString(s.help.help_bonus_description);
                            else if (gameConfig.paytables[gameConfig.subgames_labels.main.subgame_id].paytable_scatters) {
                                var L, R = 0,
                                    j = 0,
                                    E = "",
                                    M = gameConfig.paytables[gameConfig.subgames_labels.main.subgame_id].paytable_scatters;
                                for (var N in M)
                                    for (var D in M[N]) "free_games" == M[N][D].bonus_type && (R = M[N][D].bonus_value, E += (j ? ", " : "") + D, j = 1, L = N - 1)
                            }
                            if (!j || !s.extraBet || gameConfig.extra_bet_enabled && extraBet || (j = 0), j) {
                                t += br + langText.FREE_GAMEStext + br;
                                var P = langText.treeOrMore + E + " " + small + L * smallSymbolW + ediv + langText.freegames + R + langText.freegames1;
                                if (gameConfig.paytables[gameConfig.subgames_labels.free.subgame_id].paytable_scatters) {
                                    for (N in E = "", j = 0, M = gameConfig.paytables[gameConfig.subgames_labels.free.subgame_id].paytable_scatters)
                                        for (D in M[N]) "free_games" == M[N][D].bonus_type && (R = M[N][D].bonus_value, E += (j ? ", " : "") + D, j = 1, L = N - 1);
                                    j && (P += langText.newFreeGames1 + E + " " + divcl + "smallSym_" + (gameAsset.images.free ? "free" : "main") + '"' + bgP + "-" + L * smallSymbolW + ediv + langText.newFreeGames2 + R + langText.newFreeGames3)
                                }
                                gameAConf.help_free_games_multiplier && (P += br + langText.all, gameAConf.help_exept && (P += langText.ex, gameAConf.help_exept.forEach(function(e) {
                                    P += small + e * smallSymbolW + ediv
                                }), P += ", " + br), P += langText.mul + gameAConf.help_free_games_multiplier + "."), s && s.help && s.help.help_fg_additional && (P += br + addPictToString(s.help.help_fg_additional)), t += P
                            }
                            if (gameConfig.double.double_enable && (t += br + br + langText.messDoubleName + br + langText.messDouble0 + String(gameConfig.double.double_enter_limit) + langText.messDouble1 + String(gameConfig.double.double_limit) + langText.messDouble2), "" != jpUrl) {
                                var G = br + br + langText.messJackpotTitle + br;
                                $.each(jpsystems, function(e, s) {
                                    jpsystems[e].is_interactive ? t += G + langText.messJackpotInt : t += G + langText.messJackpot
                                })
                            }
                            if (isMobile || (t += br + br + langText.messKBDPlayTitle + br + langText.messKBDPlay), gameConfig.RTP && gameConfig.RTP[currDenom.label]) {
                                var H = gameConfig.RTP[currDenom.label] || gameConfig.RTP[.01];
                                H.sort(function(e, t) {
                                    return parseInt(e.bet) - parseInt(t.bet)
                                });
                                var z = parseInt(H[0].bet),
                                    F = 0;
                                H.forEach(function(e, t) {
                                    var s = parseInt(e.bet);
                                    currBetPerLine >= s && currBetPerLine >= z && (z = s, F = t)
                                }), t += br + br + "RTP: " + H[F].percent + "%"
                            }
                            switch (historyMax && !opera_mini && (t += br + br + langText.lastGame + document.getElementById("buttonHistory").outerHTML.replace("buttonHistory", "bh1") + br + br), gameConfig.autoplay && (t += br + br + langText.ForAutoplay), t += br + br + (cashOnly ? "" : langText.messStr00) + langText.messStr10 + " " + (1 != gameAConf.lrANDrl ? langText.messStr11 + " " + langText.messStr12 + (gameConfig.paytables[gameConfig.subgames_labels.main.subgame_id].paytable_scatters ? langText.messStr2 : ".") : "") + " " + langText.messStr3, regulation) {
                                case "ro":
                                    t += br + br + '<div id="ROprintHelp" style="background-image: url(&quot;https://rgs-stage.casino-technology.com/cdn/html-interface-stable/1024/menu_button_download.png&quot;); display: block; left: 455px; position: absolute;width:200px;height:100px;"></div>' + br
                            }
                            switch (t += br + br + "ver. " + appVer + "/" + CTSlotAppVersion, $(m4).css({
                                top: T,
                                left: -40,
                                width: 1110,
                                "font-size": 32,
                                "line-height": "40px",
                                color: "white"
                            }), $(m4).html(t), regulation) {
                                case "ro":
                                    setButtonOn("#ROprintHelp", c)
                            }
                            gameAConf.help_color && ($("body").append(divB + "c" + den), $("#c").css({
                                position: "absolute",
                                letf: "0px",
                                top: "0px",
                                width: $(window).width(),
                                height: $(window).height(),
                                "background-color": "rgba(0,0,0,.5)",
                                "z-index": 1
                            })), $("#bh1").css({
                                display: bl,
                                left: 500,
                                position: "absolute"
                            }), $(GC).append(divB + "scrollbar-container" + den), $(sc).css({
                                position: "absolute",
                                right: "0px",
                                bottom: "0px",
                                top: "0px",
                                width: "22px",
                                "background-color": "white",
                                border: "3px solid black",
                                "border-radius": "13px",
                                "z-index": 6,
                                opacity: .4
                            }), $(sc).append(divB + "scrollbar" + den), $(sb).css({
                                position: "absolute",
                                left: "-7px",
                                height: $(sc).height() * $(window).height() / scaleRatio / ($(m4).position().top / scaleRatio + $(m4).height()) + "px",
                                width: "30px",
                                "border-radius": "20px",
                                border: "3px solid black",
                                "background-color": "white",
                                "z-index": 7
                            }), $(sc).css("display", $(m4).position().top + $(m4).height() * scaleRatio <= $(window).height() ? no : bl), scl = $(sc).height() - $(sb).outerHeight() + parseInt($(sc).css("border-bottom-width")), isMobile ? ($(hb).on("touchstart mousedown", o), $(hb).on("touchmove", a), $(hb).on("touchend touchcancel", i)) : ($(sb).on("mouseover", setcursorPointer), $(sb).on("mouseout", setcursorAuto), $(sb).on("mousedown", r), document.addEventListener ? (document.addEventListener("mousewheel", l, !1), document.addEventListener("DOMMouseScroll", l, !1)) : document.attachEvent("onmousewheel", l))
                        }
                    }

                    function sizeHandler() {
                        window.scrollTo(0, 1);
                        var e, t = window.screen.width == window.innerWidth && window.screen.height == window.innerHeight;
                        null != oS && fullScreenButonOn && !opera_mini && $("#buttonFullScreen").css({
                            "background-image": "url(" + oS.getSprite(t ? "button_NOTfull" : "button_full").src + ")"
                        }), inHelp && gameAConf.help_color && $("#c").css({
                            width: $(window).width(),
                            height: $(window).height()
                        }), $(window).width() < $(window).height() && !opera_mini ? (isMobile && !tablet && (e = "scale(1) translateX(-50%)", $("#soundBtns").css({
                            top: "60%",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), e = "scale(.7) translate(-71%,-71%)", $(".wrapper").css({
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), e = "scale(1)", $("#video").css({
                            top: "-278px",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), e = "scale(.5)", $("#withSound").css({
                            right: "-45px",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), $("#withoutSound").css({
                            left: "-45px",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), e = "scale(.7)", $("#topJackpot").css({
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e,
                            top: "-100px"
                        }), $(gmI).css({
                            bottom: "200px"
                        }), e = "scale(2)", $(gm).css({
                            left: "350px",
                            bottom: -240,
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), $(bGMb).css({
                            left: "354px",
                            bottom: -240,
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), $(bGMb1).css({
                            left: "680px",
                            bottom: -240,
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), $(st).css({
                            left: "680px",
                            bottom: -240,
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), $(bSb).css({
                            left: "680px",
                            bottom: -240,
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), $(bSb1).css({
                            left: inDouble ? 354 : 680,
                            bottom: -240,
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), e = "scale(1.5)", $(bd).css({
                            left: "1000px",
                            bottom: -230,
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), $(bmh).css({
                            left: "50px",
                            bottom: -230,
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        })), portret || ($(GC).css("height", "1536px"), !isMobile || tablet || opera_mini ? $(GL).css("top", "768px") : ($(GL).css({
                            top: "568px"
                        }), $("#gameDoubleInterface").css({
                            bottom: "205px"
                        })), "" != jpUrl && (tabloJackpotLevelsTimer = setInterval(function() {
                            jpStartShow || (++jpNum >= jp_current_levelsTop.length && (jpNum = 0), _CTSlotApp.showJackpotTop())
                        }, 1e4), inHelp || $("#topJackpot").css("display", bl)), oldJpAmmount = [], portret = !0)) : (!isMobile || tablet || opera_mini || (e = "scale(1.2)", $(bSb1).css({
                            left: "20px",
                            bottom: "0px",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), $(bGMb1).css({
                            left: "1010px",
                            bottom: "0px",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), e = "scale(.5) translateX(-50%)", $("#soundBtns").css({
                            top: "70%",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), e = "scale(.5) translate(-100%,-10%)", $(".wrapper").css({
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), e = "scale(1.5)", $("#video").css({
                            top: "-328px",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), e = "scale(.75) translateX(350%)", $("#withSound").css({
                            right: "initial",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), e = "scale(.75) translateX(-280%)", $("#withoutSound").css({
                            left: "initial",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        })), e = "scale(1)", $(bd).css({
                            left: "1050px",
                            bottom: "658px",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), $(bmh).css({
                            left: "0px",
                            bottom: "658px",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), $("#topJackpot").css({
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e,
                            top: "0px"
                        }), e = "scale(1.2)", $(bSb).css({
                            left: "1010px",
                            bottom: "0px",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), $(gmI).css({
                            bottom: "0px"
                        }), $(gm).css({
                            left: "20px",
                            bottom: "0px",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), $(bGMb).css({
                            left: "20px",
                            bottom: "0px",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), $(st).css({
                            left: "1010px",
                            bottom: "0px",
                            "-ms-transform": e,
                            "-webkit-transform": e,
                            transform: e
                        }), portret && (clearInterval(tabloJackpotLevelsTimer), tabloJackpotLevelsTimer = null, $(GC).css("height", "768px"), $(GL).css("top", "0px"), $("#gameDoubleInterface").css({
                            bottom: "0px"
                        }), $("#topJackpot").css("display", no), portret = !1)), scaleRatio = Math.min($(window).width() / $(GC).width(), $(window).height() / $(GC).height()), scaleRatio > 1 && (scaleRatio = 1);
                        var s = "translateX(-50%) translateY(-50%) scale(" + scaleRatio + ")";
                        if ($(GC).css({
                                "-ms-transform": s,
                                "-webkit-transform": s,
                                transform: s
                            }), inHelp) {
                            $(sb).css("height", $(sc).height() * $(window).height() / ($(m4).position().top + $(m4).height() * scaleRatio) + "px"), $(sc).css("display", $(m4).position().top + $(m4).height() * scaleRatio <= $(window).height() ? no : bl), scl = $(sc).height() - $(sb).outerHeight() + parseInt($(sc).css("border-bottom-width")), hpp = -$(GC).position().top / scaleRatio, $(sb).css("top", Math.min(scl, Math.max(0, $(sb).position().top / scaleRatio)));
                            var n = $(sb).position().top * ($(m4).position().top / scaleRatio + $(m4).height() - $(window).height() / scaleRatio) / scl / scaleRatio;
                            $(hb).css("top", hpp - n), $(hbE).css("top", n)
                        }
                    }
                    $(window).resize(sizeHandler), window.addEventListener("orientationchange", function() {
                        sizeHandler()
                    });